
lab3_2_ex1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002e08  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08002f14  08002f14  00012f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002f34  08002f34  00020080  2**0
                  CONTENTS
  4 .ARM          00000000  08002f34  08002f34  00020080  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002f34  08002f34  00020080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002f34  08002f34  00012f34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002f38  08002f38  00012f38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000080  20000000  08002f3c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b4  20000080  08002fbc  00020080  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000134  08002fbc  00020134  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020080  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009f06  00000000  00000000  000200a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ab0  00000000  00000000  00029faf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000aa8  00000000  00000000  0002ba60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00016e15  00000000  00000000  0002c508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   0000bd79  00000000  00000000  0004331d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    00082491  00000000  00000000  0004f096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000053  00000000  00000000  000d1527  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00000998  00000000  00000000  000d1580  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000029e4  00000000  00000000  000d1f18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000080 	.word	0x20000080
 8000128:	00000000 	.word	0x00000000
 800012c:	08002efc 	.word	0x08002efc

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000084 	.word	0x20000084
 8000148:	08002efc 	.word	0x08002efc

0800014c <fsm_for_input_processing>:
#include "global.h"
#include "timer.h"



 void fsm_for_input_processing (){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
 	switch (State){
 8000150:	4b76      	ldr	r3, [pc, #472]	; (800032c <fsm_for_input_processing+0x1e0>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	3b01      	subs	r3, #1
 8000156:	2b03      	cmp	r3, #3
 8000158:	f200 8171 	bhi.w	800043e <fsm_for_input_processing+0x2f2>
 800015c:	a201      	add	r2, pc, #4	; (adr r2, 8000164 <fsm_for_input_processing+0x18>)
 800015e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000162:	bf00      	nop
 8000164:	08000175 	.word	0x08000175
 8000168:	080001a5 	.word	0x080001a5
 800016c:	08000269 	.word	0x08000269
 8000170:	08000361 	.word	0x08000361
 		case MODE1:
 			fsm_automatic_1();
 8000174:	f001 fa96 	bl	80016a4 <fsm_automatic_1>
 			fsm_automatic_2();
 8000178:	f001 fb02 	bl	8001780 <fsm_automatic_2>
 			display_two_7SEG();
 800017c:	f000 fc4c 	bl	8000a18 <display_two_7SEG>
 			if(button_flag[0] == 1 ){
 8000180:	4b6b      	ldr	r3, [pc, #428]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	2b01      	cmp	r3, #1
 8000186:	f040 815c 	bne.w	8000442 <fsm_for_input_processing+0x2f6>
 				button_flag[0] = 0;
 800018a:	4b69      	ldr	r3, [pc, #420]	; (8000330 <fsm_for_input_processing+0x1e4>)
 800018c:	2200      	movs	r2, #0
 800018e:	601a      	str	r2, [r3, #0]
 				clear_led();
 8000190:	f000 fa32 	bl	80005f8 <clear_led>
 				setTimer6(10000);
 8000194:	f242 7010 	movw	r0, #10000	; 0x2710
 8000198:	f001 f958 	bl	800144c <setTimer6>
 				State = MODE2;
 800019c:	4b63      	ldr	r3, [pc, #396]	; (800032c <fsm_for_input_processing+0x1e0>)
 800019e:	2202      	movs	r2, #2
 80001a0:	601a      	str	r2, [r3, #0]
 			}
 			break;
 80001a2:	e14e      	b.n	8000442 <fsm_for_input_processing+0x2f6>
 		case MODE2:
 			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 80001a4:	4b62      	ldr	r3, [pc, #392]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80001a6:	681b      	ldr	r3, [r3, #0]
 80001a8:	2b01      	cmp	r3, #1
 80001aa:	d007      	beq.n	80001bc <fsm_for_input_processing+0x70>
 80001ac:	4b60      	ldr	r3, [pc, #384]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80001ae:	685b      	ldr	r3, [r3, #4]
 80001b0:	2b01      	cmp	r3, #1
 80001b2:	d003      	beq.n	80001bc <fsm_for_input_processing+0x70>
 80001b4:	4b5e      	ldr	r3, [pc, #376]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80001b6:	689b      	ldr	r3, [r3, #8]
 80001b8:	2b01      	cmp	r3, #1
 80001ba:	d103      	bne.n	80001c4 <fsm_for_input_processing+0x78>
 				setTimer6(10000);
 80001bc:	f242 7010 	movw	r0, #10000	; 0x2710
 80001c0:	f001 f944 	bl	800144c <setTimer6>
 			}
 			if (timer_flag6 == 1){
 80001c4:	4b5b      	ldr	r3, [pc, #364]	; (8000334 <fsm_for_input_processing+0x1e8>)
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	2b01      	cmp	r3, #1
 80001ca:	d116      	bne.n	80001fa <fsm_for_input_processing+0xae>
 				status1 = 1;
 80001cc:	4b5a      	ldr	r3, [pc, #360]	; (8000338 <fsm_for_input_processing+0x1ec>)
 80001ce:	2201      	movs	r2, #1
 80001d0:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 80001d2:	4b5a      	ldr	r3, [pc, #360]	; (800033c <fsm_for_input_processing+0x1f0>)
 80001d4:	2201      	movs	r2, #1
 80001d6:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 80001d8:	4b59      	ldr	r3, [pc, #356]	; (8000340 <fsm_for_input_processing+0x1f4>)
 80001da:	2201      	movs	r2, #1
 80001dc:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 80001de:	4b59      	ldr	r3, [pc, #356]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80001e0:	2201      	movs	r2, #1
 80001e2:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 80001e4:	4b58      	ldr	r3, [pc, #352]	; (8000348 <fsm_for_input_processing+0x1fc>)
 80001e6:	2201      	movs	r2, #1
 80001e8:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 80001ea:	4b58      	ldr	r3, [pc, #352]	; (800034c <fsm_for_input_processing+0x200>)
 80001ec:	2201      	movs	r2, #1
 80001ee:	601a      	str	r2, [r3, #0]
 				clear_led();
 80001f0:	f000 fa02 	bl	80005f8 <clear_led>
 				State = MODE1;
 80001f4:	4b4d      	ldr	r3, [pc, #308]	; (800032c <fsm_for_input_processing+0x1e0>)
 80001f6:	2201      	movs	r2, #1
 80001f8:	601a      	str	r2, [r3, #0]
 			}

 			blink_led_red();
 80001fa:	f000 fd4d 	bl	8000c98 <blink_led_red>
 			if(button_flag[1] == 1){
 80001fe:	4b4c      	ldr	r3, [pc, #304]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000200:	685b      	ldr	r3, [r3, #4]
 8000202:	2b01      	cmp	r3, #1
 8000204:	d10e      	bne.n	8000224 <fsm_for_input_processing+0xd8>
 				button_flag[1] = 0;
 8000206:	4b4a      	ldr	r3, [pc, #296]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000208:	2200      	movs	r2, #0
 800020a:	605a      	str	r2, [r3, #4]
 				bufferRed++;
 800020c:	4b50      	ldr	r3, [pc, #320]	; (8000350 <fsm_for_input_processing+0x204>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	3301      	adds	r3, #1
 8000212:	4a4f      	ldr	r2, [pc, #316]	; (8000350 <fsm_for_input_processing+0x204>)
 8000214:	6013      	str	r3, [r2, #0]
 				if(bufferRed > 99){
 8000216:	4b4e      	ldr	r3, [pc, #312]	; (8000350 <fsm_for_input_processing+0x204>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	2b63      	cmp	r3, #99	; 0x63
 800021c:	dd02      	ble.n	8000224 <fsm_for_input_processing+0xd8>
 					bufferRed = 1;
 800021e:	4b4c      	ldr	r3, [pc, #304]	; (8000350 <fsm_for_input_processing+0x204>)
 8000220:	2201      	movs	r2, #1
 8000222:	601a      	str	r2, [r3, #0]
 				}
 			}
 			update_two_7SEG(bufferRed);
 8000224:	4b4a      	ldr	r3, [pc, #296]	; (8000350 <fsm_for_input_processing+0x204>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4618      	mov	r0, r3
 800022a:	f000 fe37 	bl	8000e9c <update_two_7SEG>
 			if(button_flag[2] == 1){
 800022e:	4b40      	ldr	r3, [pc, #256]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000230:	689b      	ldr	r3, [r3, #8]
 8000232:	2b01      	cmp	r3, #1
 8000234:	d106      	bne.n	8000244 <fsm_for_input_processing+0xf8>
 				button_flag[2] = 0;
 8000236:	4b3e      	ldr	r3, [pc, #248]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000238:	2200      	movs	r2, #0
 800023a:	609a      	str	r2, [r3, #8]
 				time_red = bufferRed;
 800023c:	4b44      	ldr	r3, [pc, #272]	; (8000350 <fsm_for_input_processing+0x204>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	4a44      	ldr	r2, [pc, #272]	; (8000354 <fsm_for_input_processing+0x208>)
 8000242:	6013      	str	r3, [r2, #0]
 			}
 			if (button_flag[0]){
 8000244:	4b3a      	ldr	r3, [pc, #232]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	2b00      	cmp	r3, #0
 800024a:	f000 80fc 	beq.w	8000446 <fsm_for_input_processing+0x2fa>
 				button_flag[0] = 0;
 800024e:	4b38      	ldr	r3, [pc, #224]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000250:	2200      	movs	r2, #0
 8000252:	601a      	str	r2, [r3, #0]
 				clear_led();
 8000254:	f000 f9d0 	bl	80005f8 <clear_led>
 				setTimer6(10000);
 8000258:	f242 7010 	movw	r0, #10000	; 0x2710
 800025c:	f001 f8f6 	bl	800144c <setTimer6>
 				State = MODE3;
 8000260:	4b32      	ldr	r3, [pc, #200]	; (800032c <fsm_for_input_processing+0x1e0>)
 8000262:	2203      	movs	r2, #3
 8000264:	601a      	str	r2, [r3, #0]
 			}
 			break;
 8000266:	e0ee      	b.n	8000446 <fsm_for_input_processing+0x2fa>
 		case MODE3:
			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 8000268:	4b31      	ldr	r3, [pc, #196]	; (8000330 <fsm_for_input_processing+0x1e4>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b01      	cmp	r3, #1
 800026e:	d007      	beq.n	8000280 <fsm_for_input_processing+0x134>
 8000270:	4b2f      	ldr	r3, [pc, #188]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000272:	685b      	ldr	r3, [r3, #4]
 8000274:	2b01      	cmp	r3, #1
 8000276:	d003      	beq.n	8000280 <fsm_for_input_processing+0x134>
 8000278:	4b2d      	ldr	r3, [pc, #180]	; (8000330 <fsm_for_input_processing+0x1e4>)
 800027a:	689b      	ldr	r3, [r3, #8]
 800027c:	2b01      	cmp	r3, #1
 800027e:	d103      	bne.n	8000288 <fsm_for_input_processing+0x13c>
 				setTimer6(10000);
 8000280:	f242 7010 	movw	r0, #10000	; 0x2710
 8000284:	f001 f8e2 	bl	800144c <setTimer6>
 			}
 			if (timer_flag6 == 1){
 8000288:	4b2a      	ldr	r3, [pc, #168]	; (8000334 <fsm_for_input_processing+0x1e8>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	2b01      	cmp	r3, #1
 800028e:	d116      	bne.n	80002be <fsm_for_input_processing+0x172>
 				status1 = 1;
 8000290:	4b29      	ldr	r3, [pc, #164]	; (8000338 <fsm_for_input_processing+0x1ec>)
 8000292:	2201      	movs	r2, #1
 8000294:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 8000296:	4b29      	ldr	r3, [pc, #164]	; (800033c <fsm_for_input_processing+0x1f0>)
 8000298:	2201      	movs	r2, #1
 800029a:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 800029c:	4b28      	ldr	r3, [pc, #160]	; (8000340 <fsm_for_input_processing+0x1f4>)
 800029e:	2201      	movs	r2, #1
 80002a0:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 80002a2:	4b28      	ldr	r3, [pc, #160]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002a4:	2201      	movs	r2, #1
 80002a6:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 80002a8:	4b27      	ldr	r3, [pc, #156]	; (8000348 <fsm_for_input_processing+0x1fc>)
 80002aa:	2201      	movs	r2, #1
 80002ac:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 80002ae:	4b27      	ldr	r3, [pc, #156]	; (800034c <fsm_for_input_processing+0x200>)
 80002b0:	2201      	movs	r2, #1
 80002b2:	601a      	str	r2, [r3, #0]
 				clear_led();
 80002b4:	f000 f9a0 	bl	80005f8 <clear_led>
 				State = MODE1;
 80002b8:	4b1c      	ldr	r3, [pc, #112]	; (800032c <fsm_for_input_processing+0x1e0>)
 80002ba:	2201      	movs	r2, #1
 80002bc:	601a      	str	r2, [r3, #0]
 			}
 			blink_led_amber();
 80002be:	f000 fd41 	bl	8000d44 <blink_led_amber>
 			if(button_flag[1] == 1){
 80002c2:	4b1b      	ldr	r3, [pc, #108]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80002c4:	685b      	ldr	r3, [r3, #4]
 80002c6:	2b01      	cmp	r3, #1
 80002c8:	d10e      	bne.n	80002e8 <fsm_for_input_processing+0x19c>
 				button_flag[1] = 0;
 80002ca:	4b19      	ldr	r3, [pc, #100]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80002cc:	2200      	movs	r2, #0
 80002ce:	605a      	str	r2, [r3, #4]
 				bufferAmber++;
 80002d0:	4b21      	ldr	r3, [pc, #132]	; (8000358 <fsm_for_input_processing+0x20c>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	3301      	adds	r3, #1
 80002d6:	4a20      	ldr	r2, [pc, #128]	; (8000358 <fsm_for_input_processing+0x20c>)
 80002d8:	6013      	str	r3, [r2, #0]
 				if(bufferAmber > 99){
 80002da:	4b1f      	ldr	r3, [pc, #124]	; (8000358 <fsm_for_input_processing+0x20c>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	2b63      	cmp	r3, #99	; 0x63
 80002e0:	dd02      	ble.n	80002e8 <fsm_for_input_processing+0x19c>
 					bufferAmber = 1;
 80002e2:	4b1d      	ldr	r3, [pc, #116]	; (8000358 <fsm_for_input_processing+0x20c>)
 80002e4:	2201      	movs	r2, #1
 80002e6:	601a      	str	r2, [r3, #0]
 				}
 			}
 			if(button_flag[2] == 1){
 80002e8:	4b11      	ldr	r3, [pc, #68]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80002ea:	689b      	ldr	r3, [r3, #8]
 80002ec:	2b01      	cmp	r3, #1
 80002ee:	d106      	bne.n	80002fe <fsm_for_input_processing+0x1b2>
 				button_flag[2] = 0;
 80002f0:	4b0f      	ldr	r3, [pc, #60]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80002f2:	2200      	movs	r2, #0
 80002f4:	609a      	str	r2, [r3, #8]
 				time_amber = bufferAmber;
 80002f6:	4b18      	ldr	r3, [pc, #96]	; (8000358 <fsm_for_input_processing+0x20c>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a18      	ldr	r2, [pc, #96]	; (800035c <fsm_for_input_processing+0x210>)
 80002fc:	6013      	str	r3, [r2, #0]
 			}
 			update_two_7SEG(bufferAmber);
 80002fe:	4b16      	ldr	r3, [pc, #88]	; (8000358 <fsm_for_input_processing+0x20c>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	4618      	mov	r0, r3
 8000304:	f000 fdca 	bl	8000e9c <update_two_7SEG>
 			if (button_flag[0]){
 8000308:	4b09      	ldr	r3, [pc, #36]	; (8000330 <fsm_for_input_processing+0x1e4>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	2b00      	cmp	r3, #0
 800030e:	f000 809c 	beq.w	800044a <fsm_for_input_processing+0x2fe>
 				button_flag[0] = 0;
 8000312:	4b07      	ldr	r3, [pc, #28]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000314:	2200      	movs	r2, #0
 8000316:	601a      	str	r2, [r3, #0]
 				setTimer6(10000);
 8000318:	f242 7010 	movw	r0, #10000	; 0x2710
 800031c:	f001 f896 	bl	800144c <setTimer6>
 				clear_led();
 8000320:	f000 f96a 	bl	80005f8 <clear_led>
 				State = MODE4;
 8000324:	4b01      	ldr	r3, [pc, #4]	; (800032c <fsm_for_input_processing+0x1e0>)
 8000326:	2204      	movs	r2, #4
 8000328:	601a      	str	r2, [r3, #0]
 			}
 			break;
 800032a:	e08e      	b.n	800044a <fsm_for_input_processing+0x2fe>
 800032c:	2000001c 	.word	0x2000001c
 8000330:	2000009c 	.word	0x2000009c
 8000334:	200000c0 	.word	0x200000c0
 8000338:	20000000 	.word	0x20000000
 800033c:	20000004 	.word	0x20000004
 8000340:	20000008 	.word	0x20000008
 8000344:	2000000c 	.word	0x2000000c
 8000348:	20000010 	.word	0x20000010
 800034c:	20000014 	.word	0x20000014
 8000350:	2000002c 	.word	0x2000002c
 8000354:	20000020 	.word	0x20000020
 8000358:	20000030 	.word	0x20000030
 800035c:	20000024 	.word	0x20000024
 		case MODE4:
			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 8000360:	4b3c      	ldr	r3, [pc, #240]	; (8000454 <fsm_for_input_processing+0x308>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	2b01      	cmp	r3, #1
 8000366:	d007      	beq.n	8000378 <fsm_for_input_processing+0x22c>
 8000368:	4b3a      	ldr	r3, [pc, #232]	; (8000454 <fsm_for_input_processing+0x308>)
 800036a:	685b      	ldr	r3, [r3, #4]
 800036c:	2b01      	cmp	r3, #1
 800036e:	d003      	beq.n	8000378 <fsm_for_input_processing+0x22c>
 8000370:	4b38      	ldr	r3, [pc, #224]	; (8000454 <fsm_for_input_processing+0x308>)
 8000372:	689b      	ldr	r3, [r3, #8]
 8000374:	2b01      	cmp	r3, #1
 8000376:	d103      	bne.n	8000380 <fsm_for_input_processing+0x234>
 				setTimer6(10000);
 8000378:	f242 7010 	movw	r0, #10000	; 0x2710
 800037c:	f001 f866 	bl	800144c <setTimer6>
 			}
 			if (timer_flag6 == 1){
 8000380:	4b35      	ldr	r3, [pc, #212]	; (8000458 <fsm_for_input_processing+0x30c>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	2b01      	cmp	r3, #1
 8000386:	d116      	bne.n	80003b6 <fsm_for_input_processing+0x26a>
 				status1 = 1;
 8000388:	4b34      	ldr	r3, [pc, #208]	; (800045c <fsm_for_input_processing+0x310>)
 800038a:	2201      	movs	r2, #1
 800038c:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 800038e:	4b34      	ldr	r3, [pc, #208]	; (8000460 <fsm_for_input_processing+0x314>)
 8000390:	2201      	movs	r2, #1
 8000392:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 8000394:	4b33      	ldr	r3, [pc, #204]	; (8000464 <fsm_for_input_processing+0x318>)
 8000396:	2201      	movs	r2, #1
 8000398:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 800039a:	4b33      	ldr	r3, [pc, #204]	; (8000468 <fsm_for_input_processing+0x31c>)
 800039c:	2201      	movs	r2, #1
 800039e:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 80003a0:	4b32      	ldr	r3, [pc, #200]	; (800046c <fsm_for_input_processing+0x320>)
 80003a2:	2201      	movs	r2, #1
 80003a4:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 80003a6:	4b32      	ldr	r3, [pc, #200]	; (8000470 <fsm_for_input_processing+0x324>)
 80003a8:	2201      	movs	r2, #1
 80003aa:	601a      	str	r2, [r3, #0]
 				clear_led();
 80003ac:	f000 f924 	bl	80005f8 <clear_led>
 				State = MODE1;
 80003b0:	4b30      	ldr	r3, [pc, #192]	; (8000474 <fsm_for_input_processing+0x328>)
 80003b2:	2201      	movs	r2, #1
 80003b4:	601a      	str	r2, [r3, #0]
 			}
 			blink_led_green();
 80003b6:	f000 fd1b 	bl	8000df0 <blink_led_green>
 			if(button_flag[1] == 1){
 80003ba:	4b26      	ldr	r3, [pc, #152]	; (8000454 <fsm_for_input_processing+0x308>)
 80003bc:	685b      	ldr	r3, [r3, #4]
 80003be:	2b01      	cmp	r3, #1
 80003c0:	d10e      	bne.n	80003e0 <fsm_for_input_processing+0x294>
 				button_flag[1] = 0;
 80003c2:	4b24      	ldr	r3, [pc, #144]	; (8000454 <fsm_for_input_processing+0x308>)
 80003c4:	2200      	movs	r2, #0
 80003c6:	605a      	str	r2, [r3, #4]
 				bufferGreen++;
 80003c8:	4b2b      	ldr	r3, [pc, #172]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	3301      	adds	r3, #1
 80003ce:	4a2a      	ldr	r2, [pc, #168]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003d0:	6013      	str	r3, [r2, #0]
 				if(bufferGreen > 99){
 80003d2:	4b29      	ldr	r3, [pc, #164]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	2b63      	cmp	r3, #99	; 0x63
 80003d8:	dd02      	ble.n	80003e0 <fsm_for_input_processing+0x294>
 					bufferGreen = 1;
 80003da:	4b27      	ldr	r3, [pc, #156]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003dc:	2201      	movs	r2, #1
 80003de:	601a      	str	r2, [r3, #0]
 				}
 			}
 			update_two_7SEG(bufferGreen);
 80003e0:	4b25      	ldr	r3, [pc, #148]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4618      	mov	r0, r3
 80003e6:	f000 fd59 	bl	8000e9c <update_two_7SEG>
 			if(button_flag[2] == 1){
 80003ea:	4b1a      	ldr	r3, [pc, #104]	; (8000454 <fsm_for_input_processing+0x308>)
 80003ec:	689b      	ldr	r3, [r3, #8]
 80003ee:	2b01      	cmp	r3, #1
 80003f0:	d106      	bne.n	8000400 <fsm_for_input_processing+0x2b4>
 				button_flag[2] = 0;
 80003f2:	4b18      	ldr	r3, [pc, #96]	; (8000454 <fsm_for_input_processing+0x308>)
 80003f4:	2200      	movs	r2, #0
 80003f6:	609a      	str	r2, [r3, #8]
 				time_green = bufferGreen;
 80003f8:	4b1f      	ldr	r3, [pc, #124]	; (8000478 <fsm_for_input_processing+0x32c>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a1f      	ldr	r2, [pc, #124]	; (800047c <fsm_for_input_processing+0x330>)
 80003fe:	6013      	str	r3, [r2, #0]
 			}
 			if(button_flag[0]){
 8000400:	4b14      	ldr	r3, [pc, #80]	; (8000454 <fsm_for_input_processing+0x308>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	2b00      	cmp	r3, #0
 8000406:	d022      	beq.n	800044e <fsm_for_input_processing+0x302>
 				button_flag[0] = 0;
 8000408:	4b12      	ldr	r3, [pc, #72]	; (8000454 <fsm_for_input_processing+0x308>)
 800040a:	2200      	movs	r2, #0
 800040c:	601a      	str	r2, [r3, #0]
 				State = MODE1;
 800040e:	4b19      	ldr	r3, [pc, #100]	; (8000474 <fsm_for_input_processing+0x328>)
 8000410:	2201      	movs	r2, #1
 8000412:	601a      	str	r2, [r3, #0]
 				clear_led();
 8000414:	f000 f8f0 	bl	80005f8 <clear_led>
 				status1 = 1;
 8000418:	4b10      	ldr	r3, [pc, #64]	; (800045c <fsm_for_input_processing+0x310>)
 800041a:	2201      	movs	r2, #1
 800041c:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 800041e:	4b10      	ldr	r3, [pc, #64]	; (8000460 <fsm_for_input_processing+0x314>)
 8000420:	2201      	movs	r2, #1
 8000422:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 8000424:	4b0f      	ldr	r3, [pc, #60]	; (8000464 <fsm_for_input_processing+0x318>)
 8000426:	2201      	movs	r2, #1
 8000428:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 800042a:	4b0f      	ldr	r3, [pc, #60]	; (8000468 <fsm_for_input_processing+0x31c>)
 800042c:	2201      	movs	r2, #1
 800042e:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 8000430:	4b0e      	ldr	r3, [pc, #56]	; (800046c <fsm_for_input_processing+0x320>)
 8000432:	2201      	movs	r2, #1
 8000434:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 8000436:	4b0e      	ldr	r3, [pc, #56]	; (8000470 <fsm_for_input_processing+0x324>)
 8000438:	2201      	movs	r2, #1
 800043a:	601a      	str	r2, [r3, #0]
 			}
 			break;
 800043c:	e007      	b.n	800044e <fsm_for_input_processing+0x302>
 		default:
 			break;
 800043e:	bf00      	nop
 8000440:	e006      	b.n	8000450 <fsm_for_input_processing+0x304>
 			break;
 8000442:	bf00      	nop
 8000444:	e004      	b.n	8000450 <fsm_for_input_processing+0x304>
 			break;
 8000446:	bf00      	nop
 8000448:	e002      	b.n	8000450 <fsm_for_input_processing+0x304>
 			break;
 800044a:	bf00      	nop
 800044c:	e000      	b.n	8000450 <fsm_for_input_processing+0x304>
 			break;
 800044e:	bf00      	nop
 	}
 }
 8000450:	bf00      	nop
 8000452:	bd80      	pop	{r7, pc}
 8000454:	2000009c 	.word	0x2000009c
 8000458:	200000c0 	.word	0x200000c0
 800045c:	20000000 	.word	0x20000000
 8000460:	20000004 	.word	0x20000004
 8000464:	20000008 	.word	0x20000008
 8000468:	2000000c 	.word	0x2000000c
 800046c:	20000010 	.word	0x20000010
 8000470:	20000014 	.word	0x20000014
 8000474:	2000001c 	.word	0x2000001c
 8000478:	20000034 	.word	0x20000034
 800047c:	20000028 	.word	0x20000028

08000480 <subKeyProcess>:


int button_flag[3] = {0,0,0};
int TimeOutForKeyPress[3] = {500,50,500};

void subKeyProcess(int index){
 8000480:	b480      	push	{r7}
 8000482:	b083      	sub	sp, #12
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
	//TODO
	button_flag[index] = 1;
 8000488:	4a04      	ldr	r2, [pc, #16]	; (800049c <subKeyProcess+0x1c>)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	2101      	movs	r1, #1
 800048e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000492:	bf00      	nop
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	bc80      	pop	{r7}
 800049a:	4770      	bx	lr
 800049c:	2000009c 	.word	0x2000009c

080004a0 <getKeyInput>:

void getKeyInput(){
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b082      	sub	sp, #8
 80004a4:	af00      	add	r7, sp, #0
	for(int i = 0;i<3;i++){
 80004a6:	2300      	movs	r3, #0
 80004a8:	607b      	str	r3, [r7, #4]
 80004aa:	e08f      	b.n	80005cc <getKeyInput+0x12c>
		KeyReg2[i] = KeyReg1[i];
 80004ac:	4a4c      	ldr	r2, [pc, #304]	; (80005e0 <getKeyInput+0x140>)
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004b4:	494b      	ldr	r1, [pc, #300]	; (80005e4 <getKeyInput+0x144>)
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		KeyReg1[i] = KeyReg0[i];
 80004bc:	4a4a      	ldr	r2, [pc, #296]	; (80005e8 <getKeyInput+0x148>)
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004c4:	4946      	ldr	r1, [pc, #280]	; (80005e0 <getKeyInput+0x140>)
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		if(i == 0){
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	2b00      	cmp	r3, #0
 80004d0:	d10a      	bne.n	80004e8 <getKeyInput+0x48>
			KeyReg0[i] = HAL_GPIO_ReadPin(button1_GPIO_Port, button1_Pin);
 80004d2:	2180      	movs	r1, #128	; 0x80
 80004d4:	4845      	ldr	r0, [pc, #276]	; (80005ec <getKeyInput+0x14c>)
 80004d6:	f001 fcd1 	bl	8001e7c <HAL_GPIO_ReadPin>
 80004da:	4603      	mov	r3, r0
 80004dc:	4619      	mov	r1, r3
 80004de:	4a42      	ldr	r2, [pc, #264]	; (80005e8 <getKeyInput+0x148>)
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80004e6:	e01c      	b.n	8000522 <getKeyInput+0x82>
		}
		else if(i == 1){
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	2b01      	cmp	r3, #1
 80004ec:	d10b      	bne.n	8000506 <getKeyInput+0x66>
			KeyReg0[i] = HAL_GPIO_ReadPin(button2_GPIO_Port, button2_Pin);
 80004ee:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004f2:	483e      	ldr	r0, [pc, #248]	; (80005ec <getKeyInput+0x14c>)
 80004f4:	f001 fcc2 	bl	8001e7c <HAL_GPIO_ReadPin>
 80004f8:	4603      	mov	r3, r0
 80004fa:	4619      	mov	r1, r3
 80004fc:	4a3a      	ldr	r2, [pc, #232]	; (80005e8 <getKeyInput+0x148>)
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000504:	e00d      	b.n	8000522 <getKeyInput+0x82>
		}
		else if (i == 2){
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	2b02      	cmp	r3, #2
 800050a:	d10a      	bne.n	8000522 <getKeyInput+0x82>
			KeyReg0[i] = HAL_GPIO_ReadPin(button3_GPIO_Port, button3_Pin);
 800050c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000510:	4836      	ldr	r0, [pc, #216]	; (80005ec <getKeyInput+0x14c>)
 8000512:	f001 fcb3 	bl	8001e7c <HAL_GPIO_ReadPin>
 8000516:	4603      	mov	r3, r0
 8000518:	4619      	mov	r1, r3
 800051a:	4a33      	ldr	r2, [pc, #204]	; (80005e8 <getKeyInput+0x148>)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		}
		if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
 8000522:	4a2f      	ldr	r2, [pc, #188]	; (80005e0 <getKeyInput+0x140>)
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800052a:	492f      	ldr	r1, [pc, #188]	; (80005e8 <getKeyInput+0x148>)
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000532:	429a      	cmp	r2, r3
 8000534:	d147      	bne.n	80005c6 <getKeyInput+0x126>
 8000536:	4a2a      	ldr	r2, [pc, #168]	; (80005e0 <getKeyInput+0x140>)
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800053e:	4929      	ldr	r1, [pc, #164]	; (80005e4 <getKeyInput+0x144>)
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000546:	429a      	cmp	r2, r3
 8000548:	d13d      	bne.n	80005c6 <getKeyInput+0x126>
			if (KeyReg2[i] != KeyReg3[i]){
 800054a:	4a26      	ldr	r2, [pc, #152]	; (80005e4 <getKeyInput+0x144>)
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000552:	4927      	ldr	r1, [pc, #156]	; (80005f0 <getKeyInput+0x150>)
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800055a:	429a      	cmp	r2, r3
 800055c:	d019      	beq.n	8000592 <getKeyInput+0xf2>
			  KeyReg3[i] = KeyReg2[i];
 800055e:	4a21      	ldr	r2, [pc, #132]	; (80005e4 <getKeyInput+0x144>)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000566:	4922      	ldr	r1, [pc, #136]	; (80005f0 <getKeyInput+0x150>)
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			  if (KeyReg3[i] == PRESSED_STATE){
 800056e:	4a20      	ldr	r2, [pc, #128]	; (80005f0 <getKeyInput+0x150>)
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000576:	2b00      	cmp	r3, #0
 8000578:	d125      	bne.n	80005c6 <getKeyInput+0x126>
				  if(i == 1){
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	2b01      	cmp	r3, #1
 800057e:	d104      	bne.n	800058a <getKeyInput+0xea>
					  TimeOutForKeyPress[i] = 50;
 8000580:	4a1c      	ldr	r2, [pc, #112]	; (80005f4 <getKeyInput+0x154>)
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	2132      	movs	r1, #50	; 0x32
 8000586:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				  }
				  subKeyProcess(i);
 800058a:	6878      	ldr	r0, [r7, #4]
 800058c:	f7ff ff78 	bl	8000480 <subKeyProcess>
 8000590:	e019      	b.n	80005c6 <getKeyInput+0x126>
			  }
			}
			else{
				 if (i == 1) TimeOutForKeyPress[i]--;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	2b01      	cmp	r3, #1
 8000596:	d108      	bne.n	80005aa <getKeyInput+0x10a>
 8000598:	4a16      	ldr	r2, [pc, #88]	; (80005f4 <getKeyInput+0x154>)
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005a0:	1e5a      	subs	r2, r3, #1
 80005a2:	4914      	ldr	r1, [pc, #80]	; (80005f4 <getKeyInput+0x154>)
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 if (i == 1 && TimeOutForKeyPress[i] == 0){
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	2b01      	cmp	r3, #1
 80005ae:	d10a      	bne.n	80005c6 <getKeyInput+0x126>
 80005b0:	4a10      	ldr	r2, [pc, #64]	; (80005f4 <getKeyInput+0x154>)
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d104      	bne.n	80005c6 <getKeyInput+0x126>
					 KeyReg3[i] = NORMAL_STATE;
 80005bc:	4a0c      	ldr	r2, [pc, #48]	; (80005f0 <getKeyInput+0x150>)
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	2101      	movs	r1, #1
 80005c2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0;i<3;i++){
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	3301      	adds	r3, #1
 80005ca:	607b      	str	r3, [r7, #4]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	2b02      	cmp	r3, #2
 80005d0:	f77f af6c 	ble.w	80004ac <getKeyInput+0xc>
				}
			}
		}
	}
}
 80005d4:	bf00      	nop
 80005d6:	bf00      	nop
 80005d8:	3708      	adds	r7, #8
 80005da:	46bd      	mov	sp, r7
 80005dc:	bd80      	pop	{r7, pc}
 80005de:	bf00      	nop
 80005e0:	20000044 	.word	0x20000044
 80005e4:	20000050 	.word	0x20000050
 80005e8:	20000038 	.word	0x20000038
 80005ec:	40010800 	.word	0x40010800
 80005f0:	2000005c 	.word	0x2000005c
 80005f4:	20000068 	.word	0x20000068

080005f8 <clear_led>:
#include "led_display.h"
#include "trafficLight.h"
#include"timer.h"
#include "global.h"

void clear_led(){
 80005f8:	b580      	push	{r7, lr}
 80005fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 80005fc:	2201      	movs	r2, #1
 80005fe:	2104      	movs	r1, #4
 8000600:	480e      	ldr	r0, [pc, #56]	; (800063c <clear_led+0x44>)
 8000602:	f001 fc52 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 8000606:	2201      	movs	r2, #1
 8000608:	2120      	movs	r1, #32
 800060a:	480c      	ldr	r0, [pc, #48]	; (800063c <clear_led+0x44>)
 800060c:	f001 fc4d 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 8000610:	2201      	movs	r2, #1
 8000612:	2108      	movs	r1, #8
 8000614:	4809      	ldr	r0, [pc, #36]	; (800063c <clear_led+0x44>)
 8000616:	f001 fc48 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 800061a:	2201      	movs	r2, #1
 800061c:	2140      	movs	r1, #64	; 0x40
 800061e:	4807      	ldr	r0, [pc, #28]	; (800063c <clear_led+0x44>)
 8000620:	f001 fc43 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 8000624:	2201      	movs	r2, #1
 8000626:	2102      	movs	r1, #2
 8000628:	4804      	ldr	r0, [pc, #16]	; (800063c <clear_led+0x44>)
 800062a:	f001 fc3e 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 800062e:	2201      	movs	r2, #1
 8000630:	2110      	movs	r1, #16
 8000632:	4802      	ldr	r0, [pc, #8]	; (800063c <clear_led+0x44>)
 8000634:	f001 fc39 	bl	8001eaa <HAL_GPIO_WritePin>
}
 8000638:	bf00      	nop
 800063a:	bd80      	pop	{r7, pc}
 800063c:	40010800 	.word	0x40010800

08000640 <state_7seg1>:
void state_7seg1(int a ,int b , int c , int d , int e ,int f, int g){
 8000640:	b580      	push	{r7, lr}
 8000642:	b084      	sub	sp, #16
 8000644:	af00      	add	r7, sp, #0
 8000646:	60f8      	str	r0, [r7, #12]
 8000648:	60b9      	str	r1, [r7, #8]
 800064a:	607a      	str	r2, [r7, #4]
 800064c:	603b      	str	r3, [r7, #0]
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2,a);
 800064e:	68fb      	ldr	r3, [r7, #12]
 8000650:	b2db      	uxtb	r3, r3
 8000652:	461a      	mov	r2, r3
 8000654:	2104      	movs	r1, #4
 8000656:	4819      	ldr	r0, [pc, #100]	; (80006bc <state_7seg1+0x7c>)
 8000658:	f001 fc27 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3,b);
 800065c:	68bb      	ldr	r3, [r7, #8]
 800065e:	b2db      	uxtb	r3, r3
 8000660:	461a      	mov	r2, r3
 8000662:	2108      	movs	r1, #8
 8000664:	4815      	ldr	r0, [pc, #84]	; (80006bc <state_7seg1+0x7c>)
 8000666:	f001 fc20 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4,c);
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	b2db      	uxtb	r3, r3
 800066e:	461a      	mov	r2, r3
 8000670:	2110      	movs	r1, #16
 8000672:	4812      	ldr	r0, [pc, #72]	; (80006bc <state_7seg1+0x7c>)
 8000674:	f001 fc19 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5,d);
 8000678:	683b      	ldr	r3, [r7, #0]
 800067a:	b2db      	uxtb	r3, r3
 800067c:	461a      	mov	r2, r3
 800067e:	2120      	movs	r1, #32
 8000680:	480e      	ldr	r0, [pc, #56]	; (80006bc <state_7seg1+0x7c>)
 8000682:	f001 fc12 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6,e);
 8000686:	69bb      	ldr	r3, [r7, #24]
 8000688:	b2db      	uxtb	r3, r3
 800068a:	461a      	mov	r2, r3
 800068c:	2140      	movs	r1, #64	; 0x40
 800068e:	480b      	ldr	r0, [pc, #44]	; (80006bc <state_7seg1+0x7c>)
 8000690:	f001 fc0b 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7,f);
 8000694:	69fb      	ldr	r3, [r7, #28]
 8000696:	b2db      	uxtb	r3, r3
 8000698:	461a      	mov	r2, r3
 800069a:	2180      	movs	r1, #128	; 0x80
 800069c:	4807      	ldr	r0, [pc, #28]	; (80006bc <state_7seg1+0x7c>)
 800069e:	f001 fc04 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8,g);
 80006a2:	6a3b      	ldr	r3, [r7, #32]
 80006a4:	b2db      	uxtb	r3, r3
 80006a6:	461a      	mov	r2, r3
 80006a8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80006ac:	4803      	ldr	r0, [pc, #12]	; (80006bc <state_7seg1+0x7c>)
 80006ae:	f001 fbfc 	bl	8001eaa <HAL_GPIO_WritePin>
 }
 80006b2:	bf00      	nop
 80006b4:	3710      	adds	r7, #16
 80006b6:	46bd      	mov	sp, r7
 80006b8:	bd80      	pop	{r7, pc}
 80006ba:	bf00      	nop
 80006bc:	40010c00 	.word	0x40010c00

080006c0 <display7SEG1>:
void display7SEG1(int num){
 80006c0:	b580      	push	{r7, lr}
 80006c2:	b086      	sub	sp, #24
 80006c4:	af04      	add	r7, sp, #16
 80006c6:	6078      	str	r0, [r7, #4]
	 if (num == 0){
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d10c      	bne.n	80006e8 <display7SEG1+0x28>
		state_7seg1(0,0,0,0,0,0,1);
 80006ce:	2301      	movs	r3, #1
 80006d0:	9302      	str	r3, [sp, #8]
 80006d2:	2300      	movs	r3, #0
 80006d4:	9301      	str	r3, [sp, #4]
 80006d6:	2300      	movs	r3, #0
 80006d8:	9300      	str	r3, [sp, #0]
 80006da:	2300      	movs	r3, #0
 80006dc:	2200      	movs	r2, #0
 80006de:	2100      	movs	r1, #0
 80006e0:	2000      	movs	r0, #0
 80006e2:	f7ff ffad 	bl	8000640 <state_7seg1>
		 state_7seg1(0,0,0,0,1,0,0);
	 }
	 else if(num >= 10){
		 state_7seg1(0,0,0,0,0,0,1);
	 }
}
 80006e6:	e09e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 1){
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	2b01      	cmp	r3, #1
 80006ec:	d10c      	bne.n	8000708 <display7SEG1+0x48>
		 state_7seg1(1,0,0,1,1,1,1);
 80006ee:	2301      	movs	r3, #1
 80006f0:	9302      	str	r3, [sp, #8]
 80006f2:	2301      	movs	r3, #1
 80006f4:	9301      	str	r3, [sp, #4]
 80006f6:	2301      	movs	r3, #1
 80006f8:	9300      	str	r3, [sp, #0]
 80006fa:	2301      	movs	r3, #1
 80006fc:	2200      	movs	r2, #0
 80006fe:	2100      	movs	r1, #0
 8000700:	2001      	movs	r0, #1
 8000702:	f7ff ff9d 	bl	8000640 <state_7seg1>
}
 8000706:	e08e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 2){
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	2b02      	cmp	r3, #2
 800070c:	d10c      	bne.n	8000728 <display7SEG1+0x68>
		 state_7seg1(0,0,1,0,0,1,0);
 800070e:	2300      	movs	r3, #0
 8000710:	9302      	str	r3, [sp, #8]
 8000712:	2301      	movs	r3, #1
 8000714:	9301      	str	r3, [sp, #4]
 8000716:	2300      	movs	r3, #0
 8000718:	9300      	str	r3, [sp, #0]
 800071a:	2300      	movs	r3, #0
 800071c:	2201      	movs	r2, #1
 800071e:	2100      	movs	r1, #0
 8000720:	2000      	movs	r0, #0
 8000722:	f7ff ff8d 	bl	8000640 <state_7seg1>
}
 8000726:	e07e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 3){
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	2b03      	cmp	r3, #3
 800072c:	d10c      	bne.n	8000748 <display7SEG1+0x88>
		 state_7seg1(0,0,0,0,1,1,0);
 800072e:	2300      	movs	r3, #0
 8000730:	9302      	str	r3, [sp, #8]
 8000732:	2301      	movs	r3, #1
 8000734:	9301      	str	r3, [sp, #4]
 8000736:	2301      	movs	r3, #1
 8000738:	9300      	str	r3, [sp, #0]
 800073a:	2300      	movs	r3, #0
 800073c:	2200      	movs	r2, #0
 800073e:	2100      	movs	r1, #0
 8000740:	2000      	movs	r0, #0
 8000742:	f7ff ff7d 	bl	8000640 <state_7seg1>
}
 8000746:	e06e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 4){
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	2b04      	cmp	r3, #4
 800074c:	d10c      	bne.n	8000768 <display7SEG1+0xa8>
		 state_7seg1(1,0,0,1,1,0,0);
 800074e:	2300      	movs	r3, #0
 8000750:	9302      	str	r3, [sp, #8]
 8000752:	2300      	movs	r3, #0
 8000754:	9301      	str	r3, [sp, #4]
 8000756:	2301      	movs	r3, #1
 8000758:	9300      	str	r3, [sp, #0]
 800075a:	2301      	movs	r3, #1
 800075c:	2200      	movs	r2, #0
 800075e:	2100      	movs	r1, #0
 8000760:	2001      	movs	r0, #1
 8000762:	f7ff ff6d 	bl	8000640 <state_7seg1>
}
 8000766:	e05e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 5){
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	2b05      	cmp	r3, #5
 800076c:	d10c      	bne.n	8000788 <display7SEG1+0xc8>
		 state_7seg1(0,1,0,0,1,0,0);
 800076e:	2300      	movs	r3, #0
 8000770:	9302      	str	r3, [sp, #8]
 8000772:	2300      	movs	r3, #0
 8000774:	9301      	str	r3, [sp, #4]
 8000776:	2301      	movs	r3, #1
 8000778:	9300      	str	r3, [sp, #0]
 800077a:	2300      	movs	r3, #0
 800077c:	2200      	movs	r2, #0
 800077e:	2101      	movs	r1, #1
 8000780:	2000      	movs	r0, #0
 8000782:	f7ff ff5d 	bl	8000640 <state_7seg1>
}
 8000786:	e04e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 6){
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	2b06      	cmp	r3, #6
 800078c:	d10c      	bne.n	80007a8 <display7SEG1+0xe8>
		 state_7seg1(0,1,0,0,0,0,0);
 800078e:	2300      	movs	r3, #0
 8000790:	9302      	str	r3, [sp, #8]
 8000792:	2300      	movs	r3, #0
 8000794:	9301      	str	r3, [sp, #4]
 8000796:	2300      	movs	r3, #0
 8000798:	9300      	str	r3, [sp, #0]
 800079a:	2300      	movs	r3, #0
 800079c:	2200      	movs	r2, #0
 800079e:	2101      	movs	r1, #1
 80007a0:	2000      	movs	r0, #0
 80007a2:	f7ff ff4d 	bl	8000640 <state_7seg1>
}
 80007a6:	e03e      	b.n	8000826 <display7SEG1+0x166>
	 else if(num == 7){
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	2b07      	cmp	r3, #7
 80007ac:	d10c      	bne.n	80007c8 <display7SEG1+0x108>
		 state_7seg1(0,0,0,1,1,1,1);
 80007ae:	2301      	movs	r3, #1
 80007b0:	9302      	str	r3, [sp, #8]
 80007b2:	2301      	movs	r3, #1
 80007b4:	9301      	str	r3, [sp, #4]
 80007b6:	2301      	movs	r3, #1
 80007b8:	9300      	str	r3, [sp, #0]
 80007ba:	2301      	movs	r3, #1
 80007bc:	2200      	movs	r2, #0
 80007be:	2100      	movs	r1, #0
 80007c0:	2000      	movs	r0, #0
 80007c2:	f7ff ff3d 	bl	8000640 <state_7seg1>
}
 80007c6:	e02e      	b.n	8000826 <display7SEG1+0x166>
	 else if (num == 8){
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	2b08      	cmp	r3, #8
 80007cc:	d10c      	bne.n	80007e8 <display7SEG1+0x128>
		 state_7seg1(0,0,0,0,0,0,0);
 80007ce:	2300      	movs	r3, #0
 80007d0:	9302      	str	r3, [sp, #8]
 80007d2:	2300      	movs	r3, #0
 80007d4:	9301      	str	r3, [sp, #4]
 80007d6:	2300      	movs	r3, #0
 80007d8:	9300      	str	r3, [sp, #0]
 80007da:	2300      	movs	r3, #0
 80007dc:	2200      	movs	r2, #0
 80007de:	2100      	movs	r1, #0
 80007e0:	2000      	movs	r0, #0
 80007e2:	f7ff ff2d 	bl	8000640 <state_7seg1>
}
 80007e6:	e01e      	b.n	8000826 <display7SEG1+0x166>
	 else if(num == 9){
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	2b09      	cmp	r3, #9
 80007ec:	d10c      	bne.n	8000808 <display7SEG1+0x148>
		 state_7seg1(0,0,0,0,1,0,0);
 80007ee:	2300      	movs	r3, #0
 80007f0:	9302      	str	r3, [sp, #8]
 80007f2:	2300      	movs	r3, #0
 80007f4:	9301      	str	r3, [sp, #4]
 80007f6:	2301      	movs	r3, #1
 80007f8:	9300      	str	r3, [sp, #0]
 80007fa:	2300      	movs	r3, #0
 80007fc:	2200      	movs	r2, #0
 80007fe:	2100      	movs	r1, #0
 8000800:	2000      	movs	r0, #0
 8000802:	f7ff ff1d 	bl	8000640 <state_7seg1>
}
 8000806:	e00e      	b.n	8000826 <display7SEG1+0x166>
	 else if(num >= 10){
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	2b09      	cmp	r3, #9
 800080c:	dd0b      	ble.n	8000826 <display7SEG1+0x166>
		 state_7seg1(0,0,0,0,0,0,1);
 800080e:	2301      	movs	r3, #1
 8000810:	9302      	str	r3, [sp, #8]
 8000812:	2300      	movs	r3, #0
 8000814:	9301      	str	r3, [sp, #4]
 8000816:	2300      	movs	r3, #0
 8000818:	9300      	str	r3, [sp, #0]
 800081a:	2300      	movs	r3, #0
 800081c:	2200      	movs	r2, #0
 800081e:	2100      	movs	r1, #0
 8000820:	2000      	movs	r0, #0
 8000822:	f7ff ff0d 	bl	8000640 <state_7seg1>
}
 8000826:	bf00      	nop
 8000828:	3708      	adds	r7, #8
 800082a:	46bd      	mov	sp, r7
 800082c:	bd80      	pop	{r7, pc}
	...

08000830 <state_7seg2>:

void state_7seg2(int a ,int b , int c , int d , int e ,int f, int g){
 8000830:	b580      	push	{r7, lr}
 8000832:	b084      	sub	sp, #16
 8000834:	af00      	add	r7, sp, #0
 8000836:	60f8      	str	r0, [r7, #12]
 8000838:	60b9      	str	r1, [r7, #8]
 800083a:	607a      	str	r2, [r7, #4]
 800083c:	603b      	str	r3, [r7, #0]
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9,a);
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	b2db      	uxtb	r3, r3
 8000842:	461a      	mov	r2, r3
 8000844:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000848:	481b      	ldr	r0, [pc, #108]	; (80008b8 <state_7seg2+0x88>)
 800084a:	f001 fb2e 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10,b);
 800084e:	68bb      	ldr	r3, [r7, #8]
 8000850:	b2db      	uxtb	r3, r3
 8000852:	461a      	mov	r2, r3
 8000854:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000858:	4817      	ldr	r0, [pc, #92]	; (80008b8 <state_7seg2+0x88>)
 800085a:	f001 fb26 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11,c);
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	b2db      	uxtb	r3, r3
 8000862:	461a      	mov	r2, r3
 8000864:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000868:	4813      	ldr	r0, [pc, #76]	; (80008b8 <state_7seg2+0x88>)
 800086a:	f001 fb1e 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12,d);
 800086e:	683b      	ldr	r3, [r7, #0]
 8000870:	b2db      	uxtb	r3, r3
 8000872:	461a      	mov	r2, r3
 8000874:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000878:	480f      	ldr	r0, [pc, #60]	; (80008b8 <state_7seg2+0x88>)
 800087a:	f001 fb16 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13,e);
 800087e:	69bb      	ldr	r3, [r7, #24]
 8000880:	b2db      	uxtb	r3, r3
 8000882:	461a      	mov	r2, r3
 8000884:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000888:	480b      	ldr	r0, [pc, #44]	; (80008b8 <state_7seg2+0x88>)
 800088a:	f001 fb0e 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,f);
 800088e:	69fb      	ldr	r3, [r7, #28]
 8000890:	b2db      	uxtb	r3, r3
 8000892:	461a      	mov	r2, r3
 8000894:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000898:	4807      	ldr	r0, [pc, #28]	; (80008b8 <state_7seg2+0x88>)
 800089a:	f001 fb06 	bl	8001eaa <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15,g);
 800089e:	6a3b      	ldr	r3, [r7, #32]
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	461a      	mov	r2, r3
 80008a4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80008a8:	4803      	ldr	r0, [pc, #12]	; (80008b8 <state_7seg2+0x88>)
 80008aa:	f001 fafe 	bl	8001eaa <HAL_GPIO_WritePin>
 }
 80008ae:	bf00      	nop
 80008b0:	3710      	adds	r7, #16
 80008b2:	46bd      	mov	sp, r7
 80008b4:	bd80      	pop	{r7, pc}
 80008b6:	bf00      	nop
 80008b8:	40010c00 	.word	0x40010c00

080008bc <display7SEG2>:
void display7SEG2(int num){
 80008bc:	b580      	push	{r7, lr}
 80008be:	b086      	sub	sp, #24
 80008c0:	af04      	add	r7, sp, #16
 80008c2:	6078      	str	r0, [r7, #4]
	 if (num == 0){
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	d10b      	bne.n	80008e2 <display7SEG2+0x26>
		state_7seg2(0,0,0,0,0,0,1);
 80008ca:	2301      	movs	r3, #1
 80008cc:	9302      	str	r3, [sp, #8]
 80008ce:	2300      	movs	r3, #0
 80008d0:	9301      	str	r3, [sp, #4]
 80008d2:	2300      	movs	r3, #0
 80008d4:	9300      	str	r3, [sp, #0]
 80008d6:	2300      	movs	r3, #0
 80008d8:	2200      	movs	r2, #0
 80008da:	2100      	movs	r1, #0
 80008dc:	2000      	movs	r0, #0
 80008de:	f7ff ffa7 	bl	8000830 <state_7seg2>
	 }
	 if (num == 1){
 80008e2:	687b      	ldr	r3, [r7, #4]
 80008e4:	2b01      	cmp	r3, #1
 80008e6:	d10b      	bne.n	8000900 <display7SEG2+0x44>
		 state_7seg2(1,0,0,1,1,1,1);
 80008e8:	2301      	movs	r3, #1
 80008ea:	9302      	str	r3, [sp, #8]
 80008ec:	2301      	movs	r3, #1
 80008ee:	9301      	str	r3, [sp, #4]
 80008f0:	2301      	movs	r3, #1
 80008f2:	9300      	str	r3, [sp, #0]
 80008f4:	2301      	movs	r3, #1
 80008f6:	2200      	movs	r2, #0
 80008f8:	2100      	movs	r1, #0
 80008fa:	2001      	movs	r0, #1
 80008fc:	f7ff ff98 	bl	8000830 <state_7seg2>
	 }
	 if (num == 2){
 8000900:	687b      	ldr	r3, [r7, #4]
 8000902:	2b02      	cmp	r3, #2
 8000904:	d10b      	bne.n	800091e <display7SEG2+0x62>
		 state_7seg2(0,0,1,0,0,1,0);
 8000906:	2300      	movs	r3, #0
 8000908:	9302      	str	r3, [sp, #8]
 800090a:	2301      	movs	r3, #1
 800090c:	9301      	str	r3, [sp, #4]
 800090e:	2300      	movs	r3, #0
 8000910:	9300      	str	r3, [sp, #0]
 8000912:	2300      	movs	r3, #0
 8000914:	2201      	movs	r2, #1
 8000916:	2100      	movs	r1, #0
 8000918:	2000      	movs	r0, #0
 800091a:	f7ff ff89 	bl	8000830 <state_7seg2>
	 }
	 if (num == 3){
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	2b03      	cmp	r3, #3
 8000922:	d10b      	bne.n	800093c <display7SEG2+0x80>
		 state_7seg2(0,0,0,0,1,1,0);
 8000924:	2300      	movs	r3, #0
 8000926:	9302      	str	r3, [sp, #8]
 8000928:	2301      	movs	r3, #1
 800092a:	9301      	str	r3, [sp, #4]
 800092c:	2301      	movs	r3, #1
 800092e:	9300      	str	r3, [sp, #0]
 8000930:	2300      	movs	r3, #0
 8000932:	2200      	movs	r2, #0
 8000934:	2100      	movs	r1, #0
 8000936:	2000      	movs	r0, #0
 8000938:	f7ff ff7a 	bl	8000830 <state_7seg2>
	 }
	 if (num == 4){
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	2b04      	cmp	r3, #4
 8000940:	d10b      	bne.n	800095a <display7SEG2+0x9e>
		 state_7seg2(1,0,0,1,1,0,0);
 8000942:	2300      	movs	r3, #0
 8000944:	9302      	str	r3, [sp, #8]
 8000946:	2300      	movs	r3, #0
 8000948:	9301      	str	r3, [sp, #4]
 800094a:	2301      	movs	r3, #1
 800094c:	9300      	str	r3, [sp, #0]
 800094e:	2301      	movs	r3, #1
 8000950:	2200      	movs	r2, #0
 8000952:	2100      	movs	r1, #0
 8000954:	2001      	movs	r0, #1
 8000956:	f7ff ff6b 	bl	8000830 <state_7seg2>
	 }
	 if (num == 5){
 800095a:	687b      	ldr	r3, [r7, #4]
 800095c:	2b05      	cmp	r3, #5
 800095e:	d10b      	bne.n	8000978 <display7SEG2+0xbc>
		 state_7seg2(0,1,0,0,1,0,0);
 8000960:	2300      	movs	r3, #0
 8000962:	9302      	str	r3, [sp, #8]
 8000964:	2300      	movs	r3, #0
 8000966:	9301      	str	r3, [sp, #4]
 8000968:	2301      	movs	r3, #1
 800096a:	9300      	str	r3, [sp, #0]
 800096c:	2300      	movs	r3, #0
 800096e:	2200      	movs	r2, #0
 8000970:	2101      	movs	r1, #1
 8000972:	2000      	movs	r0, #0
 8000974:	f7ff ff5c 	bl	8000830 <state_7seg2>
	 }
	 if (num == 6){
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	2b06      	cmp	r3, #6
 800097c:	d10b      	bne.n	8000996 <display7SEG2+0xda>
		 state_7seg2(0,1,0,0,0,0,0);
 800097e:	2300      	movs	r3, #0
 8000980:	9302      	str	r3, [sp, #8]
 8000982:	2300      	movs	r3, #0
 8000984:	9301      	str	r3, [sp, #4]
 8000986:	2300      	movs	r3, #0
 8000988:	9300      	str	r3, [sp, #0]
 800098a:	2300      	movs	r3, #0
 800098c:	2200      	movs	r2, #0
 800098e:	2101      	movs	r1, #1
 8000990:	2000      	movs	r0, #0
 8000992:	f7ff ff4d 	bl	8000830 <state_7seg2>
	 }
	 if(num == 7){
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	2b07      	cmp	r3, #7
 800099a:	d10b      	bne.n	80009b4 <display7SEG2+0xf8>
		 state_7seg2(0,0,0,1,1,1,1);
 800099c:	2301      	movs	r3, #1
 800099e:	9302      	str	r3, [sp, #8]
 80009a0:	2301      	movs	r3, #1
 80009a2:	9301      	str	r3, [sp, #4]
 80009a4:	2301      	movs	r3, #1
 80009a6:	9300      	str	r3, [sp, #0]
 80009a8:	2301      	movs	r3, #1
 80009aa:	2200      	movs	r2, #0
 80009ac:	2100      	movs	r1, #0
 80009ae:	2000      	movs	r0, #0
 80009b0:	f7ff ff3e 	bl	8000830 <state_7seg2>
	 }
	 if (num == 8){
 80009b4:	687b      	ldr	r3, [r7, #4]
 80009b6:	2b08      	cmp	r3, #8
 80009b8:	d10b      	bne.n	80009d2 <display7SEG2+0x116>
		 state_7seg2(0,0,0,0,0,0,0);
 80009ba:	2300      	movs	r3, #0
 80009bc:	9302      	str	r3, [sp, #8]
 80009be:	2300      	movs	r3, #0
 80009c0:	9301      	str	r3, [sp, #4]
 80009c2:	2300      	movs	r3, #0
 80009c4:	9300      	str	r3, [sp, #0]
 80009c6:	2300      	movs	r3, #0
 80009c8:	2200      	movs	r2, #0
 80009ca:	2100      	movs	r1, #0
 80009cc:	2000      	movs	r0, #0
 80009ce:	f7ff ff2f 	bl	8000830 <state_7seg2>
	 }
	 if(num == 9){
 80009d2:	687b      	ldr	r3, [r7, #4]
 80009d4:	2b09      	cmp	r3, #9
 80009d6:	d10b      	bne.n	80009f0 <display7SEG2+0x134>
		 state_7seg2(0,0,0,0,1,0,0);
 80009d8:	2300      	movs	r3, #0
 80009da:	9302      	str	r3, [sp, #8]
 80009dc:	2300      	movs	r3, #0
 80009de:	9301      	str	r3, [sp, #4]
 80009e0:	2301      	movs	r3, #1
 80009e2:	9300      	str	r3, [sp, #0]
 80009e4:	2300      	movs	r3, #0
 80009e6:	2200      	movs	r2, #0
 80009e8:	2100      	movs	r1, #0
 80009ea:	2000      	movs	r0, #0
 80009ec:	f7ff ff20 	bl	8000830 <state_7seg2>
	 }
	 if(num >= 10){
 80009f0:	687b      	ldr	r3, [r7, #4]
 80009f2:	2b09      	cmp	r3, #9
 80009f4:	dd0b      	ble.n	8000a0e <display7SEG2+0x152>
		 state_7seg2(0,0,0,0,0,0,1);
 80009f6:	2301      	movs	r3, #1
 80009f8:	9302      	str	r3, [sp, #8]
 80009fa:	2300      	movs	r3, #0
 80009fc:	9301      	str	r3, [sp, #4]
 80009fe:	2300      	movs	r3, #0
 8000a00:	9300      	str	r3, [sp, #0]
 8000a02:	2300      	movs	r3, #0
 8000a04:	2200      	movs	r2, #0
 8000a06:	2100      	movs	r1, #0
 8000a08:	2000      	movs	r0, #0
 8000a0a:	f7ff ff11 	bl	8000830 <state_7seg2>
	 }
}
 8000a0e:	bf00      	nop
 8000a10:	3708      	adds	r7, #8
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bd80      	pop	{r7, pc}
	...

08000a18 <display_two_7SEG>:


int count_7seg1;
int count_7seg2;
void display_two_7SEG(){
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	af00      	add	r7, sp, #0
	switch(status3){
 8000a1c:	4b93      	ldr	r3, [pc, #588]	; (8000c6c <display_two_7SEG+0x254>)
 8000a1e:	681b      	ldr	r3, [r3, #0]
 8000a20:	2b03      	cmp	r3, #3
 8000a22:	f000 80d7 	beq.w	8000bd4 <display_two_7SEG+0x1bc>
 8000a26:	2b03      	cmp	r3, #3
 8000a28:	f300 8118 	bgt.w	8000c5c <display_two_7SEG+0x244>
 8000a2c:	2b01      	cmp	r3, #1
 8000a2e:	d002      	beq.n	8000a36 <display_two_7SEG+0x1e>
 8000a30:	2b02      	cmp	r3, #2
 8000a32:	d03e      	beq.n	8000ab2 <display_two_7SEG+0x9a>

				setTimer2(500);
			}
			break;
		default:
			break;
 8000a34:	e112      	b.n	8000c5c <display_two_7SEG+0x244>
			status3 = SEG_1;
 8000a36:	4b8d      	ldr	r3, [pc, #564]	; (8000c6c <display_two_7SEG+0x254>)
 8000a38:	2202      	movs	r2, #2
 8000a3a:	601a      	str	r2, [r3, #0]
			count_7seg1 = time_red;
 8000a3c:	4b8c      	ldr	r3, [pc, #560]	; (8000c70 <display_two_7SEG+0x258>)
 8000a3e:	681b      	ldr	r3, [r3, #0]
 8000a40:	4a8c      	ldr	r2, [pc, #560]	; (8000c74 <display_two_7SEG+0x25c>)
 8000a42:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000a44:	2200      	movs	r2, #0
 8000a46:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000a4a:	488b      	ldr	r0, [pc, #556]	; (8000c78 <display_two_7SEG+0x260>)
 8000a4c:	f001 fa2d 	bl	8001eaa <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000a50:	2201      	movs	r2, #1
 8000a52:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a56:	4888      	ldr	r0, [pc, #544]	; (8000c78 <display_two_7SEG+0x260>)
 8000a58:	f001 fa27 	bl	8001eaa <HAL_GPIO_WritePin>
			display7SEG1(count_7seg1/10);
 8000a5c:	4b85      	ldr	r3, [pc, #532]	; (8000c74 <display_two_7SEG+0x25c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	4a86      	ldr	r2, [pc, #536]	; (8000c7c <display_two_7SEG+0x264>)
 8000a62:	fb82 1203 	smull	r1, r2, r2, r3
 8000a66:	1092      	asrs	r2, r2, #2
 8000a68:	17db      	asrs	r3, r3, #31
 8000a6a:	1ad3      	subs	r3, r2, r3
 8000a6c:	4618      	mov	r0, r3
 8000a6e:	f7ff fe27 	bl	80006c0 <display7SEG1>
			count_7seg2 = time_green;
 8000a72:	4b83      	ldr	r3, [pc, #524]	; (8000c80 <display_two_7SEG+0x268>)
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	4a83      	ldr	r2, [pc, #524]	; (8000c84 <display_two_7SEG+0x26c>)
 8000a78:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000a80:	487d      	ldr	r0, [pc, #500]	; (8000c78 <display_two_7SEG+0x260>)
 8000a82:	f001 fa12 	bl	8001eaa <HAL_GPIO_WritePin>
		    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000a86:	2201      	movs	r2, #1
 8000a88:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000a8c:	487a      	ldr	r0, [pc, #488]	; (8000c78 <display_two_7SEG+0x260>)
 8000a8e:	f001 fa0c 	bl	8001eaa <HAL_GPIO_WritePin>
			display7SEG2(count_7seg2/10);
 8000a92:	4b7c      	ldr	r3, [pc, #496]	; (8000c84 <display_two_7SEG+0x26c>)
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	4a79      	ldr	r2, [pc, #484]	; (8000c7c <display_two_7SEG+0x264>)
 8000a98:	fb82 1203 	smull	r1, r2, r2, r3
 8000a9c:	1092      	asrs	r2, r2, #2
 8000a9e:	17db      	asrs	r3, r3, #31
 8000aa0:	1ad3      	subs	r3, r2, r3
 8000aa2:	4618      	mov	r0, r3
 8000aa4:	f7ff ff0a 	bl	80008bc <display7SEG2>
			setTimer2(500);
 8000aa8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000aac:	f000 fc8c 	bl	80013c8 <setTimer2>
			break;
 8000ab0:	e0d9      	b.n	8000c66 <display_two_7SEG+0x24e>
			if (status1 == AUTO_GREEN1 && count_7seg1 == 0){
 8000ab2:	4b75      	ldr	r3, [pc, #468]	; (8000c88 <display_two_7SEG+0x270>)
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	2b03      	cmp	r3, #3
 8000ab8:	d108      	bne.n	8000acc <display_two_7SEG+0xb4>
 8000aba:	4b6e      	ldr	r3, [pc, #440]	; (8000c74 <display_two_7SEG+0x25c>)
 8000abc:	681b      	ldr	r3, [r3, #0]
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d104      	bne.n	8000acc <display_two_7SEG+0xb4>
				count_7seg1 = time_green;
 8000ac2:	4b6f      	ldr	r3, [pc, #444]	; (8000c80 <display_two_7SEG+0x268>)
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	4a6b      	ldr	r2, [pc, #428]	; (8000c74 <display_two_7SEG+0x25c>)
 8000ac8:	6013      	str	r3, [r2, #0]
 8000aca:	e018      	b.n	8000afe <display_two_7SEG+0xe6>
			else if (status1 == AUTO_YELLOW1 && count_7seg1 == 0){
 8000acc:	4b6e      	ldr	r3, [pc, #440]	; (8000c88 <display_two_7SEG+0x270>)
 8000ace:	681b      	ldr	r3, [r3, #0]
 8000ad0:	2b04      	cmp	r3, #4
 8000ad2:	d108      	bne.n	8000ae6 <display_two_7SEG+0xce>
 8000ad4:	4b67      	ldr	r3, [pc, #412]	; (8000c74 <display_two_7SEG+0x25c>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	d104      	bne.n	8000ae6 <display_two_7SEG+0xce>
				count_7seg1 = time_amber;
 8000adc:	4b6b      	ldr	r3, [pc, #428]	; (8000c8c <display_two_7SEG+0x274>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	4a64      	ldr	r2, [pc, #400]	; (8000c74 <display_two_7SEG+0x25c>)
 8000ae2:	6013      	str	r3, [r2, #0]
 8000ae4:	e00b      	b.n	8000afe <display_two_7SEG+0xe6>
			else if (status1 == AUTO_RED1 && count_7seg1 == 0){
 8000ae6:	4b68      	ldr	r3, [pc, #416]	; (8000c88 <display_two_7SEG+0x270>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	2b02      	cmp	r3, #2
 8000aec:	d107      	bne.n	8000afe <display_two_7SEG+0xe6>
 8000aee:	4b61      	ldr	r3, [pc, #388]	; (8000c74 <display_two_7SEG+0x25c>)
 8000af0:	681b      	ldr	r3, [r3, #0]
 8000af2:	2b00      	cmp	r3, #0
 8000af4:	d103      	bne.n	8000afe <display_two_7SEG+0xe6>
				count_7seg1 = time_red;
 8000af6:	4b5e      	ldr	r3, [pc, #376]	; (8000c70 <display_two_7SEG+0x258>)
 8000af8:	681b      	ldr	r3, [r3, #0]
 8000afa:	4a5e      	ldr	r2, [pc, #376]	; (8000c74 <display_two_7SEG+0x25c>)
 8000afc:	6013      	str	r3, [r2, #0]
			if (status2 == AUTO_GREEN2 && count_7seg2 == 0){
 8000afe:	4b64      	ldr	r3, [pc, #400]	; (8000c90 <display_two_7SEG+0x278>)
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	2b02      	cmp	r3, #2
 8000b04:	d108      	bne.n	8000b18 <display_two_7SEG+0x100>
 8000b06:	4b5f      	ldr	r3, [pc, #380]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b08:	681b      	ldr	r3, [r3, #0]
 8000b0a:	2b00      	cmp	r3, #0
 8000b0c:	d104      	bne.n	8000b18 <display_two_7SEG+0x100>
				count_7seg2 = time_green;
 8000b0e:	4b5c      	ldr	r3, [pc, #368]	; (8000c80 <display_two_7SEG+0x268>)
 8000b10:	681b      	ldr	r3, [r3, #0]
 8000b12:	4a5c      	ldr	r2, [pc, #368]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b14:	6013      	str	r3, [r2, #0]
 8000b16:	e018      	b.n	8000b4a <display_two_7SEG+0x132>
			else if (status2 == AUTO_YELLOW2 && count_7seg2 == 0){
 8000b18:	4b5d      	ldr	r3, [pc, #372]	; (8000c90 <display_two_7SEG+0x278>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	2b03      	cmp	r3, #3
 8000b1e:	d108      	bne.n	8000b32 <display_two_7SEG+0x11a>
 8000b20:	4b58      	ldr	r3, [pc, #352]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d104      	bne.n	8000b32 <display_two_7SEG+0x11a>
				count_7seg2 = time_amber;
 8000b28:	4b58      	ldr	r3, [pc, #352]	; (8000c8c <display_two_7SEG+0x274>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	4a55      	ldr	r2, [pc, #340]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b2e:	6013      	str	r3, [r2, #0]
 8000b30:	e00b      	b.n	8000b4a <display_two_7SEG+0x132>
			else if (status2 == AUTO_RED2 && count_7seg2 == 0){
 8000b32:	4b57      	ldr	r3, [pc, #348]	; (8000c90 <display_two_7SEG+0x278>)
 8000b34:	681b      	ldr	r3, [r3, #0]
 8000b36:	2b04      	cmp	r3, #4
 8000b38:	d107      	bne.n	8000b4a <display_two_7SEG+0x132>
 8000b3a:	4b52      	ldr	r3, [pc, #328]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b3c:	681b      	ldr	r3, [r3, #0]
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d103      	bne.n	8000b4a <display_two_7SEG+0x132>
				count_7seg2 = time_red;
 8000b42:	4b4b      	ldr	r3, [pc, #300]	; (8000c70 <display_two_7SEG+0x258>)
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	4a4f      	ldr	r2, [pc, #316]	; (8000c84 <display_two_7SEG+0x26c>)
 8000b48:	6013      	str	r3, [r2, #0]
			if(timer_flag2 == 1){
 8000b4a:	4b52      	ldr	r3, [pc, #328]	; (8000c94 <display_two_7SEG+0x27c>)
 8000b4c:	681b      	ldr	r3, [r3, #0]
 8000b4e:	2b01      	cmp	r3, #1
 8000b50:	f040 8086 	bne.w	8000c60 <display_two_7SEG+0x248>
				status3 = SEG_2;
 8000b54:	4b45      	ldr	r3, [pc, #276]	; (8000c6c <display_two_7SEG+0x254>)
 8000b56:	2203      	movs	r2, #3
 8000b58:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  1);
 8000b5a:	2201      	movs	r2, #1
 8000b5c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000b60:	4845      	ldr	r0, [pc, #276]	; (8000c78 <display_two_7SEG+0x260>)
 8000b62:	f001 f9a2 	bl	8001eaa <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  0);
 8000b66:	2200      	movs	r2, #0
 8000b68:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b6c:	4842      	ldr	r0, [pc, #264]	; (8000c78 <display_two_7SEG+0x260>)
 8000b6e:	f001 f99c 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG1((count_7seg1 - (count_7seg1/10)*10));
 8000b72:	4b40      	ldr	r3, [pc, #256]	; (8000c74 <display_two_7SEG+0x25c>)
 8000b74:	681a      	ldr	r2, [r3, #0]
 8000b76:	4b41      	ldr	r3, [pc, #260]	; (8000c7c <display_two_7SEG+0x264>)
 8000b78:	fb83 1302 	smull	r1, r3, r3, r2
 8000b7c:	1099      	asrs	r1, r3, #2
 8000b7e:	17d3      	asrs	r3, r2, #31
 8000b80:	1ac9      	subs	r1, r1, r3
 8000b82:	460b      	mov	r3, r1
 8000b84:	009b      	lsls	r3, r3, #2
 8000b86:	440b      	add	r3, r1
 8000b88:	005b      	lsls	r3, r3, #1
 8000b8a:	1ad1      	subs	r1, r2, r3
 8000b8c:	4608      	mov	r0, r1
 8000b8e:	f7ff fd97 	bl	80006c0 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  1);
 8000b92:	2201      	movs	r2, #1
 8000b94:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000b98:	4837      	ldr	r0, [pc, #220]	; (8000c78 <display_two_7SEG+0x260>)
 8000b9a:	f001 f986 	bl	8001eaa <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  0);
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000ba4:	4834      	ldr	r0, [pc, #208]	; (8000c78 <display_two_7SEG+0x260>)
 8000ba6:	f001 f980 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG2((count_7seg2 - (count_7seg2/10)*10));
 8000baa:	4b36      	ldr	r3, [pc, #216]	; (8000c84 <display_two_7SEG+0x26c>)
 8000bac:	681a      	ldr	r2, [r3, #0]
 8000bae:	4b33      	ldr	r3, [pc, #204]	; (8000c7c <display_two_7SEG+0x264>)
 8000bb0:	fb83 1302 	smull	r1, r3, r3, r2
 8000bb4:	1099      	asrs	r1, r3, #2
 8000bb6:	17d3      	asrs	r3, r2, #31
 8000bb8:	1ac9      	subs	r1, r1, r3
 8000bba:	460b      	mov	r3, r1
 8000bbc:	009b      	lsls	r3, r3, #2
 8000bbe:	440b      	add	r3, r1
 8000bc0:	005b      	lsls	r3, r3, #1
 8000bc2:	1ad1      	subs	r1, r2, r3
 8000bc4:	4608      	mov	r0, r1
 8000bc6:	f7ff fe79 	bl	80008bc <display7SEG2>
				setTimer2(500);
 8000bca:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000bce:	f000 fbfb 	bl	80013c8 <setTimer2>
			break;
 8000bd2:	e045      	b.n	8000c60 <display_two_7SEG+0x248>
			if(timer_flag2 == 1){
 8000bd4:	4b2f      	ldr	r3, [pc, #188]	; (8000c94 <display_two_7SEG+0x27c>)
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	2b01      	cmp	r3, #1
 8000bda:	d143      	bne.n	8000c64 <display_two_7SEG+0x24c>
				count_7seg1--;
 8000bdc:	4b25      	ldr	r3, [pc, #148]	; (8000c74 <display_two_7SEG+0x25c>)
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	3b01      	subs	r3, #1
 8000be2:	4a24      	ldr	r2, [pc, #144]	; (8000c74 <display_two_7SEG+0x25c>)
 8000be4:	6013      	str	r3, [r2, #0]
				status3 = SEG_1;
 8000be6:	4b21      	ldr	r3, [pc, #132]	; (8000c6c <display_two_7SEG+0x254>)
 8000be8:	2202      	movs	r2, #2
 8000bea:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000bec:	2200      	movs	r2, #0
 8000bee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000bf2:	4821      	ldr	r0, [pc, #132]	; (8000c78 <display_two_7SEG+0x260>)
 8000bf4:	f001 f959 	bl	8001eaa <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000bf8:	2201      	movs	r2, #1
 8000bfa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000bfe:	481e      	ldr	r0, [pc, #120]	; (8000c78 <display_two_7SEG+0x260>)
 8000c00:	f001 f953 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG1(count_7seg1/10);
 8000c04:	4b1b      	ldr	r3, [pc, #108]	; (8000c74 <display_two_7SEG+0x25c>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a1c      	ldr	r2, [pc, #112]	; (8000c7c <display_two_7SEG+0x264>)
 8000c0a:	fb82 1203 	smull	r1, r2, r2, r3
 8000c0e:	1092      	asrs	r2, r2, #2
 8000c10:	17db      	asrs	r3, r3, #31
 8000c12:	1ad3      	subs	r3, r2, r3
 8000c14:	4618      	mov	r0, r3
 8000c16:	f7ff fd53 	bl	80006c0 <display7SEG1>
				count_7seg2--;
 8000c1a:	4b1a      	ldr	r3, [pc, #104]	; (8000c84 <display_two_7SEG+0x26c>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	3b01      	subs	r3, #1
 8000c20:	4a18      	ldr	r2, [pc, #96]	; (8000c84 <display_two_7SEG+0x26c>)
 8000c22:	6013      	str	r3, [r2, #0]
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000c24:	2200      	movs	r2, #0
 8000c26:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000c2a:	4813      	ldr	r0, [pc, #76]	; (8000c78 <display_two_7SEG+0x260>)
 8000c2c:	f001 f93d 	bl	8001eaa <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000c30:	2201      	movs	r2, #1
 8000c32:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000c36:	4810      	ldr	r0, [pc, #64]	; (8000c78 <display_two_7SEG+0x260>)
 8000c38:	f001 f937 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG2(count_7seg2/10);
 8000c3c:	4b11      	ldr	r3, [pc, #68]	; (8000c84 <display_two_7SEG+0x26c>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	4a0e      	ldr	r2, [pc, #56]	; (8000c7c <display_two_7SEG+0x264>)
 8000c42:	fb82 1203 	smull	r1, r2, r2, r3
 8000c46:	1092      	asrs	r2, r2, #2
 8000c48:	17db      	asrs	r3, r3, #31
 8000c4a:	1ad3      	subs	r3, r2, r3
 8000c4c:	4618      	mov	r0, r3
 8000c4e:	f7ff fe35 	bl	80008bc <display7SEG2>
				setTimer2(500);
 8000c52:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c56:	f000 fbb7 	bl	80013c8 <setTimer2>
			break;
 8000c5a:	e003      	b.n	8000c64 <display_two_7SEG+0x24c>
			break;
 8000c5c:	bf00      	nop
 8000c5e:	e002      	b.n	8000c66 <display_two_7SEG+0x24e>
			break;
 8000c60:	bf00      	nop
 8000c62:	e000      	b.n	8000c66 <display_two_7SEG+0x24e>
			break;
 8000c64:	bf00      	nop
	}
}
 8000c66:	bf00      	nop
 8000c68:	bd80      	pop	{r7, pc}
 8000c6a:	bf00      	nop
 8000c6c:	20000008 	.word	0x20000008
 8000c70:	20000020 	.word	0x20000020
 8000c74:	200000e0 	.word	0x200000e0
 8000c78:	40010800 	.word	0x40010800
 8000c7c:	66666667 	.word	0x66666667
 8000c80:	20000028 	.word	0x20000028
 8000c84:	200000e4 	.word	0x200000e4
 8000c88:	20000000 	.word	0x20000000
 8000c8c:	20000024 	.word	0x20000024
 8000c90:	20000004 	.word	0x20000004
 8000c94:	200000b0 	.word	0x200000b0

08000c98 <blink_led_red>:


void blink_led_red(){
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	af00      	add	r7, sp, #0
	switch(status4){
 8000c9c:	4b26      	ldr	r3, [pc, #152]	; (8000d38 <blink_led_red+0xa0>)
 8000c9e:	681b      	ldr	r3, [r3, #0]
 8000ca0:	2b03      	cmp	r3, #3
 8000ca2:	d02e      	beq.n	8000d02 <blink_led_red+0x6a>
 8000ca4:	2b03      	cmp	r3, #3
 8000ca6:	dc40      	bgt.n	8000d2a <blink_led_red+0x92>
 8000ca8:	2b01      	cmp	r3, #1
 8000caa:	d002      	beq.n	8000cb2 <blink_led_red+0x1a>
 8000cac:	2b02      	cmp	r3, #2
 8000cae:	d014      	beq.n	8000cda <blink_led_red+0x42>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000cb0:	e03b      	b.n	8000d2a <blink_led_red+0x92>
			clear_led();
 8000cb2:	f7ff fca1 	bl	80005f8 <clear_led>
			status4 = 2;
 8000cb6:	4b20      	ldr	r3, [pc, #128]	; (8000d38 <blink_led_red+0xa0>)
 8000cb8:	2202      	movs	r2, #2
 8000cba:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 0);
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	2102      	movs	r1, #2
 8000cc0:	481e      	ldr	r0, [pc, #120]	; (8000d3c <blink_led_red+0xa4>)
 8000cc2:	f001 f8f2 	bl	8001eaa <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin,0);
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	2110      	movs	r1, #16
 8000cca:	481c      	ldr	r0, [pc, #112]	; (8000d3c <blink_led_red+0xa4>)
 8000ccc:	f001 f8ed 	bl	8001eaa <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000cd0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cd4:	f000 fb8e 	bl	80013f4 <setTimer4>
		    break;
 8000cd8:	e02c      	b.n	8000d34 <blink_led_red+0x9c>
			if(timer_flag4 == 1){
 8000cda:	4b19      	ldr	r3, [pc, #100]	; (8000d40 <blink_led_red+0xa8>)
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	2b01      	cmp	r3, #1
 8000ce0:	d125      	bne.n	8000d2e <blink_led_red+0x96>
				status4 = 3;
 8000ce2:	4b15      	ldr	r3, [pc, #84]	; (8000d38 <blink_led_red+0xa0>)
 8000ce4:	2203      	movs	r2, #3
 8000ce6:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(red1_GPIO_Port, red1_Pin);
 8000ce8:	2102      	movs	r1, #2
 8000cea:	4814      	ldr	r0, [pc, #80]	; (8000d3c <blink_led_red+0xa4>)
 8000cec:	f001 f8f5 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
 8000cf0:	2110      	movs	r1, #16
 8000cf2:	4812      	ldr	r0, [pc, #72]	; (8000d3c <blink_led_red+0xa4>)
 8000cf4:	f001 f8f1 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000cf8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cfc:	f000 fb7a 	bl	80013f4 <setTimer4>
			break;
 8000d00:	e015      	b.n	8000d2e <blink_led_red+0x96>
			if(timer_flag4 == 1){
 8000d02:	4b0f      	ldr	r3, [pc, #60]	; (8000d40 <blink_led_red+0xa8>)
 8000d04:	681b      	ldr	r3, [r3, #0]
 8000d06:	2b01      	cmp	r3, #1
 8000d08:	d113      	bne.n	8000d32 <blink_led_red+0x9a>
				status4 = 2;
 8000d0a:	4b0b      	ldr	r3, [pc, #44]	; (8000d38 <blink_led_red+0xa0>)
 8000d0c:	2202      	movs	r2, #2
 8000d0e:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(red1_GPIO_Port, red1_Pin);
 8000d10:	2102      	movs	r1, #2
 8000d12:	480a      	ldr	r0, [pc, #40]	; (8000d3c <blink_led_red+0xa4>)
 8000d14:	f001 f8e1 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
 8000d18:	2110      	movs	r1, #16
 8000d1a:	4808      	ldr	r0, [pc, #32]	; (8000d3c <blink_led_red+0xa4>)
 8000d1c:	f001 f8dd 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000d20:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d24:	f000 fb66 	bl	80013f4 <setTimer4>
			break;
 8000d28:	e003      	b.n	8000d32 <blink_led_red+0x9a>
			break;
 8000d2a:	bf00      	nop
 8000d2c:	e002      	b.n	8000d34 <blink_led_red+0x9c>
			break;
 8000d2e:	bf00      	nop
 8000d30:	e000      	b.n	8000d34 <blink_led_red+0x9c>
			break;
 8000d32:	bf00      	nop
	}
}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	2000000c 	.word	0x2000000c
 8000d3c:	40010800 	.word	0x40010800
 8000d40:	200000b8 	.word	0x200000b8

08000d44 <blink_led_amber>:


void blink_led_amber(){
 8000d44:	b580      	push	{r7, lr}
 8000d46:	af00      	add	r7, sp, #0
	switch(status4_1){
 8000d48:	4b26      	ldr	r3, [pc, #152]	; (8000de4 <blink_led_amber+0xa0>)
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	2b03      	cmp	r3, #3
 8000d4e:	d02e      	beq.n	8000dae <blink_led_amber+0x6a>
 8000d50:	2b03      	cmp	r3, #3
 8000d52:	dc40      	bgt.n	8000dd6 <blink_led_amber+0x92>
 8000d54:	2b01      	cmp	r3, #1
 8000d56:	d002      	beq.n	8000d5e <blink_led_amber+0x1a>
 8000d58:	2b02      	cmp	r3, #2
 8000d5a:	d014      	beq.n	8000d86 <blink_led_amber+0x42>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000d5c:	e03b      	b.n	8000dd6 <blink_led_amber+0x92>
			clear_led();
 8000d5e:	f7ff fc4b 	bl	80005f8 <clear_led>
			status4_1 = 2;
 8000d62:	4b20      	ldr	r3, [pc, #128]	; (8000de4 <blink_led_amber+0xa0>)
 8000d64:	2202      	movs	r2, #2
 8000d66:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 0);
 8000d68:	2200      	movs	r2, #0
 8000d6a:	2104      	movs	r1, #4
 8000d6c:	481e      	ldr	r0, [pc, #120]	; (8000de8 <blink_led_amber+0xa4>)
 8000d6e:	f001 f89c 	bl	8001eaa <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin,0);
 8000d72:	2200      	movs	r2, #0
 8000d74:	2120      	movs	r1, #32
 8000d76:	481c      	ldr	r0, [pc, #112]	; (8000de8 <blink_led_amber+0xa4>)
 8000d78:	f001 f897 	bl	8001eaa <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000d7c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d80:	f000 fb38 	bl	80013f4 <setTimer4>
		    break;
 8000d84:	e02c      	b.n	8000de0 <blink_led_amber+0x9c>
			if(timer_flag4 == 1){
 8000d86:	4b19      	ldr	r3, [pc, #100]	; (8000dec <blink_led_amber+0xa8>)
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	2b01      	cmp	r3, #1
 8000d8c:	d125      	bne.n	8000dda <blink_led_amber+0x96>
				status4_1 = 3;
 8000d8e:	4b15      	ldr	r3, [pc, #84]	; (8000de4 <blink_led_amber+0xa0>)
 8000d90:	2203      	movs	r2, #3
 8000d92:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(amber1_GPIO_Port, amber1_Pin);
 8000d94:	2104      	movs	r1, #4
 8000d96:	4814      	ldr	r0, [pc, #80]	; (8000de8 <blink_led_amber+0xa4>)
 8000d98:	f001 f89f 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
 8000d9c:	2120      	movs	r1, #32
 8000d9e:	4812      	ldr	r0, [pc, #72]	; (8000de8 <blink_led_amber+0xa4>)
 8000da0:	f001 f89b 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000da4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000da8:	f000 fb24 	bl	80013f4 <setTimer4>
			break;
 8000dac:	e015      	b.n	8000dda <blink_led_amber+0x96>
			if(timer_flag4 == 1){
 8000dae:	4b0f      	ldr	r3, [pc, #60]	; (8000dec <blink_led_amber+0xa8>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	2b01      	cmp	r3, #1
 8000db4:	d113      	bne.n	8000dde <blink_led_amber+0x9a>
				status4_1 = 2;
 8000db6:	4b0b      	ldr	r3, [pc, #44]	; (8000de4 <blink_led_amber+0xa0>)
 8000db8:	2202      	movs	r2, #2
 8000dba:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(amber1_GPIO_Port,amber1_Pin);
 8000dbc:	2104      	movs	r1, #4
 8000dbe:	480a      	ldr	r0, [pc, #40]	; (8000de8 <blink_led_amber+0xa4>)
 8000dc0:	f001 f88b 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
 8000dc4:	2120      	movs	r1, #32
 8000dc6:	4808      	ldr	r0, [pc, #32]	; (8000de8 <blink_led_amber+0xa4>)
 8000dc8:	f001 f887 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000dcc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000dd0:	f000 fb10 	bl	80013f4 <setTimer4>
			break;
 8000dd4:	e003      	b.n	8000dde <blink_led_amber+0x9a>
			break;
 8000dd6:	bf00      	nop
 8000dd8:	e002      	b.n	8000de0 <blink_led_amber+0x9c>
			break;
 8000dda:	bf00      	nop
 8000ddc:	e000      	b.n	8000de0 <blink_led_amber+0x9c>
			break;
 8000dde:	bf00      	nop
	}
}
 8000de0:	bf00      	nop
 8000de2:	bd80      	pop	{r7, pc}
 8000de4:	20000010 	.word	0x20000010
 8000de8:	40010800 	.word	0x40010800
 8000dec:	200000b8 	.word	0x200000b8

08000df0 <blink_led_green>:

void blink_led_green(){
 8000df0:	b580      	push	{r7, lr}
 8000df2:	af00      	add	r7, sp, #0
	switch(status4_2){
 8000df4:	4b26      	ldr	r3, [pc, #152]	; (8000e90 <blink_led_green+0xa0>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	2b03      	cmp	r3, #3
 8000dfa:	d02e      	beq.n	8000e5a <blink_led_green+0x6a>
 8000dfc:	2b03      	cmp	r3, #3
 8000dfe:	dc40      	bgt.n	8000e82 <blink_led_green+0x92>
 8000e00:	2b01      	cmp	r3, #1
 8000e02:	d002      	beq.n	8000e0a <blink_led_green+0x1a>
 8000e04:	2b02      	cmp	r3, #2
 8000e06:	d014      	beq.n	8000e32 <blink_led_green+0x42>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000e08:	e03b      	b.n	8000e82 <blink_led_green+0x92>
			clear_led();
 8000e0a:	f7ff fbf5 	bl	80005f8 <clear_led>
			status4_2 = 2;
 8000e0e:	4b20      	ldr	r3, [pc, #128]	; (8000e90 <blink_led_green+0xa0>)
 8000e10:	2202      	movs	r2, #2
 8000e12:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin,0);
 8000e14:	2200      	movs	r2, #0
 8000e16:	2108      	movs	r1, #8
 8000e18:	481e      	ldr	r0, [pc, #120]	; (8000e94 <blink_led_green+0xa4>)
 8000e1a:	f001 f846 	bl	8001eaa <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(green2_GPIO_Port,green2_Pin,0);
 8000e1e:	2200      	movs	r2, #0
 8000e20:	2140      	movs	r1, #64	; 0x40
 8000e22:	481c      	ldr	r0, [pc, #112]	; (8000e94 <blink_led_green+0xa4>)
 8000e24:	f001 f841 	bl	8001eaa <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000e28:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e2c:	f000 fae2 	bl	80013f4 <setTimer4>
		    break;
 8000e30:	e02c      	b.n	8000e8c <blink_led_green+0x9c>
			if(timer_flag4 == 1){
 8000e32:	4b19      	ldr	r3, [pc, #100]	; (8000e98 <blink_led_green+0xa8>)
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	2b01      	cmp	r3, #1
 8000e38:	d125      	bne.n	8000e86 <blink_led_green+0x96>
				status4_2 = 3;
 8000e3a:	4b15      	ldr	r3, [pc, #84]	; (8000e90 <blink_led_green+0xa0>)
 8000e3c:	2203      	movs	r2, #3
 8000e3e:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(green1_GPIO_Port, green1_Pin);
 8000e40:	2108      	movs	r1, #8
 8000e42:	4814      	ldr	r0, [pc, #80]	; (8000e94 <blink_led_green+0xa4>)
 8000e44:	f001 f849 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
 8000e48:	2140      	movs	r1, #64	; 0x40
 8000e4a:	4812      	ldr	r0, [pc, #72]	; (8000e94 <blink_led_green+0xa4>)
 8000e4c:	f001 f845 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000e50:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e54:	f000 face 	bl	80013f4 <setTimer4>
			break;
 8000e58:	e015      	b.n	8000e86 <blink_led_green+0x96>
			if(timer_flag4 == 1){
 8000e5a:	4b0f      	ldr	r3, [pc, #60]	; (8000e98 <blink_led_green+0xa8>)
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	2b01      	cmp	r3, #1
 8000e60:	d113      	bne.n	8000e8a <blink_led_green+0x9a>
				status4_2 = 2;
 8000e62:	4b0b      	ldr	r3, [pc, #44]	; (8000e90 <blink_led_green+0xa0>)
 8000e64:	2202      	movs	r2, #2
 8000e66:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(green1_GPIO_Port, green1_Pin);
 8000e68:	2108      	movs	r1, #8
 8000e6a:	480a      	ldr	r0, [pc, #40]	; (8000e94 <blink_led_green+0xa4>)
 8000e6c:	f001 f835 	bl	8001eda <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
 8000e70:	2140      	movs	r1, #64	; 0x40
 8000e72:	4808      	ldr	r0, [pc, #32]	; (8000e94 <blink_led_green+0xa4>)
 8000e74:	f001 f831 	bl	8001eda <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000e78:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e7c:	f000 faba 	bl	80013f4 <setTimer4>
			break;
 8000e80:	e003      	b.n	8000e8a <blink_led_green+0x9a>
			break;
 8000e82:	bf00      	nop
 8000e84:	e002      	b.n	8000e8c <blink_led_green+0x9c>
			break;
 8000e86:	bf00      	nop
 8000e88:	e000      	b.n	8000e8c <blink_led_green+0x9c>
			break;
 8000e8a:	bf00      	nop
	}
}
 8000e8c:	bf00      	nop
 8000e8e:	bd80      	pop	{r7, pc}
 8000e90:	20000014 	.word	0x20000014
 8000e94:	40010800 	.word	0x40010800
 8000e98:	200000b8 	.word	0x200000b8

08000e9c <update_two_7SEG>:


void update_two_7SEG(int num){
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b082      	sub	sp, #8
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	6078      	str	r0, [r7, #4]
	switch(status5){
 8000ea4:	4b5f      	ldr	r3, [pc, #380]	; (8001024 <update_two_7SEG+0x188>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	2b03      	cmp	r3, #3
 8000eaa:	d07b      	beq.n	8000fa4 <update_two_7SEG+0x108>
 8000eac:	2b03      	cmp	r3, #3
 8000eae:	f300 80b0 	bgt.w	8001012 <update_two_7SEG+0x176>
 8000eb2:	2b01      	cmp	r3, #1
 8000eb4:	d002      	beq.n	8000ebc <update_two_7SEG+0x20>
 8000eb6:	2b02      	cmp	r3, #2
 8000eb8:	d033      	beq.n	8000f22 <update_two_7SEG+0x86>

				setTimer5(100);
			}
			break;
		default:
			break;
 8000eba:	e0aa      	b.n	8001012 <update_two_7SEG+0x176>
			status5 = 2;
 8000ebc:	4b59      	ldr	r3, [pc, #356]	; (8001024 <update_two_7SEG+0x188>)
 8000ebe:	2202      	movs	r2, #2
 8000ec0:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ec8:	4857      	ldr	r0, [pc, #348]	; (8001028 <update_two_7SEG+0x18c>)
 8000eca:	f000 ffee 	bl	8001eaa <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000ece:	2201      	movs	r2, #1
 8000ed0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000ed4:	4854      	ldr	r0, [pc, #336]	; (8001028 <update_two_7SEG+0x18c>)
 8000ed6:	f000 ffe8 	bl	8001eaa <HAL_GPIO_WritePin>
			display7SEG1((int)num/10);
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	4a53      	ldr	r2, [pc, #332]	; (800102c <update_two_7SEG+0x190>)
 8000ede:	fb82 1203 	smull	r1, r2, r2, r3
 8000ee2:	1092      	asrs	r2, r2, #2
 8000ee4:	17db      	asrs	r3, r3, #31
 8000ee6:	1ad3      	subs	r3, r2, r3
 8000ee8:	4618      	mov	r0, r3
 8000eea:	f7ff fbe9 	bl	80006c0 <display7SEG1>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000eee:	2200      	movs	r2, #0
 8000ef0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000ef4:	484c      	ldr	r0, [pc, #304]	; (8001028 <update_two_7SEG+0x18c>)
 8000ef6:	f000 ffd8 	bl	8001eaa <HAL_GPIO_WritePin>
		    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000efa:	2201      	movs	r2, #1
 8000efc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000f00:	4849      	ldr	r0, [pc, #292]	; (8001028 <update_two_7SEG+0x18c>)
 8000f02:	f000 ffd2 	bl	8001eaa <HAL_GPIO_WritePin>
			display7SEG2((int)num/10);
 8000f06:	687b      	ldr	r3, [r7, #4]
 8000f08:	4a48      	ldr	r2, [pc, #288]	; (800102c <update_two_7SEG+0x190>)
 8000f0a:	fb82 1203 	smull	r1, r2, r2, r3
 8000f0e:	1092      	asrs	r2, r2, #2
 8000f10:	17db      	asrs	r3, r3, #31
 8000f12:	1ad3      	subs	r3, r2, r3
 8000f14:	4618      	mov	r0, r3
 8000f16:	f7ff fcd1 	bl	80008bc <display7SEG2>
			setTimer5(100);
 8000f1a:	2064      	movs	r0, #100	; 0x64
 8000f1c:	f000 fa80 	bl	8001420 <setTimer5>
			break;
 8000f20:	e07c      	b.n	800101c <update_two_7SEG+0x180>
			if(timer_flag5 == 1){
 8000f22:	4b43      	ldr	r3, [pc, #268]	; (8001030 <update_two_7SEG+0x194>)
 8000f24:	681b      	ldr	r3, [r3, #0]
 8000f26:	2b01      	cmp	r3, #1
 8000f28:	d175      	bne.n	8001016 <update_two_7SEG+0x17a>
				status5 = 3;
 8000f2a:	4b3e      	ldr	r3, [pc, #248]	; (8001024 <update_two_7SEG+0x188>)
 8000f2c:	2203      	movs	r2, #3
 8000f2e:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  1);
 8000f30:	2201      	movs	r2, #1
 8000f32:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f36:	483c      	ldr	r0, [pc, #240]	; (8001028 <update_two_7SEG+0x18c>)
 8000f38:	f000 ffb7 	bl	8001eaa <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  0);
 8000f3c:	2200      	movs	r2, #0
 8000f3e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000f42:	4839      	ldr	r0, [pc, #228]	; (8001028 <update_two_7SEG+0x18c>)
 8000f44:	f000 ffb1 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG1(num%10);
 8000f48:	687a      	ldr	r2, [r7, #4]
 8000f4a:	4b38      	ldr	r3, [pc, #224]	; (800102c <update_two_7SEG+0x190>)
 8000f4c:	fb83 1302 	smull	r1, r3, r3, r2
 8000f50:	1099      	asrs	r1, r3, #2
 8000f52:	17d3      	asrs	r3, r2, #31
 8000f54:	1ac9      	subs	r1, r1, r3
 8000f56:	460b      	mov	r3, r1
 8000f58:	009b      	lsls	r3, r3, #2
 8000f5a:	440b      	add	r3, r1
 8000f5c:	005b      	lsls	r3, r3, #1
 8000f5e:	1ad1      	subs	r1, r2, r3
 8000f60:	4608      	mov	r0, r1
 8000f62:	f7ff fbad 	bl	80006c0 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  1);
 8000f66:	2201      	movs	r2, #1
 8000f68:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000f6c:	482e      	ldr	r0, [pc, #184]	; (8001028 <update_two_7SEG+0x18c>)
 8000f6e:	f000 ff9c 	bl	8001eaa <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  0);
 8000f72:	2200      	movs	r2, #0
 8000f74:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000f78:	482b      	ldr	r0, [pc, #172]	; (8001028 <update_two_7SEG+0x18c>)
 8000f7a:	f000 ff96 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG2(num%10);
 8000f7e:	687a      	ldr	r2, [r7, #4]
 8000f80:	4b2a      	ldr	r3, [pc, #168]	; (800102c <update_two_7SEG+0x190>)
 8000f82:	fb83 1302 	smull	r1, r3, r3, r2
 8000f86:	1099      	asrs	r1, r3, #2
 8000f88:	17d3      	asrs	r3, r2, #31
 8000f8a:	1ac9      	subs	r1, r1, r3
 8000f8c:	460b      	mov	r3, r1
 8000f8e:	009b      	lsls	r3, r3, #2
 8000f90:	440b      	add	r3, r1
 8000f92:	005b      	lsls	r3, r3, #1
 8000f94:	1ad1      	subs	r1, r2, r3
 8000f96:	4608      	mov	r0, r1
 8000f98:	f7ff fc90 	bl	80008bc <display7SEG2>
				setTimer5(100);
 8000f9c:	2064      	movs	r0, #100	; 0x64
 8000f9e:	f000 fa3f 	bl	8001420 <setTimer5>
			break;
 8000fa2:	e038      	b.n	8001016 <update_two_7SEG+0x17a>
			if(timer_flag5 == 1){
 8000fa4:	4b22      	ldr	r3, [pc, #136]	; (8001030 <update_two_7SEG+0x194>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	2b01      	cmp	r3, #1
 8000faa:	d136      	bne.n	800101a <update_two_7SEG+0x17e>
				status5 = 2;
 8000fac:	4b1d      	ldr	r3, [pc, #116]	; (8001024 <update_two_7SEG+0x188>)
 8000fae:	2202      	movs	r2, #2
 8000fb0:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000fb2:	2200      	movs	r2, #0
 8000fb4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000fb8:	481b      	ldr	r0, [pc, #108]	; (8001028 <update_two_7SEG+0x18c>)
 8000fba:	f000 ff76 	bl	8001eaa <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000fbe:	2201      	movs	r2, #1
 8000fc0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fc4:	4818      	ldr	r0, [pc, #96]	; (8001028 <update_two_7SEG+0x18c>)
 8000fc6:	f000 ff70 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG1((int)num/10);
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	4a17      	ldr	r2, [pc, #92]	; (800102c <update_two_7SEG+0x190>)
 8000fce:	fb82 1203 	smull	r1, r2, r2, r3
 8000fd2:	1092      	asrs	r2, r2, #2
 8000fd4:	17db      	asrs	r3, r3, #31
 8000fd6:	1ad3      	subs	r3, r2, r3
 8000fd8:	4618      	mov	r0, r3
 8000fda:	f7ff fb71 	bl	80006c0 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000fde:	2200      	movs	r2, #0
 8000fe0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fe4:	4810      	ldr	r0, [pc, #64]	; (8001028 <update_two_7SEG+0x18c>)
 8000fe6:	f000 ff60 	bl	8001eaa <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000fea:	2201      	movs	r2, #1
 8000fec:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000ff0:	480d      	ldr	r0, [pc, #52]	; (8001028 <update_two_7SEG+0x18c>)
 8000ff2:	f000 ff5a 	bl	8001eaa <HAL_GPIO_WritePin>
				display7SEG2((int)num/10);
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	4a0c      	ldr	r2, [pc, #48]	; (800102c <update_two_7SEG+0x190>)
 8000ffa:	fb82 1203 	smull	r1, r2, r2, r3
 8000ffe:	1092      	asrs	r2, r2, #2
 8001000:	17db      	asrs	r3, r3, #31
 8001002:	1ad3      	subs	r3, r2, r3
 8001004:	4618      	mov	r0, r3
 8001006:	f7ff fc59 	bl	80008bc <display7SEG2>
				setTimer5(100);
 800100a:	2064      	movs	r0, #100	; 0x64
 800100c:	f000 fa08 	bl	8001420 <setTimer5>
			break;
 8001010:	e003      	b.n	800101a <update_two_7SEG+0x17e>
			break;
 8001012:	bf00      	nop
 8001014:	e002      	b.n	800101c <update_two_7SEG+0x180>
			break;
 8001016:	bf00      	nop
 8001018:	e000      	b.n	800101c <update_two_7SEG+0x180>
			break;
 800101a:	bf00      	nop
	}
}
 800101c:	bf00      	nop
 800101e:	3708      	adds	r7, #8
 8001020:	46bd      	mov	sp, r7
 8001022:	bd80      	pop	{r7, pc}
 8001024:	20000018 	.word	0x20000018
 8001028:	40010800 	.word	0x40010800
 800102c:	66666667 	.word	0x66666667
 8001030:	200000bc 	.word	0x200000bc

08001034 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001038:	f000 fc36 	bl	80018a8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800103c:	f000 f80c 	bl	8001058 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001040:	f000 f892 	bl	8001168 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001044:	f000 f844 	bl	80010d0 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
HAL_TIM_Base_Start_IT(&htim2);
 8001048:	4802      	ldr	r0, [pc, #8]	; (8001054 <main+0x20>)
 800104a:	f001 fb97 	bl	800277c <HAL_TIM_Base_Start_IT>
  /* USER CODE BEGIN WHILE */


  while (1)
  {
	  fsm_for_input_processing ();
 800104e:	f7ff f87d 	bl	800014c <fsm_for_input_processing>
 8001052:	e7fc      	b.n	800104e <main+0x1a>
 8001054:	200000e8 	.word	0x200000e8

08001058 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001058:	b580      	push	{r7, lr}
 800105a:	b090      	sub	sp, #64	; 0x40
 800105c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800105e:	f107 0318 	add.w	r3, r7, #24
 8001062:	2228      	movs	r2, #40	; 0x28
 8001064:	2100      	movs	r1, #0
 8001066:	4618      	mov	r0, r3
 8001068:	f001 ff40 	bl	8002eec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800106c:	1d3b      	adds	r3, r7, #4
 800106e:	2200      	movs	r2, #0
 8001070:	601a      	str	r2, [r3, #0]
 8001072:	605a      	str	r2, [r3, #4]
 8001074:	609a      	str	r2, [r3, #8]
 8001076:	60da      	str	r2, [r3, #12]
 8001078:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800107a:	2302      	movs	r3, #2
 800107c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800107e:	2301      	movs	r3, #1
 8001080:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001082:	2310      	movs	r3, #16
 8001084:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001086:	2300      	movs	r3, #0
 8001088:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800108a:	f107 0318 	add.w	r3, r7, #24
 800108e:	4618      	mov	r0, r3
 8001090:	f000 ff3c 	bl	8001f0c <HAL_RCC_OscConfig>
 8001094:	4603      	mov	r3, r0
 8001096:	2b00      	cmp	r3, #0
 8001098:	d001      	beq.n	800109e <SystemClock_Config+0x46>
  {
    Error_Handler();
 800109a:	f000 f8d5 	bl	8001248 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800109e:	230f      	movs	r3, #15
 80010a0:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80010a2:	2300      	movs	r3, #0
 80010a4:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80010a6:	2300      	movs	r3, #0
 80010a8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80010aa:	2300      	movs	r3, #0
 80010ac:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80010ae:	2300      	movs	r3, #0
 80010b0:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80010b2:	1d3b      	adds	r3, r7, #4
 80010b4:	2100      	movs	r1, #0
 80010b6:	4618      	mov	r0, r3
 80010b8:	f001 f9a8 	bl	800240c <HAL_RCC_ClockConfig>
 80010bc:	4603      	mov	r3, r0
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d001      	beq.n	80010c6 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80010c2:	f000 f8c1 	bl	8001248 <Error_Handler>
  }
}
 80010c6:	bf00      	nop
 80010c8:	3740      	adds	r7, #64	; 0x40
 80010ca:	46bd      	mov	sp, r7
 80010cc:	bd80      	pop	{r7, pc}
	...

080010d0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80010d0:	b580      	push	{r7, lr}
 80010d2:	b086      	sub	sp, #24
 80010d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80010d6:	f107 0308 	add.w	r3, r7, #8
 80010da:	2200      	movs	r2, #0
 80010dc:	601a      	str	r2, [r3, #0]
 80010de:	605a      	str	r2, [r3, #4]
 80010e0:	609a      	str	r2, [r3, #8]
 80010e2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80010e4:	463b      	mov	r3, r7
 80010e6:	2200      	movs	r2, #0
 80010e8:	601a      	str	r2, [r3, #0]
 80010ea:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80010ec:	4b1d      	ldr	r3, [pc, #116]	; (8001164 <MX_TIM2_Init+0x94>)
 80010ee:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80010f2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 80010f4:	4b1b      	ldr	r3, [pc, #108]	; (8001164 <MX_TIM2_Init+0x94>)
 80010f6:	f641 723f 	movw	r2, #7999	; 0x1f3f
 80010fa:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010fc:	4b19      	ldr	r3, [pc, #100]	; (8001164 <MX_TIM2_Init+0x94>)
 80010fe:	2200      	movs	r2, #0
 8001100:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10;
 8001102:	4b18      	ldr	r3, [pc, #96]	; (8001164 <MX_TIM2_Init+0x94>)
 8001104:	220a      	movs	r2, #10
 8001106:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001108:	4b16      	ldr	r3, [pc, #88]	; (8001164 <MX_TIM2_Init+0x94>)
 800110a:	2200      	movs	r2, #0
 800110c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800110e:	4b15      	ldr	r3, [pc, #84]	; (8001164 <MX_TIM2_Init+0x94>)
 8001110:	2200      	movs	r2, #0
 8001112:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001114:	4813      	ldr	r0, [pc, #76]	; (8001164 <MX_TIM2_Init+0x94>)
 8001116:	f001 fae1 	bl	80026dc <HAL_TIM_Base_Init>
 800111a:	4603      	mov	r3, r0
 800111c:	2b00      	cmp	r3, #0
 800111e:	d001      	beq.n	8001124 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001120:	f000 f892 	bl	8001248 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001124:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001128:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800112a:	f107 0308 	add.w	r3, r7, #8
 800112e:	4619      	mov	r1, r3
 8001130:	480c      	ldr	r0, [pc, #48]	; (8001164 <MX_TIM2_Init+0x94>)
 8001132:	f001 fc77 	bl	8002a24 <HAL_TIM_ConfigClockSource>
 8001136:	4603      	mov	r3, r0
 8001138:	2b00      	cmp	r3, #0
 800113a:	d001      	beq.n	8001140 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800113c:	f000 f884 	bl	8001248 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001140:	2300      	movs	r3, #0
 8001142:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001144:	2300      	movs	r3, #0
 8001146:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001148:	463b      	mov	r3, r7
 800114a:	4619      	mov	r1, r3
 800114c:	4805      	ldr	r0, [pc, #20]	; (8001164 <MX_TIM2_Init+0x94>)
 800114e:	f001 fe3f 	bl	8002dd0 <HAL_TIMEx_MasterConfigSynchronization>
 8001152:	4603      	mov	r3, r0
 8001154:	2b00      	cmp	r3, #0
 8001156:	d001      	beq.n	800115c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001158:	f000 f876 	bl	8001248 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800115c:	bf00      	nop
 800115e:	3718      	adds	r7, #24
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}
 8001164:	200000e8 	.word	0x200000e8

08001168 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001168:	b580      	push	{r7, lr}
 800116a:	b086      	sub	sp, #24
 800116c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800116e:	f107 0308 	add.w	r3, r7, #8
 8001172:	2200      	movs	r2, #0
 8001174:	601a      	str	r2, [r3, #0]
 8001176:	605a      	str	r2, [r3, #4]
 8001178:	609a      	str	r2, [r3, #8]
 800117a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800117c:	4b29      	ldr	r3, [pc, #164]	; (8001224 <MX_GPIO_Init+0xbc>)
 800117e:	699b      	ldr	r3, [r3, #24]
 8001180:	4a28      	ldr	r2, [pc, #160]	; (8001224 <MX_GPIO_Init+0xbc>)
 8001182:	f043 0304 	orr.w	r3, r3, #4
 8001186:	6193      	str	r3, [r2, #24]
 8001188:	4b26      	ldr	r3, [pc, #152]	; (8001224 <MX_GPIO_Init+0xbc>)
 800118a:	699b      	ldr	r3, [r3, #24]
 800118c:	f003 0304 	and.w	r3, r3, #4
 8001190:	607b      	str	r3, [r7, #4]
 8001192:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001194:	4b23      	ldr	r3, [pc, #140]	; (8001224 <MX_GPIO_Init+0xbc>)
 8001196:	699b      	ldr	r3, [r3, #24]
 8001198:	4a22      	ldr	r2, [pc, #136]	; (8001224 <MX_GPIO_Init+0xbc>)
 800119a:	f043 0308 	orr.w	r3, r3, #8
 800119e:	6193      	str	r3, [r2, #24]
 80011a0:	4b20      	ldr	r3, [pc, #128]	; (8001224 <MX_GPIO_Init+0xbc>)
 80011a2:	699b      	ldr	r3, [r3, #24]
 80011a4:	f003 0308 	and.w	r3, r3, #8
 80011a8:	603b      	str	r3, [r7, #0]
 80011aa:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, red1_Pin|amber1_Pin|green1_Pin|red2_Pin
 80011ac:	2200      	movs	r2, #0
 80011ae:	f24f 017e 	movw	r1, #61566	; 0xf07e
 80011b2:	481d      	ldr	r0, [pc, #116]	; (8001228 <MX_GPIO_Init+0xc0>)
 80011b4:	f000 fe79 	bl	8001eaa <HAL_GPIO_WritePin>
                          |amber2_Pin|green2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, SEG1_0_Pin|SEG2_1_Pin|SEG2_2_Pin|SEG2_3_Pin
 80011b8:	2200      	movs	r2, #0
 80011ba:	f64f 71fc 	movw	r1, #65532	; 0xfffc
 80011be:	481b      	ldr	r0, [pc, #108]	; (800122c <MX_GPIO_Init+0xc4>)
 80011c0:	f000 fe73 	bl	8001eaa <HAL_GPIO_WritePin>
                          |SEG1_6_Pin|SEG2_0_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : red1_Pin amber1_Pin green1_Pin red2_Pin
                           amber2_Pin green2_Pin EN0_Pin EN1_Pin
                           EN2_Pin EN3_Pin */
  GPIO_InitStruct.Pin = red1_Pin|amber1_Pin|green1_Pin|red2_Pin
 80011c4:	f24f 037e 	movw	r3, #61566	; 0xf07e
 80011c8:	60bb      	str	r3, [r7, #8]
                          |amber2_Pin|green2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011ca:	2301      	movs	r3, #1
 80011cc:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011ce:	2300      	movs	r3, #0
 80011d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011d2:	2302      	movs	r3, #2
 80011d4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011d6:	f107 0308 	add.w	r3, r7, #8
 80011da:	4619      	mov	r1, r3
 80011dc:	4812      	ldr	r0, [pc, #72]	; (8001228 <MX_GPIO_Init+0xc0>)
 80011de:	f000 fcd3 	bl	8001b88 <HAL_GPIO_Init>

  /*Configure GPIO pins : button1_Pin button2_Pin button3_Pin */
  GPIO_InitStruct.Pin = button1_Pin|button2_Pin|button3_Pin;
 80011e2:	f44f 7360 	mov.w	r3, #896	; 0x380
 80011e6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80011e8:	2300      	movs	r3, #0
 80011ea:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011ec:	2300      	movs	r3, #0
 80011ee:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011f0:	f107 0308 	add.w	r3, r7, #8
 80011f4:	4619      	mov	r1, r3
 80011f6:	480c      	ldr	r0, [pc, #48]	; (8001228 <MX_GPIO_Init+0xc0>)
 80011f8:	f000 fcc6 	bl	8001b88 <HAL_GPIO_Init>

  /*Configure GPIO pins : SEG1_0_Pin SEG2_1_Pin SEG2_2_Pin SEG2_3_Pin
                           SEG2_4_Pin SEG2_5_Pin SEG2_6_Pin SEG1_1_Pin
                           SEG1_2_Pin SEG1_3_Pin SEG1_4_Pin SEG1_5_Pin
                           SEG1_6_Pin SEG2_0_Pin */
  GPIO_InitStruct.Pin = SEG1_0_Pin|SEG2_1_Pin|SEG2_2_Pin|SEG2_3_Pin
 80011fc:	f64f 73fc 	movw	r3, #65532	; 0xfffc
 8001200:	60bb      	str	r3, [r7, #8]
                          |SEG2_4_Pin|SEG2_5_Pin|SEG2_6_Pin|SEG1_1_Pin
                          |SEG1_2_Pin|SEG1_3_Pin|SEG1_4_Pin|SEG1_5_Pin
                          |SEG1_6_Pin|SEG2_0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001202:	2301      	movs	r3, #1
 8001204:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001206:	2300      	movs	r3, #0
 8001208:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800120a:	2302      	movs	r3, #2
 800120c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800120e:	f107 0308 	add.w	r3, r7, #8
 8001212:	4619      	mov	r1, r3
 8001214:	4805      	ldr	r0, [pc, #20]	; (800122c <MX_GPIO_Init+0xc4>)
 8001216:	f000 fcb7 	bl	8001b88 <HAL_GPIO_Init>

}
 800121a:	bf00      	nop
 800121c:	3718      	adds	r7, #24
 800121e:	46bd      	mov	sp, r7
 8001220:	bd80      	pop	{r7, pc}
 8001222:	bf00      	nop
 8001224:	40021000 	.word	0x40021000
 8001228:	40010800 	.word	0x40010800
 800122c:	40010c00 	.word	0x40010c00

08001230 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback ( TIM_HandleTypeDef* htim ) {
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0
 8001236:	6078      	str	r0, [r7, #4]
	timer_run();
 8001238:	f000 f91e 	bl	8001478 <timer_run>
	getKeyInput();
 800123c:	f7ff f930 	bl	80004a0 <getKeyInput>
}
 8001240:	bf00      	nop
 8001242:	3708      	adds	r7, #8
 8001244:	46bd      	mov	sp, r7
 8001246:	bd80      	pop	{r7, pc}

08001248 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001248:	b480      	push	{r7}
 800124a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800124c:	b672      	cpsid	i
}
 800124e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001250:	e7fe      	b.n	8001250 <Error_Handler+0x8>
	...

08001254 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001254:	b480      	push	{r7}
 8001256:	b085      	sub	sp, #20
 8001258:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800125a:	4b15      	ldr	r3, [pc, #84]	; (80012b0 <HAL_MspInit+0x5c>)
 800125c:	699b      	ldr	r3, [r3, #24]
 800125e:	4a14      	ldr	r2, [pc, #80]	; (80012b0 <HAL_MspInit+0x5c>)
 8001260:	f043 0301 	orr.w	r3, r3, #1
 8001264:	6193      	str	r3, [r2, #24]
 8001266:	4b12      	ldr	r3, [pc, #72]	; (80012b0 <HAL_MspInit+0x5c>)
 8001268:	699b      	ldr	r3, [r3, #24]
 800126a:	f003 0301 	and.w	r3, r3, #1
 800126e:	60bb      	str	r3, [r7, #8]
 8001270:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001272:	4b0f      	ldr	r3, [pc, #60]	; (80012b0 <HAL_MspInit+0x5c>)
 8001274:	69db      	ldr	r3, [r3, #28]
 8001276:	4a0e      	ldr	r2, [pc, #56]	; (80012b0 <HAL_MspInit+0x5c>)
 8001278:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800127c:	61d3      	str	r3, [r2, #28]
 800127e:	4b0c      	ldr	r3, [pc, #48]	; (80012b0 <HAL_MspInit+0x5c>)
 8001280:	69db      	ldr	r3, [r3, #28]
 8001282:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001286:	607b      	str	r3, [r7, #4]
 8001288:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 800128a:	4b0a      	ldr	r3, [pc, #40]	; (80012b4 <HAL_MspInit+0x60>)
 800128c:	685b      	ldr	r3, [r3, #4]
 800128e:	60fb      	str	r3, [r7, #12]
 8001290:	68fb      	ldr	r3, [r7, #12]
 8001292:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001296:	60fb      	str	r3, [r7, #12]
 8001298:	68fb      	ldr	r3, [r7, #12]
 800129a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800129e:	60fb      	str	r3, [r7, #12]
 80012a0:	4a04      	ldr	r2, [pc, #16]	; (80012b4 <HAL_MspInit+0x60>)
 80012a2:	68fb      	ldr	r3, [r7, #12]
 80012a4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80012a6:	bf00      	nop
 80012a8:	3714      	adds	r7, #20
 80012aa:	46bd      	mov	sp, r7
 80012ac:	bc80      	pop	{r7}
 80012ae:	4770      	bx	lr
 80012b0:	40021000 	.word	0x40021000
 80012b4:	40010000 	.word	0x40010000

080012b8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b084      	sub	sp, #16
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80012c8:	d113      	bne.n	80012f2 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80012ca:	4b0c      	ldr	r3, [pc, #48]	; (80012fc <HAL_TIM_Base_MspInit+0x44>)
 80012cc:	69db      	ldr	r3, [r3, #28]
 80012ce:	4a0b      	ldr	r2, [pc, #44]	; (80012fc <HAL_TIM_Base_MspInit+0x44>)
 80012d0:	f043 0301 	orr.w	r3, r3, #1
 80012d4:	61d3      	str	r3, [r2, #28]
 80012d6:	4b09      	ldr	r3, [pc, #36]	; (80012fc <HAL_TIM_Base_MspInit+0x44>)
 80012d8:	69db      	ldr	r3, [r3, #28]
 80012da:	f003 0301 	and.w	r3, r3, #1
 80012de:	60fb      	str	r3, [r7, #12]
 80012e0:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80012e2:	2200      	movs	r2, #0
 80012e4:	2100      	movs	r1, #0
 80012e6:	201c      	movs	r0, #28
 80012e8:	f000 fc17 	bl	8001b1a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80012ec:	201c      	movs	r0, #28
 80012ee:	f000 fc30 	bl	8001b52 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80012f2:	bf00      	nop
 80012f4:	3710      	adds	r7, #16
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	40021000 	.word	0x40021000

08001300 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001300:	b480      	push	{r7}
 8001302:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001304:	e7fe      	b.n	8001304 <NMI_Handler+0x4>

08001306 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001306:	b480      	push	{r7}
 8001308:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800130a:	e7fe      	b.n	800130a <HardFault_Handler+0x4>

0800130c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800130c:	b480      	push	{r7}
 800130e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001310:	e7fe      	b.n	8001310 <MemManage_Handler+0x4>

08001312 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001312:	b480      	push	{r7}
 8001314:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001316:	e7fe      	b.n	8001316 <BusFault_Handler+0x4>

08001318 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001318:	b480      	push	{r7}
 800131a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800131c:	e7fe      	b.n	800131c <UsageFault_Handler+0x4>

0800131e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800131e:	b480      	push	{r7}
 8001320:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001322:	bf00      	nop
 8001324:	46bd      	mov	sp, r7
 8001326:	bc80      	pop	{r7}
 8001328:	4770      	bx	lr

0800132a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800132a:	b480      	push	{r7}
 800132c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800132e:	bf00      	nop
 8001330:	46bd      	mov	sp, r7
 8001332:	bc80      	pop	{r7}
 8001334:	4770      	bx	lr

08001336 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001336:	b480      	push	{r7}
 8001338:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800133a:	bf00      	nop
 800133c:	46bd      	mov	sp, r7
 800133e:	bc80      	pop	{r7}
 8001340:	4770      	bx	lr

08001342 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001342:	b580      	push	{r7, lr}
 8001344:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001346:	f000 faf5 	bl	8001934 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800134a:	bf00      	nop
 800134c:	bd80      	pop	{r7, pc}
	...

08001350 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001350:	b580      	push	{r7, lr}
 8001352:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001354:	4802      	ldr	r0, [pc, #8]	; (8001360 <TIM2_IRQHandler+0x10>)
 8001356:	f001 fa5d 	bl	8002814 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800135a:	bf00      	nop
 800135c:	bd80      	pop	{r7, pc}
 800135e:	bf00      	nop
 8001360:	200000e8 	.word	0x200000e8

08001364 <SystemInit>:
 8001364:	b480      	push	{r7}
 8001366:	af00      	add	r7, sp, #0
 8001368:	bf00      	nop
 800136a:	46bd      	mov	sp, r7
 800136c:	bc80      	pop	{r7}
 800136e:	4770      	bx	lr

08001370 <setTimer0>:
int timer5_counter = 0;
int timer6_counter = 0;

const int TIMER_CYCLE = 10;

void setTimer0(int duration){
 8001370:	b480      	push	{r7}
 8001372:	b083      	sub	sp, #12
 8001374:	af00      	add	r7, sp, #0
 8001376:	6078      	str	r0, [r7, #4]
	 timer0_counter = duration / TIMER_CYCLE ;
 8001378:	220a      	movs	r2, #10
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001380:	4a04      	ldr	r2, [pc, #16]	; (8001394 <setTimer0+0x24>)
 8001382:	6013      	str	r3, [r2, #0]
	 timer_flag0 = 0;
 8001384:	4b04      	ldr	r3, [pc, #16]	; (8001398 <setTimer0+0x28>)
 8001386:	2200      	movs	r2, #0
 8001388:	601a      	str	r2, [r3, #0]
}
 800138a:	bf00      	nop
 800138c:	370c      	adds	r7, #12
 800138e:	46bd      	mov	sp, r7
 8001390:	bc80      	pop	{r7}
 8001392:	4770      	bx	lr
 8001394:	200000c4 	.word	0x200000c4
 8001398:	200000a8 	.word	0x200000a8

0800139c <setTimer1>:
void setTimer1(int duration){
 800139c:	b480      	push	{r7}
 800139e:	b083      	sub	sp, #12
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
	 timer1_counter = duration/ TIMER_CYCLE ;
 80013a4:	220a      	movs	r2, #10
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	fb93 f3f2 	sdiv	r3, r3, r2
 80013ac:	4a04      	ldr	r2, [pc, #16]	; (80013c0 <setTimer1+0x24>)
 80013ae:	6013      	str	r3, [r2, #0]
	 timer_flag1 = 0;
 80013b0:	4b04      	ldr	r3, [pc, #16]	; (80013c4 <setTimer1+0x28>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	601a      	str	r2, [r3, #0]
}
 80013b6:	bf00      	nop
 80013b8:	370c      	adds	r7, #12
 80013ba:	46bd      	mov	sp, r7
 80013bc:	bc80      	pop	{r7}
 80013be:	4770      	bx	lr
 80013c0:	200000c8 	.word	0x200000c8
 80013c4:	200000ac 	.word	0x200000ac

080013c8 <setTimer2>:
void setTimer2(int duration){
 80013c8:	b480      	push	{r7}
 80013ca:	b083      	sub	sp, #12
 80013cc:	af00      	add	r7, sp, #0
 80013ce:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TIMER_CYCLE;
 80013d0:	220a      	movs	r2, #10
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	fb93 f3f2 	sdiv	r3, r3, r2
 80013d8:	4a04      	ldr	r2, [pc, #16]	; (80013ec <setTimer2+0x24>)
 80013da:	6013      	str	r3, [r2, #0]
	timer_flag2 = 0;
 80013dc:	4b04      	ldr	r3, [pc, #16]	; (80013f0 <setTimer2+0x28>)
 80013de:	2200      	movs	r2, #0
 80013e0:	601a      	str	r2, [r3, #0]
}
 80013e2:	bf00      	nop
 80013e4:	370c      	adds	r7, #12
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bc80      	pop	{r7}
 80013ea:	4770      	bx	lr
 80013ec:	200000cc 	.word	0x200000cc
 80013f0:	200000b0 	.word	0x200000b0

080013f4 <setTimer4>:
void setTimer3(int duration){
	 timer3_counter = duration / TIMER_CYCLE ;
	 timer_flag3 = 0;
}
void setTimer4(int duration){
 80013f4:	b480      	push	{r7}
 80013f6:	b083      	sub	sp, #12
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	6078      	str	r0, [r7, #4]
	 timer4_counter = duration/ TIMER_CYCLE ;
 80013fc:	220a      	movs	r2, #10
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	fb93 f3f2 	sdiv	r3, r3, r2
 8001404:	4a04      	ldr	r2, [pc, #16]	; (8001418 <setTimer4+0x24>)
 8001406:	6013      	str	r3, [r2, #0]
	 timer_flag4 = 0;
 8001408:	4b04      	ldr	r3, [pc, #16]	; (800141c <setTimer4+0x28>)
 800140a:	2200      	movs	r2, #0
 800140c:	601a      	str	r2, [r3, #0]
}
 800140e:	bf00      	nop
 8001410:	370c      	adds	r7, #12
 8001412:	46bd      	mov	sp, r7
 8001414:	bc80      	pop	{r7}
 8001416:	4770      	bx	lr
 8001418:	200000d4 	.word	0x200000d4
 800141c:	200000b8 	.word	0x200000b8

08001420 <setTimer5>:
void setTimer5(int duration){
 8001420:	b480      	push	{r7}
 8001422:	b083      	sub	sp, #12
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]
	timer5_counter = duration/TIMER_CYCLE;
 8001428:	220a      	movs	r2, #10
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001430:	4a04      	ldr	r2, [pc, #16]	; (8001444 <setTimer5+0x24>)
 8001432:	6013      	str	r3, [r2, #0]
	timer_flag5 = 0;
 8001434:	4b04      	ldr	r3, [pc, #16]	; (8001448 <setTimer5+0x28>)
 8001436:	2200      	movs	r2, #0
 8001438:	601a      	str	r2, [r3, #0]
}
 800143a:	bf00      	nop
 800143c:	370c      	adds	r7, #12
 800143e:	46bd      	mov	sp, r7
 8001440:	bc80      	pop	{r7}
 8001442:	4770      	bx	lr
 8001444:	200000d8 	.word	0x200000d8
 8001448:	200000bc 	.word	0x200000bc

0800144c <setTimer6>:
void setTimer6(int duration){
 800144c:	b480      	push	{r7}
 800144e:	b083      	sub	sp, #12
 8001450:	af00      	add	r7, sp, #0
 8001452:	6078      	str	r0, [r7, #4]
	timer6_counter = duration/TIMER_CYCLE;
 8001454:	220a      	movs	r2, #10
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	fb93 f3f2 	sdiv	r3, r3, r2
 800145c:	4a04      	ldr	r2, [pc, #16]	; (8001470 <setTimer6+0x24>)
 800145e:	6013      	str	r3, [r2, #0]
	timer_flag6 = 0;
 8001460:	4b04      	ldr	r3, [pc, #16]	; (8001474 <setTimer6+0x28>)
 8001462:	2200      	movs	r2, #0
 8001464:	601a      	str	r2, [r3, #0]
}
 8001466:	bf00      	nop
 8001468:	370c      	adds	r7, #12
 800146a:	46bd      	mov	sp, r7
 800146c:	bc80      	pop	{r7}
 800146e:	4770      	bx	lr
 8001470:	200000dc 	.word	0x200000dc
 8001474:	200000c0 	.word	0x200000c0

08001478 <timer_run>:
void timer_run() {
 8001478:	b480      	push	{r7}
 800147a:	af00      	add	r7, sp, #0
	 if( timer0_counter > 0) {
 800147c:	4b39      	ldr	r3, [pc, #228]	; (8001564 <timer_run+0xec>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	2b00      	cmp	r3, #0
 8001482:	dd0b      	ble.n	800149c <timer_run+0x24>
		 timer0_counter--;
 8001484:	4b37      	ldr	r3, [pc, #220]	; (8001564 <timer_run+0xec>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	3b01      	subs	r3, #1
 800148a:	4a36      	ldr	r2, [pc, #216]	; (8001564 <timer_run+0xec>)
 800148c:	6013      	str	r3, [r2, #0]
		 if( timer0_counter == 0) timer_flag0 = 1;
 800148e:	4b35      	ldr	r3, [pc, #212]	; (8001564 <timer_run+0xec>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	2b00      	cmp	r3, #0
 8001494:	d102      	bne.n	800149c <timer_run+0x24>
 8001496:	4b34      	ldr	r3, [pc, #208]	; (8001568 <timer_run+0xf0>)
 8001498:	2201      	movs	r2, #1
 800149a:	601a      	str	r2, [r3, #0]
	 }

	 if( timer1_counter > 0) {
 800149c:	4b33      	ldr	r3, [pc, #204]	; (800156c <timer_run+0xf4>)
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	dd0b      	ble.n	80014bc <timer_run+0x44>
		 timer1_counter--;
 80014a4:	4b31      	ldr	r3, [pc, #196]	; (800156c <timer_run+0xf4>)
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	3b01      	subs	r3, #1
 80014aa:	4a30      	ldr	r2, [pc, #192]	; (800156c <timer_run+0xf4>)
 80014ac:	6013      	str	r3, [r2, #0]
		 if( timer1_counter == 0) timer_flag1 = 1;
 80014ae:	4b2f      	ldr	r3, [pc, #188]	; (800156c <timer_run+0xf4>)
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	2b00      	cmp	r3, #0
 80014b4:	d102      	bne.n	80014bc <timer_run+0x44>
 80014b6:	4b2e      	ldr	r3, [pc, #184]	; (8001570 <timer_run+0xf8>)
 80014b8:	2201      	movs	r2, #1
 80014ba:	601a      	str	r2, [r3, #0]
	 }
	 if(timer2_counter>0){
 80014bc:	4b2d      	ldr	r3, [pc, #180]	; (8001574 <timer_run+0xfc>)
 80014be:	681b      	ldr	r3, [r3, #0]
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	dd0b      	ble.n	80014dc <timer_run+0x64>
		 timer2_counter--;
 80014c4:	4b2b      	ldr	r3, [pc, #172]	; (8001574 <timer_run+0xfc>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	3b01      	subs	r3, #1
 80014ca:	4a2a      	ldr	r2, [pc, #168]	; (8001574 <timer_run+0xfc>)
 80014cc:	6013      	str	r3, [r2, #0]
		 if(timer2_counter == 0) timer_flag2 = 1;
 80014ce:	4b29      	ldr	r3, [pc, #164]	; (8001574 <timer_run+0xfc>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	2b00      	cmp	r3, #0
 80014d4:	d102      	bne.n	80014dc <timer_run+0x64>
 80014d6:	4b28      	ldr	r3, [pc, #160]	; (8001578 <timer_run+0x100>)
 80014d8:	2201      	movs	r2, #1
 80014da:	601a      	str	r2, [r3, #0]
	 }
	 if( timer3_counter > 0) {
 80014dc:	4b27      	ldr	r3, [pc, #156]	; (800157c <timer_run+0x104>)
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	dd0b      	ble.n	80014fc <timer_run+0x84>
		 timer3_counter--;
 80014e4:	4b25      	ldr	r3, [pc, #148]	; (800157c <timer_run+0x104>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	3b01      	subs	r3, #1
 80014ea:	4a24      	ldr	r2, [pc, #144]	; (800157c <timer_run+0x104>)
 80014ec:	6013      	str	r3, [r2, #0]
		 if( timer3_counter == 0) timer_flag3 = 1;
 80014ee:	4b23      	ldr	r3, [pc, #140]	; (800157c <timer_run+0x104>)
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	2b00      	cmp	r3, #0
 80014f4:	d102      	bne.n	80014fc <timer_run+0x84>
 80014f6:	4b22      	ldr	r3, [pc, #136]	; (8001580 <timer_run+0x108>)
 80014f8:	2201      	movs	r2, #1
 80014fa:	601a      	str	r2, [r3, #0]
	 }

	 if( timer4_counter > 0) {
 80014fc:	4b21      	ldr	r3, [pc, #132]	; (8001584 <timer_run+0x10c>)
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	2b00      	cmp	r3, #0
 8001502:	dd0b      	ble.n	800151c <timer_run+0xa4>
		 timer4_counter--;
 8001504:	4b1f      	ldr	r3, [pc, #124]	; (8001584 <timer_run+0x10c>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	3b01      	subs	r3, #1
 800150a:	4a1e      	ldr	r2, [pc, #120]	; (8001584 <timer_run+0x10c>)
 800150c:	6013      	str	r3, [r2, #0]
		 if( timer4_counter == 0) timer_flag4 = 1;
 800150e:	4b1d      	ldr	r3, [pc, #116]	; (8001584 <timer_run+0x10c>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	2b00      	cmp	r3, #0
 8001514:	d102      	bne.n	800151c <timer_run+0xa4>
 8001516:	4b1c      	ldr	r3, [pc, #112]	; (8001588 <timer_run+0x110>)
 8001518:	2201      	movs	r2, #1
 800151a:	601a      	str	r2, [r3, #0]
	 }
	 if(timer5_counter>0){
 800151c:	4b1b      	ldr	r3, [pc, #108]	; (800158c <timer_run+0x114>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	2b00      	cmp	r3, #0
 8001522:	dd0b      	ble.n	800153c <timer_run+0xc4>
		 timer5_counter--;
 8001524:	4b19      	ldr	r3, [pc, #100]	; (800158c <timer_run+0x114>)
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	3b01      	subs	r3, #1
 800152a:	4a18      	ldr	r2, [pc, #96]	; (800158c <timer_run+0x114>)
 800152c:	6013      	str	r3, [r2, #0]
		 if(timer5_counter == 0) timer_flag5 = 1;
 800152e:	4b17      	ldr	r3, [pc, #92]	; (800158c <timer_run+0x114>)
 8001530:	681b      	ldr	r3, [r3, #0]
 8001532:	2b00      	cmp	r3, #0
 8001534:	d102      	bne.n	800153c <timer_run+0xc4>
 8001536:	4b16      	ldr	r3, [pc, #88]	; (8001590 <timer_run+0x118>)
 8001538:	2201      	movs	r2, #1
 800153a:	601a      	str	r2, [r3, #0]
	 }
	 if(timer6_counter>0){
 800153c:	4b15      	ldr	r3, [pc, #84]	; (8001594 <timer_run+0x11c>)
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	2b00      	cmp	r3, #0
 8001542:	dd0b      	ble.n	800155c <timer_run+0xe4>
		 timer6_counter--;
 8001544:	4b13      	ldr	r3, [pc, #76]	; (8001594 <timer_run+0x11c>)
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	3b01      	subs	r3, #1
 800154a:	4a12      	ldr	r2, [pc, #72]	; (8001594 <timer_run+0x11c>)
 800154c:	6013      	str	r3, [r2, #0]
		 if(timer6_counter == 0) timer_flag6 = 1;
 800154e:	4b11      	ldr	r3, [pc, #68]	; (8001594 <timer_run+0x11c>)
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	2b00      	cmp	r3, #0
 8001554:	d102      	bne.n	800155c <timer_run+0xe4>
 8001556:	4b10      	ldr	r3, [pc, #64]	; (8001598 <timer_run+0x120>)
 8001558:	2201      	movs	r2, #1
 800155a:	601a      	str	r2, [r3, #0]
	 }

 }
 800155c:	bf00      	nop
 800155e:	46bd      	mov	sp, r7
 8001560:	bc80      	pop	{r7}
 8001562:	4770      	bx	lr
 8001564:	200000c4 	.word	0x200000c4
 8001568:	200000a8 	.word	0x200000a8
 800156c:	200000c8 	.word	0x200000c8
 8001570:	200000ac 	.word	0x200000ac
 8001574:	200000cc 	.word	0x200000cc
 8001578:	200000b0 	.word	0x200000b0
 800157c:	200000d0 	.word	0x200000d0
 8001580:	200000b4 	.word	0x200000b4
 8001584:	200000d4 	.word	0x200000d4
 8001588:	200000b8 	.word	0x200000b8
 800158c:	200000d8 	.word	0x200000d8
 8001590:	200000bc 	.word	0x200000bc
 8001594:	200000dc 	.word	0x200000dc
 8001598:	200000c0 	.word	0x200000c0

0800159c <red1Control>:
#include "led_display.h"
#include "global.h"
#include "main.h"
#include "timer.h"

void red1Control(){
 800159c:	b580      	push	{r7, lr}
 800159e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 0);
 80015a0:	2200      	movs	r2, #0
 80015a2:	2102      	movs	r1, #2
 80015a4:	4807      	ldr	r0, [pc, #28]	; (80015c4 <red1Control+0x28>)
 80015a6:	f000 fc80 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 80015aa:	2201      	movs	r2, #1
 80015ac:	2104      	movs	r1, #4
 80015ae:	4805      	ldr	r0, [pc, #20]	; (80015c4 <red1Control+0x28>)
 80015b0:	f000 fc7b 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 80015b4:	2201      	movs	r2, #1
 80015b6:	2108      	movs	r1, #8
 80015b8:	4802      	ldr	r0, [pc, #8]	; (80015c4 <red1Control+0x28>)
 80015ba:	f000 fc76 	bl	8001eaa <HAL_GPIO_WritePin>
}
 80015be:	bf00      	nop
 80015c0:	bd80      	pop	{r7, pc}
 80015c2:	bf00      	nop
 80015c4:	40010800 	.word	0x40010800

080015c8 <red2Control>:
void red2Control(){
 80015c8:	b580      	push	{r7, lr}
 80015ca:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 0);
 80015cc:	2200      	movs	r2, #0
 80015ce:	2110      	movs	r1, #16
 80015d0:	4807      	ldr	r0, [pc, #28]	; (80015f0 <red2Control+0x28>)
 80015d2:	f000 fc6a 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 80015d6:	2201      	movs	r2, #1
 80015d8:	2120      	movs	r1, #32
 80015da:	4805      	ldr	r0, [pc, #20]	; (80015f0 <red2Control+0x28>)
 80015dc:	f000 fc65 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 80015e0:	2201      	movs	r2, #1
 80015e2:	2140      	movs	r1, #64	; 0x40
 80015e4:	4802      	ldr	r0, [pc, #8]	; (80015f0 <red2Control+0x28>)
 80015e6:	f000 fc60 	bl	8001eaa <HAL_GPIO_WritePin>
}
 80015ea:	bf00      	nop
 80015ec:	bd80      	pop	{r7, pc}
 80015ee:	bf00      	nop
 80015f0:	40010800 	.word	0x40010800

080015f4 <amber1Control>:
void amber1Control(){
 80015f4:	b580      	push	{r7, lr}
 80015f6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 80015f8:	2201      	movs	r2, #1
 80015fa:	2102      	movs	r1, #2
 80015fc:	4807      	ldr	r0, [pc, #28]	; (800161c <amber1Control+0x28>)
 80015fe:	f000 fc54 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 0);
 8001602:	2200      	movs	r2, #0
 8001604:	2104      	movs	r1, #4
 8001606:	4805      	ldr	r0, [pc, #20]	; (800161c <amber1Control+0x28>)
 8001608:	f000 fc4f 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 800160c:	2201      	movs	r2, #1
 800160e:	2108      	movs	r1, #8
 8001610:	4802      	ldr	r0, [pc, #8]	; (800161c <amber1Control+0x28>)
 8001612:	f000 fc4a 	bl	8001eaa <HAL_GPIO_WritePin>
}
 8001616:	bf00      	nop
 8001618:	bd80      	pop	{r7, pc}
 800161a:	bf00      	nop
 800161c:	40010800 	.word	0x40010800

08001620 <amber2Control>:
void amber2Control(){
 8001620:	b580      	push	{r7, lr}
 8001622:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 8001624:	2201      	movs	r2, #1
 8001626:	2110      	movs	r1, #16
 8001628:	4807      	ldr	r0, [pc, #28]	; (8001648 <amber2Control+0x28>)
 800162a:	f000 fc3e 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 0);
 800162e:	2200      	movs	r2, #0
 8001630:	2120      	movs	r1, #32
 8001632:	4805      	ldr	r0, [pc, #20]	; (8001648 <amber2Control+0x28>)
 8001634:	f000 fc39 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 8001638:	2201      	movs	r2, #1
 800163a:	2140      	movs	r1, #64	; 0x40
 800163c:	4802      	ldr	r0, [pc, #8]	; (8001648 <amber2Control+0x28>)
 800163e:	f000 fc34 	bl	8001eaa <HAL_GPIO_WritePin>
}
 8001642:	bf00      	nop
 8001644:	bd80      	pop	{r7, pc}
 8001646:	bf00      	nop
 8001648:	40010800 	.word	0x40010800

0800164c <green1Control>:
void green1Control(){
 800164c:	b580      	push	{r7, lr}
 800164e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 8001650:	2201      	movs	r2, #1
 8001652:	2102      	movs	r1, #2
 8001654:	4807      	ldr	r0, [pc, #28]	; (8001674 <green1Control+0x28>)
 8001656:	f000 fc28 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 800165a:	2201      	movs	r2, #1
 800165c:	2104      	movs	r1, #4
 800165e:	4805      	ldr	r0, [pc, #20]	; (8001674 <green1Control+0x28>)
 8001660:	f000 fc23 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 0);
 8001664:	2200      	movs	r2, #0
 8001666:	2108      	movs	r1, #8
 8001668:	4802      	ldr	r0, [pc, #8]	; (8001674 <green1Control+0x28>)
 800166a:	f000 fc1e 	bl	8001eaa <HAL_GPIO_WritePin>
}
 800166e:	bf00      	nop
 8001670:	bd80      	pop	{r7, pc}
 8001672:	bf00      	nop
 8001674:	40010800 	.word	0x40010800

08001678 <green2Control>:
void green2Control(){
 8001678:	b580      	push	{r7, lr}
 800167a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 800167c:	2201      	movs	r2, #1
 800167e:	2110      	movs	r1, #16
 8001680:	4807      	ldr	r0, [pc, #28]	; (80016a0 <green2Control+0x28>)
 8001682:	f000 fc12 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 8001686:	2201      	movs	r2, #1
 8001688:	2120      	movs	r1, #32
 800168a:	4805      	ldr	r0, [pc, #20]	; (80016a0 <green2Control+0x28>)
 800168c:	f000 fc0d 	bl	8001eaa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 0);
 8001690:	2200      	movs	r2, #0
 8001692:	2140      	movs	r1, #64	; 0x40
 8001694:	4802      	ldr	r0, [pc, #8]	; (80016a0 <green2Control+0x28>)
 8001696:	f000 fc08 	bl	8001eaa <HAL_GPIO_WritePin>
}
 800169a:	bf00      	nop
 800169c:	bd80      	pop	{r7, pc}
 800169e:	bf00      	nop
 80016a0:	40010800 	.word	0x40010800

080016a4 <fsm_automatic_1>:


void fsm_automatic_1(){
 80016a4:	b580      	push	{r7, lr}
 80016a6:	af00      	add	r7, sp, #0
	switch(status1){
 80016a8:	4b30      	ldr	r3, [pc, #192]	; (800176c <fsm_automatic_1+0xc8>)
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	3b01      	subs	r3, #1
 80016ae:	2b03      	cmp	r3, #3
 80016b0:	d852      	bhi.n	8001758 <fsm_automatic_1+0xb4>
 80016b2:	a201      	add	r2, pc, #4	; (adr r2, 80016b8 <fsm_automatic_1+0x14>)
 80016b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016b8:	080016c9 	.word	0x080016c9
 80016bc:	080016e7 	.word	0x080016e7
 80016c0:	0800170d 	.word	0x0800170d
 80016c4:	08001733 	.word	0x08001733
		case INIT1:
			status1 = AUTO_RED1;
 80016c8:	4b28      	ldr	r3, [pc, #160]	; (800176c <fsm_automatic_1+0xc8>)
 80016ca:	2202      	movs	r2, #2
 80016cc:	601a      	str	r2, [r3, #0]
			red1Control();
 80016ce:	f7ff ff65 	bl	800159c <red1Control>
			setTimer0(time_red*1000);
 80016d2:	4b27      	ldr	r3, [pc, #156]	; (8001770 <fsm_automatic_1+0xcc>)
 80016d4:	681b      	ldr	r3, [r3, #0]
 80016d6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80016da:	fb02 f303 	mul.w	r3, r2, r3
 80016de:	4618      	mov	r0, r3
 80016e0:	f7ff fe46 	bl	8001370 <setTimer0>
			break;
 80016e4:	e03f      	b.n	8001766 <fsm_automatic_1+0xc2>
		case AUTO_RED1:
			if(timer_flag0 == 1){
 80016e6:	4b23      	ldr	r3, [pc, #140]	; (8001774 <fsm_automatic_1+0xd0>)
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	2b01      	cmp	r3, #1
 80016ec:	d136      	bne.n	800175c <fsm_automatic_1+0xb8>
				status1 = AUTO_GREEN1;
 80016ee:	4b1f      	ldr	r3, [pc, #124]	; (800176c <fsm_automatic_1+0xc8>)
 80016f0:	2203      	movs	r2, #3
 80016f2:	601a      	str	r2, [r3, #0]
				green1Control();
 80016f4:	f7ff ffaa 	bl	800164c <green1Control>
				setTimer0(time_green*1000);
 80016f8:	4b1f      	ldr	r3, [pc, #124]	; (8001778 <fsm_automatic_1+0xd4>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001700:	fb02 f303 	mul.w	r3, r2, r3
 8001704:	4618      	mov	r0, r3
 8001706:	f7ff fe33 	bl	8001370 <setTimer0>
			}
			break;
 800170a:	e027      	b.n	800175c <fsm_automatic_1+0xb8>
		case AUTO_GREEN1:
			if(timer_flag0 == 1){
 800170c:	4b19      	ldr	r3, [pc, #100]	; (8001774 <fsm_automatic_1+0xd0>)
 800170e:	681b      	ldr	r3, [r3, #0]
 8001710:	2b01      	cmp	r3, #1
 8001712:	d125      	bne.n	8001760 <fsm_automatic_1+0xbc>
				status1 = AUTO_YELLOW1;
 8001714:	4b15      	ldr	r3, [pc, #84]	; (800176c <fsm_automatic_1+0xc8>)
 8001716:	2204      	movs	r2, #4
 8001718:	601a      	str	r2, [r3, #0]
				amber1Control();
 800171a:	f7ff ff6b 	bl	80015f4 <amber1Control>
				setTimer0(time_amber*1000);
 800171e:	4b17      	ldr	r3, [pc, #92]	; (800177c <fsm_automatic_1+0xd8>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001726:	fb02 f303 	mul.w	r3, r2, r3
 800172a:	4618      	mov	r0, r3
 800172c:	f7ff fe20 	bl	8001370 <setTimer0>
			}
			break;
 8001730:	e016      	b.n	8001760 <fsm_automatic_1+0xbc>
		case AUTO_YELLOW1:
			if(timer_flag0 == 1){
 8001732:	4b10      	ldr	r3, [pc, #64]	; (8001774 <fsm_automatic_1+0xd0>)
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	2b01      	cmp	r3, #1
 8001738:	d114      	bne.n	8001764 <fsm_automatic_1+0xc0>
				status1 = INIT1;
 800173a:	4b0c      	ldr	r3, [pc, #48]	; (800176c <fsm_automatic_1+0xc8>)
 800173c:	2201      	movs	r2, #1
 800173e:	601a      	str	r2, [r3, #0]
                red1Control();
 8001740:	f7ff ff2c 	bl	800159c <red1Control>
                setTimer0(time_red*1000);
 8001744:	4b0a      	ldr	r3, [pc, #40]	; (8001770 <fsm_automatic_1+0xcc>)
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800174c:	fb02 f303 	mul.w	r3, r2, r3
 8001750:	4618      	mov	r0, r3
 8001752:	f7ff fe0d 	bl	8001370 <setTimer0>
			}
			break;
 8001756:	e005      	b.n	8001764 <fsm_automatic_1+0xc0>
		default:
			break;
 8001758:	bf00      	nop
 800175a:	e004      	b.n	8001766 <fsm_automatic_1+0xc2>
			break;
 800175c:	bf00      	nop
 800175e:	e002      	b.n	8001766 <fsm_automatic_1+0xc2>
			break;
 8001760:	bf00      	nop
 8001762:	e000      	b.n	8001766 <fsm_automatic_1+0xc2>
			break;
 8001764:	bf00      	nop
	}
}
 8001766:	bf00      	nop
 8001768:	bd80      	pop	{r7, pc}
 800176a:	bf00      	nop
 800176c:	20000000 	.word	0x20000000
 8001770:	20000020 	.word	0x20000020
 8001774:	200000a8 	.word	0x200000a8
 8001778:	20000028 	.word	0x20000028
 800177c:	20000024 	.word	0x20000024

08001780 <fsm_automatic_2>:

void fsm_automatic_2(){
 8001780:	b580      	push	{r7, lr}
 8001782:	af00      	add	r7, sp, #0
	switch(status2){
 8001784:	4b30      	ldr	r3, [pc, #192]	; (8001848 <fsm_automatic_2+0xc8>)
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	3b01      	subs	r3, #1
 800178a:	2b03      	cmp	r3, #3
 800178c:	d852      	bhi.n	8001834 <fsm_automatic_2+0xb4>
 800178e:	a201      	add	r2, pc, #4	; (adr r2, 8001794 <fsm_automatic_2+0x14>)
 8001790:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001794:	080017a5 	.word	0x080017a5
 8001798:	080017c3 	.word	0x080017c3
 800179c:	080017e9 	.word	0x080017e9
 80017a0:	0800180f 	.word	0x0800180f
		case INIT2:
			status2 = AUTO_GREEN2;
 80017a4:	4b28      	ldr	r3, [pc, #160]	; (8001848 <fsm_automatic_2+0xc8>)
 80017a6:	2202      	movs	r2, #2
 80017a8:	601a      	str	r2, [r3, #0]
			green2Control();
 80017aa:	f7ff ff65 	bl	8001678 <green2Control>
			setTimer1(time_green*1000);
 80017ae:	4b27      	ldr	r3, [pc, #156]	; (800184c <fsm_automatic_2+0xcc>)
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80017b6:	fb02 f303 	mul.w	r3, r2, r3
 80017ba:	4618      	mov	r0, r3
 80017bc:	f7ff fdee 	bl	800139c <setTimer1>
			break;
 80017c0:	e03f      	b.n	8001842 <fsm_automatic_2+0xc2>
		case AUTO_GREEN2:
			if(timer_flag1 == 1){
 80017c2:	4b23      	ldr	r3, [pc, #140]	; (8001850 <fsm_automatic_2+0xd0>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	2b01      	cmp	r3, #1
 80017c8:	d136      	bne.n	8001838 <fsm_automatic_2+0xb8>
				status2 = AUTO_YELLOW2;
 80017ca:	4b1f      	ldr	r3, [pc, #124]	; (8001848 <fsm_automatic_2+0xc8>)
 80017cc:	2203      	movs	r2, #3
 80017ce:	601a      	str	r2, [r3, #0]
				amber2Control();
 80017d0:	f7ff ff26 	bl	8001620 <amber2Control>
				setTimer1(time_amber*1000);
 80017d4:	4b1f      	ldr	r3, [pc, #124]	; (8001854 <fsm_automatic_2+0xd4>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80017dc:	fb02 f303 	mul.w	r3, r2, r3
 80017e0:	4618      	mov	r0, r3
 80017e2:	f7ff fddb 	bl	800139c <setTimer1>
			}
			break;
 80017e6:	e027      	b.n	8001838 <fsm_automatic_2+0xb8>
		case AUTO_YELLOW2:
			if(timer_flag1 == 1){
 80017e8:	4b19      	ldr	r3, [pc, #100]	; (8001850 <fsm_automatic_2+0xd0>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	2b01      	cmp	r3, #1
 80017ee:	d125      	bne.n	800183c <fsm_automatic_2+0xbc>
				status2 = AUTO_RED2;
 80017f0:	4b15      	ldr	r3, [pc, #84]	; (8001848 <fsm_automatic_2+0xc8>)
 80017f2:	2204      	movs	r2, #4
 80017f4:	601a      	str	r2, [r3, #0]
                red2Control();
 80017f6:	f7ff fee7 	bl	80015c8 <red2Control>
                setTimer1(time_red*1000);
 80017fa:	4b17      	ldr	r3, [pc, #92]	; (8001858 <fsm_automatic_2+0xd8>)
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001802:	fb02 f303 	mul.w	r3, r2, r3
 8001806:	4618      	mov	r0, r3
 8001808:	f7ff fdc8 	bl	800139c <setTimer1>
			}
			break;
 800180c:	e016      	b.n	800183c <fsm_automatic_2+0xbc>
		case AUTO_RED2:
			if(timer_flag1== 1){
 800180e:	4b10      	ldr	r3, [pc, #64]	; (8001850 <fsm_automatic_2+0xd0>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	2b01      	cmp	r3, #1
 8001814:	d114      	bne.n	8001840 <fsm_automatic_2+0xc0>
				status2 = INIT2;
 8001816:	4b0c      	ldr	r3, [pc, #48]	; (8001848 <fsm_automatic_2+0xc8>)
 8001818:	2201      	movs	r2, #1
 800181a:	601a      	str	r2, [r3, #0]
				green2Control();
 800181c:	f7ff ff2c 	bl	8001678 <green2Control>
				setTimer1(time_green*1000);
 8001820:	4b0a      	ldr	r3, [pc, #40]	; (800184c <fsm_automatic_2+0xcc>)
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001828:	fb02 f303 	mul.w	r3, r2, r3
 800182c:	4618      	mov	r0, r3
 800182e:	f7ff fdb5 	bl	800139c <setTimer1>
			}
			break;
 8001832:	e005      	b.n	8001840 <fsm_automatic_2+0xc0>
		default:
			break;
 8001834:	bf00      	nop
 8001836:	e004      	b.n	8001842 <fsm_automatic_2+0xc2>
			break;
 8001838:	bf00      	nop
 800183a:	e002      	b.n	8001842 <fsm_automatic_2+0xc2>
			break;
 800183c:	bf00      	nop
 800183e:	e000      	b.n	8001842 <fsm_automatic_2+0xc2>
			break;
 8001840:	bf00      	nop
	}
}
 8001842:	bf00      	nop
 8001844:	bd80      	pop	{r7, pc}
 8001846:	bf00      	nop
 8001848:	20000004 	.word	0x20000004
 800184c:	20000028 	.word	0x20000028
 8001850:	200000ac 	.word	0x200000ac
 8001854:	20000024 	.word	0x20000024
 8001858:	20000020 	.word	0x20000020

0800185c <Reset_Handler>:
 800185c:	480c      	ldr	r0, [pc, #48]	; (8001890 <LoopFillZerobss+0x12>)
 800185e:	490d      	ldr	r1, [pc, #52]	; (8001894 <LoopFillZerobss+0x16>)
 8001860:	4a0d      	ldr	r2, [pc, #52]	; (8001898 <LoopFillZerobss+0x1a>)
 8001862:	2300      	movs	r3, #0
 8001864:	e002      	b.n	800186c <LoopCopyDataInit>

08001866 <CopyDataInit>:
 8001866:	58d4      	ldr	r4, [r2, r3]
 8001868:	50c4      	str	r4, [r0, r3]
 800186a:	3304      	adds	r3, #4

0800186c <LoopCopyDataInit>:
 800186c:	18c4      	adds	r4, r0, r3
 800186e:	428c      	cmp	r4, r1
 8001870:	d3f9      	bcc.n	8001866 <CopyDataInit>
 8001872:	4a0a      	ldr	r2, [pc, #40]	; (800189c <LoopFillZerobss+0x1e>)
 8001874:	4c0a      	ldr	r4, [pc, #40]	; (80018a0 <LoopFillZerobss+0x22>)
 8001876:	2300      	movs	r3, #0
 8001878:	e001      	b.n	800187e <LoopFillZerobss>

0800187a <FillZerobss>:
 800187a:	6013      	str	r3, [r2, #0]
 800187c:	3204      	adds	r2, #4

0800187e <LoopFillZerobss>:
 800187e:	42a2      	cmp	r2, r4
 8001880:	d3fb      	bcc.n	800187a <FillZerobss>
 8001882:	f7ff fd6f 	bl	8001364 <SystemInit>
 8001886:	f001 fb0d 	bl	8002ea4 <__libc_init_array>
 800188a:	f7ff fbd3 	bl	8001034 <main>
 800188e:	4770      	bx	lr
 8001890:	20000000 	.word	0x20000000
 8001894:	20000080 	.word	0x20000080
 8001898:	08002f3c 	.word	0x08002f3c
 800189c:	20000080 	.word	0x20000080
 80018a0:	20000134 	.word	0x20000134

080018a4 <ADC1_2_IRQHandler>:
 80018a4:	e7fe      	b.n	80018a4 <ADC1_2_IRQHandler>
	...

080018a8 <HAL_Init>:
 80018a8:	b580      	push	{r7, lr}
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	4b08      	ldr	r3, [pc, #32]	; (80018d0 <HAL_Init+0x28>)
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	4a07      	ldr	r2, [pc, #28]	; (80018d0 <HAL_Init+0x28>)
 80018b2:	f043 0310 	orr.w	r3, r3, #16
 80018b6:	6013      	str	r3, [r2, #0]
 80018b8:	2003      	movs	r0, #3
 80018ba:	f000 f923 	bl	8001b04 <HAL_NVIC_SetPriorityGrouping>
 80018be:	200f      	movs	r0, #15
 80018c0:	f000 f808 	bl	80018d4 <HAL_InitTick>
 80018c4:	f7ff fcc6 	bl	8001254 <HAL_MspInit>
 80018c8:	2300      	movs	r3, #0
 80018ca:	4618      	mov	r0, r3
 80018cc:	bd80      	pop	{r7, pc}
 80018ce:	bf00      	nop
 80018d0:	40022000 	.word	0x40022000

080018d4 <HAL_InitTick>:
 80018d4:	b580      	push	{r7, lr}
 80018d6:	b082      	sub	sp, #8
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]
 80018dc:	4b12      	ldr	r3, [pc, #72]	; (8001928 <HAL_InitTick+0x54>)
 80018de:	681a      	ldr	r2, [r3, #0]
 80018e0:	4b12      	ldr	r3, [pc, #72]	; (800192c <HAL_InitTick+0x58>)
 80018e2:	781b      	ldrb	r3, [r3, #0]
 80018e4:	4619      	mov	r1, r3
 80018e6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80018ea:	fbb3 f3f1 	udiv	r3, r3, r1
 80018ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80018f2:	4618      	mov	r0, r3
 80018f4:	f000 f93b 	bl	8001b6e <HAL_SYSTICK_Config>
 80018f8:	4603      	mov	r3, r0
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d001      	beq.n	8001902 <HAL_InitTick+0x2e>
 80018fe:	2301      	movs	r3, #1
 8001900:	e00e      	b.n	8001920 <HAL_InitTick+0x4c>
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	2b0f      	cmp	r3, #15
 8001906:	d80a      	bhi.n	800191e <HAL_InitTick+0x4a>
 8001908:	2200      	movs	r2, #0
 800190a:	6879      	ldr	r1, [r7, #4]
 800190c:	f04f 30ff 	mov.w	r0, #4294967295
 8001910:	f000 f903 	bl	8001b1a <HAL_NVIC_SetPriority>
 8001914:	4a06      	ldr	r2, [pc, #24]	; (8001930 <HAL_InitTick+0x5c>)
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	6013      	str	r3, [r2, #0]
 800191a:	2300      	movs	r3, #0
 800191c:	e000      	b.n	8001920 <HAL_InitTick+0x4c>
 800191e:	2301      	movs	r3, #1
 8001920:	4618      	mov	r0, r3
 8001922:	3708      	adds	r7, #8
 8001924:	46bd      	mov	sp, r7
 8001926:	bd80      	pop	{r7, pc}
 8001928:	20000074 	.word	0x20000074
 800192c:	2000007c 	.word	0x2000007c
 8001930:	20000078 	.word	0x20000078

08001934 <HAL_IncTick>:
 8001934:	b480      	push	{r7}
 8001936:	af00      	add	r7, sp, #0
 8001938:	4b05      	ldr	r3, [pc, #20]	; (8001950 <HAL_IncTick+0x1c>)
 800193a:	781b      	ldrb	r3, [r3, #0]
 800193c:	461a      	mov	r2, r3
 800193e:	4b05      	ldr	r3, [pc, #20]	; (8001954 <HAL_IncTick+0x20>)
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	4413      	add	r3, r2
 8001944:	4a03      	ldr	r2, [pc, #12]	; (8001954 <HAL_IncTick+0x20>)
 8001946:	6013      	str	r3, [r2, #0]
 8001948:	bf00      	nop
 800194a:	46bd      	mov	sp, r7
 800194c:	bc80      	pop	{r7}
 800194e:	4770      	bx	lr
 8001950:	2000007c 	.word	0x2000007c
 8001954:	20000130 	.word	0x20000130

08001958 <HAL_GetTick>:
 8001958:	b480      	push	{r7}
 800195a:	af00      	add	r7, sp, #0
 800195c:	4b02      	ldr	r3, [pc, #8]	; (8001968 <HAL_GetTick+0x10>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	4618      	mov	r0, r3
 8001962:	46bd      	mov	sp, r7
 8001964:	bc80      	pop	{r7}
 8001966:	4770      	bx	lr
 8001968:	20000130 	.word	0x20000130

0800196c <__NVIC_SetPriorityGrouping>:
 800196c:	b480      	push	{r7}
 800196e:	b085      	sub	sp, #20
 8001970:	af00      	add	r7, sp, #0
 8001972:	6078      	str	r0, [r7, #4]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	f003 0307 	and.w	r3, r3, #7
 800197a:	60fb      	str	r3, [r7, #12]
 800197c:	4b0c      	ldr	r3, [pc, #48]	; (80019b0 <__NVIC_SetPriorityGrouping+0x44>)
 800197e:	68db      	ldr	r3, [r3, #12]
 8001980:	60bb      	str	r3, [r7, #8]
 8001982:	68ba      	ldr	r2, [r7, #8]
 8001984:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001988:	4013      	ands	r3, r2
 800198a:	60bb      	str	r3, [r7, #8]
 800198c:	68fb      	ldr	r3, [r7, #12]
 800198e:	021a      	lsls	r2, r3, #8
 8001990:	68bb      	ldr	r3, [r7, #8]
 8001992:	4313      	orrs	r3, r2
 8001994:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001998:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800199c:	60bb      	str	r3, [r7, #8]
 800199e:	4a04      	ldr	r2, [pc, #16]	; (80019b0 <__NVIC_SetPriorityGrouping+0x44>)
 80019a0:	68bb      	ldr	r3, [r7, #8]
 80019a2:	60d3      	str	r3, [r2, #12]
 80019a4:	bf00      	nop
 80019a6:	3714      	adds	r7, #20
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bc80      	pop	{r7}
 80019ac:	4770      	bx	lr
 80019ae:	bf00      	nop
 80019b0:	e000ed00 	.word	0xe000ed00

080019b4 <__NVIC_GetPriorityGrouping>:
 80019b4:	b480      	push	{r7}
 80019b6:	af00      	add	r7, sp, #0
 80019b8:	4b04      	ldr	r3, [pc, #16]	; (80019cc <__NVIC_GetPriorityGrouping+0x18>)
 80019ba:	68db      	ldr	r3, [r3, #12]
 80019bc:	0a1b      	lsrs	r3, r3, #8
 80019be:	f003 0307 	and.w	r3, r3, #7
 80019c2:	4618      	mov	r0, r3
 80019c4:	46bd      	mov	sp, r7
 80019c6:	bc80      	pop	{r7}
 80019c8:	4770      	bx	lr
 80019ca:	bf00      	nop
 80019cc:	e000ed00 	.word	0xe000ed00

080019d0 <__NVIC_EnableIRQ>:
 80019d0:	b480      	push	{r7}
 80019d2:	b083      	sub	sp, #12
 80019d4:	af00      	add	r7, sp, #0
 80019d6:	4603      	mov	r3, r0
 80019d8:	71fb      	strb	r3, [r7, #7]
 80019da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019de:	2b00      	cmp	r3, #0
 80019e0:	db0b      	blt.n	80019fa <__NVIC_EnableIRQ+0x2a>
 80019e2:	79fb      	ldrb	r3, [r7, #7]
 80019e4:	f003 021f 	and.w	r2, r3, #31
 80019e8:	4906      	ldr	r1, [pc, #24]	; (8001a04 <__NVIC_EnableIRQ+0x34>)
 80019ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019ee:	095b      	lsrs	r3, r3, #5
 80019f0:	2001      	movs	r0, #1
 80019f2:	fa00 f202 	lsl.w	r2, r0, r2
 80019f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80019fa:	bf00      	nop
 80019fc:	370c      	adds	r7, #12
 80019fe:	46bd      	mov	sp, r7
 8001a00:	bc80      	pop	{r7}
 8001a02:	4770      	bx	lr
 8001a04:	e000e100 	.word	0xe000e100

08001a08 <__NVIC_SetPriority>:
 8001a08:	b480      	push	{r7}
 8001a0a:	b083      	sub	sp, #12
 8001a0c:	af00      	add	r7, sp, #0
 8001a0e:	4603      	mov	r3, r0
 8001a10:	6039      	str	r1, [r7, #0]
 8001a12:	71fb      	strb	r3, [r7, #7]
 8001a14:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	db0a      	blt.n	8001a32 <__NVIC_SetPriority+0x2a>
 8001a1c:	683b      	ldr	r3, [r7, #0]
 8001a1e:	b2da      	uxtb	r2, r3
 8001a20:	490c      	ldr	r1, [pc, #48]	; (8001a54 <__NVIC_SetPriority+0x4c>)
 8001a22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a26:	0112      	lsls	r2, r2, #4
 8001a28:	b2d2      	uxtb	r2, r2
 8001a2a:	440b      	add	r3, r1
 8001a2c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001a30:	e00a      	b.n	8001a48 <__NVIC_SetPriority+0x40>
 8001a32:	683b      	ldr	r3, [r7, #0]
 8001a34:	b2da      	uxtb	r2, r3
 8001a36:	4908      	ldr	r1, [pc, #32]	; (8001a58 <__NVIC_SetPriority+0x50>)
 8001a38:	79fb      	ldrb	r3, [r7, #7]
 8001a3a:	f003 030f 	and.w	r3, r3, #15
 8001a3e:	3b04      	subs	r3, #4
 8001a40:	0112      	lsls	r2, r2, #4
 8001a42:	b2d2      	uxtb	r2, r2
 8001a44:	440b      	add	r3, r1
 8001a46:	761a      	strb	r2, [r3, #24]
 8001a48:	bf00      	nop
 8001a4a:	370c      	adds	r7, #12
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bc80      	pop	{r7}
 8001a50:	4770      	bx	lr
 8001a52:	bf00      	nop
 8001a54:	e000e100 	.word	0xe000e100
 8001a58:	e000ed00 	.word	0xe000ed00

08001a5c <NVIC_EncodePriority>:
 8001a5c:	b480      	push	{r7}
 8001a5e:	b089      	sub	sp, #36	; 0x24
 8001a60:	af00      	add	r7, sp, #0
 8001a62:	60f8      	str	r0, [r7, #12]
 8001a64:	60b9      	str	r1, [r7, #8]
 8001a66:	607a      	str	r2, [r7, #4]
 8001a68:	68fb      	ldr	r3, [r7, #12]
 8001a6a:	f003 0307 	and.w	r3, r3, #7
 8001a6e:	61fb      	str	r3, [r7, #28]
 8001a70:	69fb      	ldr	r3, [r7, #28]
 8001a72:	f1c3 0307 	rsb	r3, r3, #7
 8001a76:	2b04      	cmp	r3, #4
 8001a78:	bf28      	it	cs
 8001a7a:	2304      	movcs	r3, #4
 8001a7c:	61bb      	str	r3, [r7, #24]
 8001a7e:	69fb      	ldr	r3, [r7, #28]
 8001a80:	3304      	adds	r3, #4
 8001a82:	2b06      	cmp	r3, #6
 8001a84:	d902      	bls.n	8001a8c <NVIC_EncodePriority+0x30>
 8001a86:	69fb      	ldr	r3, [r7, #28]
 8001a88:	3b03      	subs	r3, #3
 8001a8a:	e000      	b.n	8001a8e <NVIC_EncodePriority+0x32>
 8001a8c:	2300      	movs	r3, #0
 8001a8e:	617b      	str	r3, [r7, #20]
 8001a90:	f04f 32ff 	mov.w	r2, #4294967295
 8001a94:	69bb      	ldr	r3, [r7, #24]
 8001a96:	fa02 f303 	lsl.w	r3, r2, r3
 8001a9a:	43da      	mvns	r2, r3
 8001a9c:	68bb      	ldr	r3, [r7, #8]
 8001a9e:	401a      	ands	r2, r3
 8001aa0:	697b      	ldr	r3, [r7, #20]
 8001aa2:	409a      	lsls	r2, r3
 8001aa4:	f04f 31ff 	mov.w	r1, #4294967295
 8001aa8:	697b      	ldr	r3, [r7, #20]
 8001aaa:	fa01 f303 	lsl.w	r3, r1, r3
 8001aae:	43d9      	mvns	r1, r3
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	400b      	ands	r3, r1
 8001ab4:	4313      	orrs	r3, r2
 8001ab6:	4618      	mov	r0, r3
 8001ab8:	3724      	adds	r7, #36	; 0x24
 8001aba:	46bd      	mov	sp, r7
 8001abc:	bc80      	pop	{r7}
 8001abe:	4770      	bx	lr

08001ac0 <SysTick_Config>:
 8001ac0:	b580      	push	{r7, lr}
 8001ac2:	b082      	sub	sp, #8
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	6078      	str	r0, [r7, #4]
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	3b01      	subs	r3, #1
 8001acc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ad0:	d301      	bcc.n	8001ad6 <SysTick_Config+0x16>
 8001ad2:	2301      	movs	r3, #1
 8001ad4:	e00f      	b.n	8001af6 <SysTick_Config+0x36>
 8001ad6:	4a0a      	ldr	r2, [pc, #40]	; (8001b00 <SysTick_Config+0x40>)
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	3b01      	subs	r3, #1
 8001adc:	6053      	str	r3, [r2, #4]
 8001ade:	210f      	movs	r1, #15
 8001ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8001ae4:	f7ff ff90 	bl	8001a08 <__NVIC_SetPriority>
 8001ae8:	4b05      	ldr	r3, [pc, #20]	; (8001b00 <SysTick_Config+0x40>)
 8001aea:	2200      	movs	r2, #0
 8001aec:	609a      	str	r2, [r3, #8]
 8001aee:	4b04      	ldr	r3, [pc, #16]	; (8001b00 <SysTick_Config+0x40>)
 8001af0:	2207      	movs	r2, #7
 8001af2:	601a      	str	r2, [r3, #0]
 8001af4:	2300      	movs	r3, #0
 8001af6:	4618      	mov	r0, r3
 8001af8:	3708      	adds	r7, #8
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bd80      	pop	{r7, pc}
 8001afe:	bf00      	nop
 8001b00:	e000e010 	.word	0xe000e010

08001b04 <HAL_NVIC_SetPriorityGrouping>:
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b082      	sub	sp, #8
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
 8001b0c:	6878      	ldr	r0, [r7, #4]
 8001b0e:	f7ff ff2d 	bl	800196c <__NVIC_SetPriorityGrouping>
 8001b12:	bf00      	nop
 8001b14:	3708      	adds	r7, #8
 8001b16:	46bd      	mov	sp, r7
 8001b18:	bd80      	pop	{r7, pc}

08001b1a <HAL_NVIC_SetPriority>:
 8001b1a:	b580      	push	{r7, lr}
 8001b1c:	b086      	sub	sp, #24
 8001b1e:	af00      	add	r7, sp, #0
 8001b20:	4603      	mov	r3, r0
 8001b22:	60b9      	str	r1, [r7, #8]
 8001b24:	607a      	str	r2, [r7, #4]
 8001b26:	73fb      	strb	r3, [r7, #15]
 8001b28:	2300      	movs	r3, #0
 8001b2a:	617b      	str	r3, [r7, #20]
 8001b2c:	f7ff ff42 	bl	80019b4 <__NVIC_GetPriorityGrouping>
 8001b30:	6178      	str	r0, [r7, #20]
 8001b32:	687a      	ldr	r2, [r7, #4]
 8001b34:	68b9      	ldr	r1, [r7, #8]
 8001b36:	6978      	ldr	r0, [r7, #20]
 8001b38:	f7ff ff90 	bl	8001a5c <NVIC_EncodePriority>
 8001b3c:	4602      	mov	r2, r0
 8001b3e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b42:	4611      	mov	r1, r2
 8001b44:	4618      	mov	r0, r3
 8001b46:	f7ff ff5f 	bl	8001a08 <__NVIC_SetPriority>
 8001b4a:	bf00      	nop
 8001b4c:	3718      	adds	r7, #24
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bd80      	pop	{r7, pc}

08001b52 <HAL_NVIC_EnableIRQ>:
 8001b52:	b580      	push	{r7, lr}
 8001b54:	b082      	sub	sp, #8
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	4603      	mov	r3, r0
 8001b5a:	71fb      	strb	r3, [r7, #7]
 8001b5c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b60:	4618      	mov	r0, r3
 8001b62:	f7ff ff35 	bl	80019d0 <__NVIC_EnableIRQ>
 8001b66:	bf00      	nop
 8001b68:	3708      	adds	r7, #8
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	bd80      	pop	{r7, pc}

08001b6e <HAL_SYSTICK_Config>:
 8001b6e:	b580      	push	{r7, lr}
 8001b70:	b082      	sub	sp, #8
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	6078      	str	r0, [r7, #4]
 8001b76:	6878      	ldr	r0, [r7, #4]
 8001b78:	f7ff ffa2 	bl	8001ac0 <SysTick_Config>
 8001b7c:	4603      	mov	r3, r0
 8001b7e:	4618      	mov	r0, r3
 8001b80:	3708      	adds	r7, #8
 8001b82:	46bd      	mov	sp, r7
 8001b84:	bd80      	pop	{r7, pc}
	...

08001b88 <HAL_GPIO_Init>:
 8001b88:	b480      	push	{r7}
 8001b8a:	b08b      	sub	sp, #44	; 0x2c
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
 8001b90:	6039      	str	r1, [r7, #0]
 8001b92:	2300      	movs	r3, #0
 8001b94:	627b      	str	r3, [r7, #36]	; 0x24
 8001b96:	2300      	movs	r3, #0
 8001b98:	623b      	str	r3, [r7, #32]
 8001b9a:	e148      	b.n	8001e2e <HAL_GPIO_Init+0x2a6>
 8001b9c:	2201      	movs	r2, #1
 8001b9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ba0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ba4:	61fb      	str	r3, [r7, #28]
 8001ba6:	683b      	ldr	r3, [r7, #0]
 8001ba8:	681b      	ldr	r3, [r3, #0]
 8001baa:	69fa      	ldr	r2, [r7, #28]
 8001bac:	4013      	ands	r3, r2
 8001bae:	61bb      	str	r3, [r7, #24]
 8001bb0:	69ba      	ldr	r2, [r7, #24]
 8001bb2:	69fb      	ldr	r3, [r7, #28]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	f040 8137 	bne.w	8001e28 <HAL_GPIO_Init+0x2a0>
 8001bba:	683b      	ldr	r3, [r7, #0]
 8001bbc:	685b      	ldr	r3, [r3, #4]
 8001bbe:	4aa3      	ldr	r2, [pc, #652]	; (8001e4c <HAL_GPIO_Init+0x2c4>)
 8001bc0:	4293      	cmp	r3, r2
 8001bc2:	d05e      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001bc4:	4aa1      	ldr	r2, [pc, #644]	; (8001e4c <HAL_GPIO_Init+0x2c4>)
 8001bc6:	4293      	cmp	r3, r2
 8001bc8:	d875      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001bca:	4aa1      	ldr	r2, [pc, #644]	; (8001e50 <HAL_GPIO_Init+0x2c8>)
 8001bcc:	4293      	cmp	r3, r2
 8001bce:	d058      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001bd0:	4a9f      	ldr	r2, [pc, #636]	; (8001e50 <HAL_GPIO_Init+0x2c8>)
 8001bd2:	4293      	cmp	r3, r2
 8001bd4:	d86f      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001bd6:	4a9f      	ldr	r2, [pc, #636]	; (8001e54 <HAL_GPIO_Init+0x2cc>)
 8001bd8:	4293      	cmp	r3, r2
 8001bda:	d052      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001bdc:	4a9d      	ldr	r2, [pc, #628]	; (8001e54 <HAL_GPIO_Init+0x2cc>)
 8001bde:	4293      	cmp	r3, r2
 8001be0:	d869      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001be2:	4a9d      	ldr	r2, [pc, #628]	; (8001e58 <HAL_GPIO_Init+0x2d0>)
 8001be4:	4293      	cmp	r3, r2
 8001be6:	d04c      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001be8:	4a9b      	ldr	r2, [pc, #620]	; (8001e58 <HAL_GPIO_Init+0x2d0>)
 8001bea:	4293      	cmp	r3, r2
 8001bec:	d863      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001bee:	4a9b      	ldr	r2, [pc, #620]	; (8001e5c <HAL_GPIO_Init+0x2d4>)
 8001bf0:	4293      	cmp	r3, r2
 8001bf2:	d046      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001bf4:	4a99      	ldr	r2, [pc, #612]	; (8001e5c <HAL_GPIO_Init+0x2d4>)
 8001bf6:	4293      	cmp	r3, r2
 8001bf8:	d85d      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001bfa:	2b12      	cmp	r3, #18
 8001bfc:	d82a      	bhi.n	8001c54 <HAL_GPIO_Init+0xcc>
 8001bfe:	2b12      	cmp	r3, #18
 8001c00:	d859      	bhi.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001c02:	a201      	add	r2, pc, #4	; (adr r2, 8001c08 <HAL_GPIO_Init+0x80>)
 8001c04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c08:	08001c83 	.word	0x08001c83
 8001c0c:	08001c5d 	.word	0x08001c5d
 8001c10:	08001c6f 	.word	0x08001c6f
 8001c14:	08001cb1 	.word	0x08001cb1
 8001c18:	08001cb7 	.word	0x08001cb7
 8001c1c:	08001cb7 	.word	0x08001cb7
 8001c20:	08001cb7 	.word	0x08001cb7
 8001c24:	08001cb7 	.word	0x08001cb7
 8001c28:	08001cb7 	.word	0x08001cb7
 8001c2c:	08001cb7 	.word	0x08001cb7
 8001c30:	08001cb7 	.word	0x08001cb7
 8001c34:	08001cb7 	.word	0x08001cb7
 8001c38:	08001cb7 	.word	0x08001cb7
 8001c3c:	08001cb7 	.word	0x08001cb7
 8001c40:	08001cb7 	.word	0x08001cb7
 8001c44:	08001cb7 	.word	0x08001cb7
 8001c48:	08001cb7 	.word	0x08001cb7
 8001c4c:	08001c65 	.word	0x08001c65
 8001c50:	08001c79 	.word	0x08001c79
 8001c54:	4a82      	ldr	r2, [pc, #520]	; (8001e60 <HAL_GPIO_Init+0x2d8>)
 8001c56:	4293      	cmp	r3, r2
 8001c58:	d013      	beq.n	8001c82 <HAL_GPIO_Init+0xfa>
 8001c5a:	e02c      	b.n	8001cb6 <HAL_GPIO_Init+0x12e>
 8001c5c:	683b      	ldr	r3, [r7, #0]
 8001c5e:	68db      	ldr	r3, [r3, #12]
 8001c60:	623b      	str	r3, [r7, #32]
 8001c62:	e029      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001c64:	683b      	ldr	r3, [r7, #0]
 8001c66:	68db      	ldr	r3, [r3, #12]
 8001c68:	3304      	adds	r3, #4
 8001c6a:	623b      	str	r3, [r7, #32]
 8001c6c:	e024      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001c6e:	683b      	ldr	r3, [r7, #0]
 8001c70:	68db      	ldr	r3, [r3, #12]
 8001c72:	3308      	adds	r3, #8
 8001c74:	623b      	str	r3, [r7, #32]
 8001c76:	e01f      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001c78:	683b      	ldr	r3, [r7, #0]
 8001c7a:	68db      	ldr	r3, [r3, #12]
 8001c7c:	330c      	adds	r3, #12
 8001c7e:	623b      	str	r3, [r7, #32]
 8001c80:	e01a      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001c82:	683b      	ldr	r3, [r7, #0]
 8001c84:	689b      	ldr	r3, [r3, #8]
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	d102      	bne.n	8001c90 <HAL_GPIO_Init+0x108>
 8001c8a:	2304      	movs	r3, #4
 8001c8c:	623b      	str	r3, [r7, #32]
 8001c8e:	e013      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	689b      	ldr	r3, [r3, #8]
 8001c94:	2b01      	cmp	r3, #1
 8001c96:	d105      	bne.n	8001ca4 <HAL_GPIO_Init+0x11c>
 8001c98:	2308      	movs	r3, #8
 8001c9a:	623b      	str	r3, [r7, #32]
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	69fa      	ldr	r2, [r7, #28]
 8001ca0:	611a      	str	r2, [r3, #16]
 8001ca2:	e009      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001ca4:	2308      	movs	r3, #8
 8001ca6:	623b      	str	r3, [r7, #32]
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	69fa      	ldr	r2, [r7, #28]
 8001cac:	615a      	str	r2, [r3, #20]
 8001cae:	e003      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	623b      	str	r3, [r7, #32]
 8001cb4:	e000      	b.n	8001cb8 <HAL_GPIO_Init+0x130>
 8001cb6:	bf00      	nop
 8001cb8:	69bb      	ldr	r3, [r7, #24]
 8001cba:	2bff      	cmp	r3, #255	; 0xff
 8001cbc:	d801      	bhi.n	8001cc2 <HAL_GPIO_Init+0x13a>
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	e001      	b.n	8001cc6 <HAL_GPIO_Init+0x13e>
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	3304      	adds	r3, #4
 8001cc6:	617b      	str	r3, [r7, #20]
 8001cc8:	69bb      	ldr	r3, [r7, #24]
 8001cca:	2bff      	cmp	r3, #255	; 0xff
 8001ccc:	d802      	bhi.n	8001cd4 <HAL_GPIO_Init+0x14c>
 8001cce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cd0:	009b      	lsls	r3, r3, #2
 8001cd2:	e002      	b.n	8001cda <HAL_GPIO_Init+0x152>
 8001cd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cd6:	3b08      	subs	r3, #8
 8001cd8:	009b      	lsls	r3, r3, #2
 8001cda:	613b      	str	r3, [r7, #16]
 8001cdc:	697b      	ldr	r3, [r7, #20]
 8001cde:	681a      	ldr	r2, [r3, #0]
 8001ce0:	210f      	movs	r1, #15
 8001ce2:	693b      	ldr	r3, [r7, #16]
 8001ce4:	fa01 f303 	lsl.w	r3, r1, r3
 8001ce8:	43db      	mvns	r3, r3
 8001cea:	401a      	ands	r2, r3
 8001cec:	6a39      	ldr	r1, [r7, #32]
 8001cee:	693b      	ldr	r3, [r7, #16]
 8001cf0:	fa01 f303 	lsl.w	r3, r1, r3
 8001cf4:	431a      	orrs	r2, r3
 8001cf6:	697b      	ldr	r3, [r7, #20]
 8001cf8:	601a      	str	r2, [r3, #0]
 8001cfa:	683b      	ldr	r3, [r7, #0]
 8001cfc:	685b      	ldr	r3, [r3, #4]
 8001cfe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	f000 8090 	beq.w	8001e28 <HAL_GPIO_Init+0x2a0>
 8001d08:	4b56      	ldr	r3, [pc, #344]	; (8001e64 <HAL_GPIO_Init+0x2dc>)
 8001d0a:	699b      	ldr	r3, [r3, #24]
 8001d0c:	4a55      	ldr	r2, [pc, #340]	; (8001e64 <HAL_GPIO_Init+0x2dc>)
 8001d0e:	f043 0301 	orr.w	r3, r3, #1
 8001d12:	6193      	str	r3, [r2, #24]
 8001d14:	4b53      	ldr	r3, [pc, #332]	; (8001e64 <HAL_GPIO_Init+0x2dc>)
 8001d16:	699b      	ldr	r3, [r3, #24]
 8001d18:	f003 0301 	and.w	r3, r3, #1
 8001d1c:	60bb      	str	r3, [r7, #8]
 8001d1e:	68bb      	ldr	r3, [r7, #8]
 8001d20:	4a51      	ldr	r2, [pc, #324]	; (8001e68 <HAL_GPIO_Init+0x2e0>)
 8001d22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d24:	089b      	lsrs	r3, r3, #2
 8001d26:	3302      	adds	r3, #2
 8001d28:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d2c:	60fb      	str	r3, [r7, #12]
 8001d2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d30:	f003 0303 	and.w	r3, r3, #3
 8001d34:	009b      	lsls	r3, r3, #2
 8001d36:	220f      	movs	r2, #15
 8001d38:	fa02 f303 	lsl.w	r3, r2, r3
 8001d3c:	43db      	mvns	r3, r3
 8001d3e:	68fa      	ldr	r2, [r7, #12]
 8001d40:	4013      	ands	r3, r2
 8001d42:	60fb      	str	r3, [r7, #12]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	4a49      	ldr	r2, [pc, #292]	; (8001e6c <HAL_GPIO_Init+0x2e4>)
 8001d48:	4293      	cmp	r3, r2
 8001d4a:	d00d      	beq.n	8001d68 <HAL_GPIO_Init+0x1e0>
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	4a48      	ldr	r2, [pc, #288]	; (8001e70 <HAL_GPIO_Init+0x2e8>)
 8001d50:	4293      	cmp	r3, r2
 8001d52:	d007      	beq.n	8001d64 <HAL_GPIO_Init+0x1dc>
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	4a47      	ldr	r2, [pc, #284]	; (8001e74 <HAL_GPIO_Init+0x2ec>)
 8001d58:	4293      	cmp	r3, r2
 8001d5a:	d101      	bne.n	8001d60 <HAL_GPIO_Init+0x1d8>
 8001d5c:	2302      	movs	r3, #2
 8001d5e:	e004      	b.n	8001d6a <HAL_GPIO_Init+0x1e2>
 8001d60:	2303      	movs	r3, #3
 8001d62:	e002      	b.n	8001d6a <HAL_GPIO_Init+0x1e2>
 8001d64:	2301      	movs	r3, #1
 8001d66:	e000      	b.n	8001d6a <HAL_GPIO_Init+0x1e2>
 8001d68:	2300      	movs	r3, #0
 8001d6a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001d6c:	f002 0203 	and.w	r2, r2, #3
 8001d70:	0092      	lsls	r2, r2, #2
 8001d72:	4093      	lsls	r3, r2
 8001d74:	68fa      	ldr	r2, [r7, #12]
 8001d76:	4313      	orrs	r3, r2
 8001d78:	60fb      	str	r3, [r7, #12]
 8001d7a:	493b      	ldr	r1, [pc, #236]	; (8001e68 <HAL_GPIO_Init+0x2e0>)
 8001d7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d7e:	089b      	lsrs	r3, r3, #2
 8001d80:	3302      	adds	r3, #2
 8001d82:	68fa      	ldr	r2, [r7, #12]
 8001d84:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d88:	683b      	ldr	r3, [r7, #0]
 8001d8a:	685b      	ldr	r3, [r3, #4]
 8001d8c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	d006      	beq.n	8001da2 <HAL_GPIO_Init+0x21a>
 8001d94:	4b38      	ldr	r3, [pc, #224]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001d96:	681a      	ldr	r2, [r3, #0]
 8001d98:	4937      	ldr	r1, [pc, #220]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001d9a:	69bb      	ldr	r3, [r7, #24]
 8001d9c:	4313      	orrs	r3, r2
 8001d9e:	600b      	str	r3, [r1, #0]
 8001da0:	e006      	b.n	8001db0 <HAL_GPIO_Init+0x228>
 8001da2:	4b35      	ldr	r3, [pc, #212]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001da4:	681a      	ldr	r2, [r3, #0]
 8001da6:	69bb      	ldr	r3, [r7, #24]
 8001da8:	43db      	mvns	r3, r3
 8001daa:	4933      	ldr	r1, [pc, #204]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dac:	4013      	ands	r3, r2
 8001dae:	600b      	str	r3, [r1, #0]
 8001db0:	683b      	ldr	r3, [r7, #0]
 8001db2:	685b      	ldr	r3, [r3, #4]
 8001db4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d006      	beq.n	8001dca <HAL_GPIO_Init+0x242>
 8001dbc:	4b2e      	ldr	r3, [pc, #184]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dbe:	685a      	ldr	r2, [r3, #4]
 8001dc0:	492d      	ldr	r1, [pc, #180]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dc2:	69bb      	ldr	r3, [r7, #24]
 8001dc4:	4313      	orrs	r3, r2
 8001dc6:	604b      	str	r3, [r1, #4]
 8001dc8:	e006      	b.n	8001dd8 <HAL_GPIO_Init+0x250>
 8001dca:	4b2b      	ldr	r3, [pc, #172]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dcc:	685a      	ldr	r2, [r3, #4]
 8001dce:	69bb      	ldr	r3, [r7, #24]
 8001dd0:	43db      	mvns	r3, r3
 8001dd2:	4929      	ldr	r1, [pc, #164]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dd4:	4013      	ands	r3, r2
 8001dd6:	604b      	str	r3, [r1, #4]
 8001dd8:	683b      	ldr	r3, [r7, #0]
 8001dda:	685b      	ldr	r3, [r3, #4]
 8001ddc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d006      	beq.n	8001df2 <HAL_GPIO_Init+0x26a>
 8001de4:	4b24      	ldr	r3, [pc, #144]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001de6:	689a      	ldr	r2, [r3, #8]
 8001de8:	4923      	ldr	r1, [pc, #140]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dea:	69bb      	ldr	r3, [r7, #24]
 8001dec:	4313      	orrs	r3, r2
 8001dee:	608b      	str	r3, [r1, #8]
 8001df0:	e006      	b.n	8001e00 <HAL_GPIO_Init+0x278>
 8001df2:	4b21      	ldr	r3, [pc, #132]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001df4:	689a      	ldr	r2, [r3, #8]
 8001df6:	69bb      	ldr	r3, [r7, #24]
 8001df8:	43db      	mvns	r3, r3
 8001dfa:	491f      	ldr	r1, [pc, #124]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001dfc:	4013      	ands	r3, r2
 8001dfe:	608b      	str	r3, [r1, #8]
 8001e00:	683b      	ldr	r3, [r7, #0]
 8001e02:	685b      	ldr	r3, [r3, #4]
 8001e04:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d006      	beq.n	8001e1a <HAL_GPIO_Init+0x292>
 8001e0c:	4b1a      	ldr	r3, [pc, #104]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001e0e:	68da      	ldr	r2, [r3, #12]
 8001e10:	4919      	ldr	r1, [pc, #100]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001e12:	69bb      	ldr	r3, [r7, #24]
 8001e14:	4313      	orrs	r3, r2
 8001e16:	60cb      	str	r3, [r1, #12]
 8001e18:	e006      	b.n	8001e28 <HAL_GPIO_Init+0x2a0>
 8001e1a:	4b17      	ldr	r3, [pc, #92]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001e1c:	68da      	ldr	r2, [r3, #12]
 8001e1e:	69bb      	ldr	r3, [r7, #24]
 8001e20:	43db      	mvns	r3, r3
 8001e22:	4915      	ldr	r1, [pc, #84]	; (8001e78 <HAL_GPIO_Init+0x2f0>)
 8001e24:	4013      	ands	r3, r2
 8001e26:	60cb      	str	r3, [r1, #12]
 8001e28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e2a:	3301      	adds	r3, #1
 8001e2c:	627b      	str	r3, [r7, #36]	; 0x24
 8001e2e:	683b      	ldr	r3, [r7, #0]
 8001e30:	681a      	ldr	r2, [r3, #0]
 8001e32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e34:	fa22 f303 	lsr.w	r3, r2, r3
 8001e38:	2b00      	cmp	r3, #0
 8001e3a:	f47f aeaf 	bne.w	8001b9c <HAL_GPIO_Init+0x14>
 8001e3e:	bf00      	nop
 8001e40:	bf00      	nop
 8001e42:	372c      	adds	r7, #44	; 0x2c
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bc80      	pop	{r7}
 8001e48:	4770      	bx	lr
 8001e4a:	bf00      	nop
 8001e4c:	10320000 	.word	0x10320000
 8001e50:	10310000 	.word	0x10310000
 8001e54:	10220000 	.word	0x10220000
 8001e58:	10210000 	.word	0x10210000
 8001e5c:	10120000 	.word	0x10120000
 8001e60:	10110000 	.word	0x10110000
 8001e64:	40021000 	.word	0x40021000
 8001e68:	40010000 	.word	0x40010000
 8001e6c:	40010800 	.word	0x40010800
 8001e70:	40010c00 	.word	0x40010c00
 8001e74:	40011000 	.word	0x40011000
 8001e78:	40010400 	.word	0x40010400

08001e7c <HAL_GPIO_ReadPin>:
 8001e7c:	b480      	push	{r7}
 8001e7e:	b085      	sub	sp, #20
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
 8001e84:	460b      	mov	r3, r1
 8001e86:	807b      	strh	r3, [r7, #2]
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	689a      	ldr	r2, [r3, #8]
 8001e8c:	887b      	ldrh	r3, [r7, #2]
 8001e8e:	4013      	ands	r3, r2
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d002      	beq.n	8001e9a <HAL_GPIO_ReadPin+0x1e>
 8001e94:	2301      	movs	r3, #1
 8001e96:	73fb      	strb	r3, [r7, #15]
 8001e98:	e001      	b.n	8001e9e <HAL_GPIO_ReadPin+0x22>
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	73fb      	strb	r3, [r7, #15]
 8001e9e:	7bfb      	ldrb	r3, [r7, #15]
 8001ea0:	4618      	mov	r0, r3
 8001ea2:	3714      	adds	r7, #20
 8001ea4:	46bd      	mov	sp, r7
 8001ea6:	bc80      	pop	{r7}
 8001ea8:	4770      	bx	lr

08001eaa <HAL_GPIO_WritePin>:
 8001eaa:	b480      	push	{r7}
 8001eac:	b083      	sub	sp, #12
 8001eae:	af00      	add	r7, sp, #0
 8001eb0:	6078      	str	r0, [r7, #4]
 8001eb2:	460b      	mov	r3, r1
 8001eb4:	807b      	strh	r3, [r7, #2]
 8001eb6:	4613      	mov	r3, r2
 8001eb8:	707b      	strb	r3, [r7, #1]
 8001eba:	787b      	ldrb	r3, [r7, #1]
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d003      	beq.n	8001ec8 <HAL_GPIO_WritePin+0x1e>
 8001ec0:	887a      	ldrh	r2, [r7, #2]
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	611a      	str	r2, [r3, #16]
 8001ec6:	e003      	b.n	8001ed0 <HAL_GPIO_WritePin+0x26>
 8001ec8:	887b      	ldrh	r3, [r7, #2]
 8001eca:	041a      	lsls	r2, r3, #16
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	611a      	str	r2, [r3, #16]
 8001ed0:	bf00      	nop
 8001ed2:	370c      	adds	r7, #12
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	bc80      	pop	{r7}
 8001ed8:	4770      	bx	lr

08001eda <HAL_GPIO_TogglePin>:
 8001eda:	b480      	push	{r7}
 8001edc:	b085      	sub	sp, #20
 8001ede:	af00      	add	r7, sp, #0
 8001ee0:	6078      	str	r0, [r7, #4]
 8001ee2:	460b      	mov	r3, r1
 8001ee4:	807b      	strh	r3, [r7, #2]
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	68db      	ldr	r3, [r3, #12]
 8001eea:	60fb      	str	r3, [r7, #12]
 8001eec:	887a      	ldrh	r2, [r7, #2]
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	4013      	ands	r3, r2
 8001ef2:	041a      	lsls	r2, r3, #16
 8001ef4:	68fb      	ldr	r3, [r7, #12]
 8001ef6:	43d9      	mvns	r1, r3
 8001ef8:	887b      	ldrh	r3, [r7, #2]
 8001efa:	400b      	ands	r3, r1
 8001efc:	431a      	orrs	r2, r3
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	611a      	str	r2, [r3, #16]
 8001f02:	bf00      	nop
 8001f04:	3714      	adds	r7, #20
 8001f06:	46bd      	mov	sp, r7
 8001f08:	bc80      	pop	{r7}
 8001f0a:	4770      	bx	lr

08001f0c <HAL_RCC_OscConfig>:
 8001f0c:	b580      	push	{r7, lr}
 8001f0e:	b086      	sub	sp, #24
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	6078      	str	r0, [r7, #4]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	2b00      	cmp	r3, #0
 8001f18:	d101      	bne.n	8001f1e <HAL_RCC_OscConfig+0x12>
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	e26c      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	f003 0301 	and.w	r3, r3, #1
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	f000 8087 	beq.w	800203a <HAL_RCC_OscConfig+0x12e>
 8001f2c:	4b92      	ldr	r3, [pc, #584]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f2e:	685b      	ldr	r3, [r3, #4]
 8001f30:	f003 030c 	and.w	r3, r3, #12
 8001f34:	2b04      	cmp	r3, #4
 8001f36:	d00c      	beq.n	8001f52 <HAL_RCC_OscConfig+0x46>
 8001f38:	4b8f      	ldr	r3, [pc, #572]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f3a:	685b      	ldr	r3, [r3, #4]
 8001f3c:	f003 030c 	and.w	r3, r3, #12
 8001f40:	2b08      	cmp	r3, #8
 8001f42:	d112      	bne.n	8001f6a <HAL_RCC_OscConfig+0x5e>
 8001f44:	4b8c      	ldr	r3, [pc, #560]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f46:	685b      	ldr	r3, [r3, #4]
 8001f48:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f4c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f50:	d10b      	bne.n	8001f6a <HAL_RCC_OscConfig+0x5e>
 8001f52:	4b89      	ldr	r3, [pc, #548]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f5a:	2b00      	cmp	r3, #0
 8001f5c:	d06c      	beq.n	8002038 <HAL_RCC_OscConfig+0x12c>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	685b      	ldr	r3, [r3, #4]
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d168      	bne.n	8002038 <HAL_RCC_OscConfig+0x12c>
 8001f66:	2301      	movs	r3, #1
 8001f68:	e246      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	685b      	ldr	r3, [r3, #4]
 8001f6e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f72:	d106      	bne.n	8001f82 <HAL_RCC_OscConfig+0x76>
 8001f74:	4b80      	ldr	r3, [pc, #512]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	4a7f      	ldr	r2, [pc, #508]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f7a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f7e:	6013      	str	r3, [r2, #0]
 8001f80:	e02e      	b.n	8001fe0 <HAL_RCC_OscConfig+0xd4>
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	685b      	ldr	r3, [r3, #4]
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d10c      	bne.n	8001fa4 <HAL_RCC_OscConfig+0x98>
 8001f8a:	4b7b      	ldr	r3, [pc, #492]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	4a7a      	ldr	r2, [pc, #488]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f90:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f94:	6013      	str	r3, [r2, #0]
 8001f96:	4b78      	ldr	r3, [pc, #480]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4a77      	ldr	r2, [pc, #476]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001f9c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001fa0:	6013      	str	r3, [r2, #0]
 8001fa2:	e01d      	b.n	8001fe0 <HAL_RCC_OscConfig+0xd4>
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	685b      	ldr	r3, [r3, #4]
 8001fa8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001fac:	d10c      	bne.n	8001fc8 <HAL_RCC_OscConfig+0xbc>
 8001fae:	4b72      	ldr	r3, [pc, #456]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	4a71      	ldr	r2, [pc, #452]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fb4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001fb8:	6013      	str	r3, [r2, #0]
 8001fba:	4b6f      	ldr	r3, [pc, #444]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	4a6e      	ldr	r2, [pc, #440]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fc4:	6013      	str	r3, [r2, #0]
 8001fc6:	e00b      	b.n	8001fe0 <HAL_RCC_OscConfig+0xd4>
 8001fc8:	4b6b      	ldr	r3, [pc, #428]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4a6a      	ldr	r2, [pc, #424]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fce:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001fd2:	6013      	str	r3, [r2, #0]
 8001fd4:	4b68      	ldr	r3, [pc, #416]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a67      	ldr	r2, [pc, #412]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8001fda:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001fde:	6013      	str	r3, [r2, #0]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	685b      	ldr	r3, [r3, #4]
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d013      	beq.n	8002010 <HAL_RCC_OscConfig+0x104>
 8001fe8:	f7ff fcb6 	bl	8001958 <HAL_GetTick>
 8001fec:	6138      	str	r0, [r7, #16]
 8001fee:	e008      	b.n	8002002 <HAL_RCC_OscConfig+0xf6>
 8001ff0:	f7ff fcb2 	bl	8001958 <HAL_GetTick>
 8001ff4:	4602      	mov	r2, r0
 8001ff6:	693b      	ldr	r3, [r7, #16]
 8001ff8:	1ad3      	subs	r3, r2, r3
 8001ffa:	2b64      	cmp	r3, #100	; 0x64
 8001ffc:	d901      	bls.n	8002002 <HAL_RCC_OscConfig+0xf6>
 8001ffe:	2303      	movs	r3, #3
 8002000:	e1fa      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002002:	4b5d      	ldr	r3, [pc, #372]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800200a:	2b00      	cmp	r3, #0
 800200c:	d0f0      	beq.n	8001ff0 <HAL_RCC_OscConfig+0xe4>
 800200e:	e014      	b.n	800203a <HAL_RCC_OscConfig+0x12e>
 8002010:	f7ff fca2 	bl	8001958 <HAL_GetTick>
 8002014:	6138      	str	r0, [r7, #16]
 8002016:	e008      	b.n	800202a <HAL_RCC_OscConfig+0x11e>
 8002018:	f7ff fc9e 	bl	8001958 <HAL_GetTick>
 800201c:	4602      	mov	r2, r0
 800201e:	693b      	ldr	r3, [r7, #16]
 8002020:	1ad3      	subs	r3, r2, r3
 8002022:	2b64      	cmp	r3, #100	; 0x64
 8002024:	d901      	bls.n	800202a <HAL_RCC_OscConfig+0x11e>
 8002026:	2303      	movs	r3, #3
 8002028:	e1e6      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 800202a:	4b53      	ldr	r3, [pc, #332]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002032:	2b00      	cmp	r3, #0
 8002034:	d1f0      	bne.n	8002018 <HAL_RCC_OscConfig+0x10c>
 8002036:	e000      	b.n	800203a <HAL_RCC_OscConfig+0x12e>
 8002038:	bf00      	nop
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	681b      	ldr	r3, [r3, #0]
 800203e:	f003 0302 	and.w	r3, r3, #2
 8002042:	2b00      	cmp	r3, #0
 8002044:	d063      	beq.n	800210e <HAL_RCC_OscConfig+0x202>
 8002046:	4b4c      	ldr	r3, [pc, #304]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002048:	685b      	ldr	r3, [r3, #4]
 800204a:	f003 030c 	and.w	r3, r3, #12
 800204e:	2b00      	cmp	r3, #0
 8002050:	d00b      	beq.n	800206a <HAL_RCC_OscConfig+0x15e>
 8002052:	4b49      	ldr	r3, [pc, #292]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002054:	685b      	ldr	r3, [r3, #4]
 8002056:	f003 030c 	and.w	r3, r3, #12
 800205a:	2b08      	cmp	r3, #8
 800205c:	d11c      	bne.n	8002098 <HAL_RCC_OscConfig+0x18c>
 800205e:	4b46      	ldr	r3, [pc, #280]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002060:	685b      	ldr	r3, [r3, #4]
 8002062:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002066:	2b00      	cmp	r3, #0
 8002068:	d116      	bne.n	8002098 <HAL_RCC_OscConfig+0x18c>
 800206a:	4b43      	ldr	r3, [pc, #268]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	f003 0302 	and.w	r3, r3, #2
 8002072:	2b00      	cmp	r3, #0
 8002074:	d005      	beq.n	8002082 <HAL_RCC_OscConfig+0x176>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	691b      	ldr	r3, [r3, #16]
 800207a:	2b01      	cmp	r3, #1
 800207c:	d001      	beq.n	8002082 <HAL_RCC_OscConfig+0x176>
 800207e:	2301      	movs	r3, #1
 8002080:	e1ba      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002082:	4b3d      	ldr	r3, [pc, #244]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	695b      	ldr	r3, [r3, #20]
 800208e:	00db      	lsls	r3, r3, #3
 8002090:	4939      	ldr	r1, [pc, #228]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002092:	4313      	orrs	r3, r2
 8002094:	600b      	str	r3, [r1, #0]
 8002096:	e03a      	b.n	800210e <HAL_RCC_OscConfig+0x202>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	691b      	ldr	r3, [r3, #16]
 800209c:	2b00      	cmp	r3, #0
 800209e:	d020      	beq.n	80020e2 <HAL_RCC_OscConfig+0x1d6>
 80020a0:	4b36      	ldr	r3, [pc, #216]	; (800217c <HAL_RCC_OscConfig+0x270>)
 80020a2:	2201      	movs	r2, #1
 80020a4:	601a      	str	r2, [r3, #0]
 80020a6:	f7ff fc57 	bl	8001958 <HAL_GetTick>
 80020aa:	6138      	str	r0, [r7, #16]
 80020ac:	e008      	b.n	80020c0 <HAL_RCC_OscConfig+0x1b4>
 80020ae:	f7ff fc53 	bl	8001958 <HAL_GetTick>
 80020b2:	4602      	mov	r2, r0
 80020b4:	693b      	ldr	r3, [r7, #16]
 80020b6:	1ad3      	subs	r3, r2, r3
 80020b8:	2b02      	cmp	r3, #2
 80020ba:	d901      	bls.n	80020c0 <HAL_RCC_OscConfig+0x1b4>
 80020bc:	2303      	movs	r3, #3
 80020be:	e19b      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80020c0:	4b2d      	ldr	r3, [pc, #180]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	f003 0302 	and.w	r3, r3, #2
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d0f0      	beq.n	80020ae <HAL_RCC_OscConfig+0x1a2>
 80020cc:	4b2a      	ldr	r3, [pc, #168]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	695b      	ldr	r3, [r3, #20]
 80020d8:	00db      	lsls	r3, r3, #3
 80020da:	4927      	ldr	r1, [pc, #156]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 80020dc:	4313      	orrs	r3, r2
 80020de:	600b      	str	r3, [r1, #0]
 80020e0:	e015      	b.n	800210e <HAL_RCC_OscConfig+0x202>
 80020e2:	4b26      	ldr	r3, [pc, #152]	; (800217c <HAL_RCC_OscConfig+0x270>)
 80020e4:	2200      	movs	r2, #0
 80020e6:	601a      	str	r2, [r3, #0]
 80020e8:	f7ff fc36 	bl	8001958 <HAL_GetTick>
 80020ec:	6138      	str	r0, [r7, #16]
 80020ee:	e008      	b.n	8002102 <HAL_RCC_OscConfig+0x1f6>
 80020f0:	f7ff fc32 	bl	8001958 <HAL_GetTick>
 80020f4:	4602      	mov	r2, r0
 80020f6:	693b      	ldr	r3, [r7, #16]
 80020f8:	1ad3      	subs	r3, r2, r3
 80020fa:	2b02      	cmp	r3, #2
 80020fc:	d901      	bls.n	8002102 <HAL_RCC_OscConfig+0x1f6>
 80020fe:	2303      	movs	r3, #3
 8002100:	e17a      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002102:	4b1d      	ldr	r3, [pc, #116]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f003 0302 	and.w	r3, r3, #2
 800210a:	2b00      	cmp	r3, #0
 800210c:	d1f0      	bne.n	80020f0 <HAL_RCC_OscConfig+0x1e4>
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	f003 0308 	and.w	r3, r3, #8
 8002116:	2b00      	cmp	r3, #0
 8002118:	d03a      	beq.n	8002190 <HAL_RCC_OscConfig+0x284>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	699b      	ldr	r3, [r3, #24]
 800211e:	2b00      	cmp	r3, #0
 8002120:	d019      	beq.n	8002156 <HAL_RCC_OscConfig+0x24a>
 8002122:	4b17      	ldr	r3, [pc, #92]	; (8002180 <HAL_RCC_OscConfig+0x274>)
 8002124:	2201      	movs	r2, #1
 8002126:	601a      	str	r2, [r3, #0]
 8002128:	f7ff fc16 	bl	8001958 <HAL_GetTick>
 800212c:	6138      	str	r0, [r7, #16]
 800212e:	e008      	b.n	8002142 <HAL_RCC_OscConfig+0x236>
 8002130:	f7ff fc12 	bl	8001958 <HAL_GetTick>
 8002134:	4602      	mov	r2, r0
 8002136:	693b      	ldr	r3, [r7, #16]
 8002138:	1ad3      	subs	r3, r2, r3
 800213a:	2b02      	cmp	r3, #2
 800213c:	d901      	bls.n	8002142 <HAL_RCC_OscConfig+0x236>
 800213e:	2303      	movs	r3, #3
 8002140:	e15a      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002142:	4b0d      	ldr	r3, [pc, #52]	; (8002178 <HAL_RCC_OscConfig+0x26c>)
 8002144:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002146:	f003 0302 	and.w	r3, r3, #2
 800214a:	2b00      	cmp	r3, #0
 800214c:	d0f0      	beq.n	8002130 <HAL_RCC_OscConfig+0x224>
 800214e:	2001      	movs	r0, #1
 8002150:	f000 faa6 	bl	80026a0 <RCC_Delay>
 8002154:	e01c      	b.n	8002190 <HAL_RCC_OscConfig+0x284>
 8002156:	4b0a      	ldr	r3, [pc, #40]	; (8002180 <HAL_RCC_OscConfig+0x274>)
 8002158:	2200      	movs	r2, #0
 800215a:	601a      	str	r2, [r3, #0]
 800215c:	f7ff fbfc 	bl	8001958 <HAL_GetTick>
 8002160:	6138      	str	r0, [r7, #16]
 8002162:	e00f      	b.n	8002184 <HAL_RCC_OscConfig+0x278>
 8002164:	f7ff fbf8 	bl	8001958 <HAL_GetTick>
 8002168:	4602      	mov	r2, r0
 800216a:	693b      	ldr	r3, [r7, #16]
 800216c:	1ad3      	subs	r3, r2, r3
 800216e:	2b02      	cmp	r3, #2
 8002170:	d908      	bls.n	8002184 <HAL_RCC_OscConfig+0x278>
 8002172:	2303      	movs	r3, #3
 8002174:	e140      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002176:	bf00      	nop
 8002178:	40021000 	.word	0x40021000
 800217c:	42420000 	.word	0x42420000
 8002180:	42420480 	.word	0x42420480
 8002184:	4b9e      	ldr	r3, [pc, #632]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002188:	f003 0302 	and.w	r3, r3, #2
 800218c:	2b00      	cmp	r3, #0
 800218e:	d1e9      	bne.n	8002164 <HAL_RCC_OscConfig+0x258>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	f003 0304 	and.w	r3, r3, #4
 8002198:	2b00      	cmp	r3, #0
 800219a:	f000 80a6 	beq.w	80022ea <HAL_RCC_OscConfig+0x3de>
 800219e:	2300      	movs	r3, #0
 80021a0:	75fb      	strb	r3, [r7, #23]
 80021a2:	4b97      	ldr	r3, [pc, #604]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80021a4:	69db      	ldr	r3, [r3, #28]
 80021a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d10d      	bne.n	80021ca <HAL_RCC_OscConfig+0x2be>
 80021ae:	4b94      	ldr	r3, [pc, #592]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80021b0:	69db      	ldr	r3, [r3, #28]
 80021b2:	4a93      	ldr	r2, [pc, #588]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80021b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80021b8:	61d3      	str	r3, [r2, #28]
 80021ba:	4b91      	ldr	r3, [pc, #580]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80021bc:	69db      	ldr	r3, [r3, #28]
 80021be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021c2:	60bb      	str	r3, [r7, #8]
 80021c4:	68bb      	ldr	r3, [r7, #8]
 80021c6:	2301      	movs	r3, #1
 80021c8:	75fb      	strb	r3, [r7, #23]
 80021ca:	4b8e      	ldr	r3, [pc, #568]	; (8002404 <HAL_RCC_OscConfig+0x4f8>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d118      	bne.n	8002208 <HAL_RCC_OscConfig+0x2fc>
 80021d6:	4b8b      	ldr	r3, [pc, #556]	; (8002404 <HAL_RCC_OscConfig+0x4f8>)
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	4a8a      	ldr	r2, [pc, #552]	; (8002404 <HAL_RCC_OscConfig+0x4f8>)
 80021dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021e0:	6013      	str	r3, [r2, #0]
 80021e2:	f7ff fbb9 	bl	8001958 <HAL_GetTick>
 80021e6:	6138      	str	r0, [r7, #16]
 80021e8:	e008      	b.n	80021fc <HAL_RCC_OscConfig+0x2f0>
 80021ea:	f7ff fbb5 	bl	8001958 <HAL_GetTick>
 80021ee:	4602      	mov	r2, r0
 80021f0:	693b      	ldr	r3, [r7, #16]
 80021f2:	1ad3      	subs	r3, r2, r3
 80021f4:	2b64      	cmp	r3, #100	; 0x64
 80021f6:	d901      	bls.n	80021fc <HAL_RCC_OscConfig+0x2f0>
 80021f8:	2303      	movs	r3, #3
 80021fa:	e0fd      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80021fc:	4b81      	ldr	r3, [pc, #516]	; (8002404 <HAL_RCC_OscConfig+0x4f8>)
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002204:	2b00      	cmp	r3, #0
 8002206:	d0f0      	beq.n	80021ea <HAL_RCC_OscConfig+0x2de>
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	68db      	ldr	r3, [r3, #12]
 800220c:	2b01      	cmp	r3, #1
 800220e:	d106      	bne.n	800221e <HAL_RCC_OscConfig+0x312>
 8002210:	4b7b      	ldr	r3, [pc, #492]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002212:	6a1b      	ldr	r3, [r3, #32]
 8002214:	4a7a      	ldr	r2, [pc, #488]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002216:	f043 0301 	orr.w	r3, r3, #1
 800221a:	6213      	str	r3, [r2, #32]
 800221c:	e02d      	b.n	800227a <HAL_RCC_OscConfig+0x36e>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	68db      	ldr	r3, [r3, #12]
 8002222:	2b00      	cmp	r3, #0
 8002224:	d10c      	bne.n	8002240 <HAL_RCC_OscConfig+0x334>
 8002226:	4b76      	ldr	r3, [pc, #472]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002228:	6a1b      	ldr	r3, [r3, #32]
 800222a:	4a75      	ldr	r2, [pc, #468]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800222c:	f023 0301 	bic.w	r3, r3, #1
 8002230:	6213      	str	r3, [r2, #32]
 8002232:	4b73      	ldr	r3, [pc, #460]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002234:	6a1b      	ldr	r3, [r3, #32]
 8002236:	4a72      	ldr	r2, [pc, #456]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002238:	f023 0304 	bic.w	r3, r3, #4
 800223c:	6213      	str	r3, [r2, #32]
 800223e:	e01c      	b.n	800227a <HAL_RCC_OscConfig+0x36e>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	68db      	ldr	r3, [r3, #12]
 8002244:	2b05      	cmp	r3, #5
 8002246:	d10c      	bne.n	8002262 <HAL_RCC_OscConfig+0x356>
 8002248:	4b6d      	ldr	r3, [pc, #436]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800224a:	6a1b      	ldr	r3, [r3, #32]
 800224c:	4a6c      	ldr	r2, [pc, #432]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800224e:	f043 0304 	orr.w	r3, r3, #4
 8002252:	6213      	str	r3, [r2, #32]
 8002254:	4b6a      	ldr	r3, [pc, #424]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002256:	6a1b      	ldr	r3, [r3, #32]
 8002258:	4a69      	ldr	r2, [pc, #420]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800225a:	f043 0301 	orr.w	r3, r3, #1
 800225e:	6213      	str	r3, [r2, #32]
 8002260:	e00b      	b.n	800227a <HAL_RCC_OscConfig+0x36e>
 8002262:	4b67      	ldr	r3, [pc, #412]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002264:	6a1b      	ldr	r3, [r3, #32]
 8002266:	4a66      	ldr	r2, [pc, #408]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002268:	f023 0301 	bic.w	r3, r3, #1
 800226c:	6213      	str	r3, [r2, #32]
 800226e:	4b64      	ldr	r3, [pc, #400]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002270:	6a1b      	ldr	r3, [r3, #32]
 8002272:	4a63      	ldr	r2, [pc, #396]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002274:	f023 0304 	bic.w	r3, r3, #4
 8002278:	6213      	str	r3, [r2, #32]
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	68db      	ldr	r3, [r3, #12]
 800227e:	2b00      	cmp	r3, #0
 8002280:	d015      	beq.n	80022ae <HAL_RCC_OscConfig+0x3a2>
 8002282:	f7ff fb69 	bl	8001958 <HAL_GetTick>
 8002286:	6138      	str	r0, [r7, #16]
 8002288:	e00a      	b.n	80022a0 <HAL_RCC_OscConfig+0x394>
 800228a:	f7ff fb65 	bl	8001958 <HAL_GetTick>
 800228e:	4602      	mov	r2, r0
 8002290:	693b      	ldr	r3, [r7, #16]
 8002292:	1ad3      	subs	r3, r2, r3
 8002294:	f241 3288 	movw	r2, #5000	; 0x1388
 8002298:	4293      	cmp	r3, r2
 800229a:	d901      	bls.n	80022a0 <HAL_RCC_OscConfig+0x394>
 800229c:	2303      	movs	r3, #3
 800229e:	e0ab      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80022a0:	4b57      	ldr	r3, [pc, #348]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80022a2:	6a1b      	ldr	r3, [r3, #32]
 80022a4:	f003 0302 	and.w	r3, r3, #2
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	d0ee      	beq.n	800228a <HAL_RCC_OscConfig+0x37e>
 80022ac:	e014      	b.n	80022d8 <HAL_RCC_OscConfig+0x3cc>
 80022ae:	f7ff fb53 	bl	8001958 <HAL_GetTick>
 80022b2:	6138      	str	r0, [r7, #16]
 80022b4:	e00a      	b.n	80022cc <HAL_RCC_OscConfig+0x3c0>
 80022b6:	f7ff fb4f 	bl	8001958 <HAL_GetTick>
 80022ba:	4602      	mov	r2, r0
 80022bc:	693b      	ldr	r3, [r7, #16]
 80022be:	1ad3      	subs	r3, r2, r3
 80022c0:	f241 3288 	movw	r2, #5000	; 0x1388
 80022c4:	4293      	cmp	r3, r2
 80022c6:	d901      	bls.n	80022cc <HAL_RCC_OscConfig+0x3c0>
 80022c8:	2303      	movs	r3, #3
 80022ca:	e095      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80022cc:	4b4c      	ldr	r3, [pc, #304]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80022ce:	6a1b      	ldr	r3, [r3, #32]
 80022d0:	f003 0302 	and.w	r3, r3, #2
 80022d4:	2b00      	cmp	r3, #0
 80022d6:	d1ee      	bne.n	80022b6 <HAL_RCC_OscConfig+0x3aa>
 80022d8:	7dfb      	ldrb	r3, [r7, #23]
 80022da:	2b01      	cmp	r3, #1
 80022dc:	d105      	bne.n	80022ea <HAL_RCC_OscConfig+0x3de>
 80022de:	4b48      	ldr	r3, [pc, #288]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80022e0:	69db      	ldr	r3, [r3, #28]
 80022e2:	4a47      	ldr	r2, [pc, #284]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80022e4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80022e8:	61d3      	str	r3, [r2, #28]
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	69db      	ldr	r3, [r3, #28]
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	f000 8081 	beq.w	80023f6 <HAL_RCC_OscConfig+0x4ea>
 80022f4:	4b42      	ldr	r3, [pc, #264]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80022f6:	685b      	ldr	r3, [r3, #4]
 80022f8:	f003 030c 	and.w	r3, r3, #12
 80022fc:	2b08      	cmp	r3, #8
 80022fe:	d061      	beq.n	80023c4 <HAL_RCC_OscConfig+0x4b8>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	69db      	ldr	r3, [r3, #28]
 8002304:	2b02      	cmp	r3, #2
 8002306:	d146      	bne.n	8002396 <HAL_RCC_OscConfig+0x48a>
 8002308:	4b3f      	ldr	r3, [pc, #252]	; (8002408 <HAL_RCC_OscConfig+0x4fc>)
 800230a:	2200      	movs	r2, #0
 800230c:	601a      	str	r2, [r3, #0]
 800230e:	f7ff fb23 	bl	8001958 <HAL_GetTick>
 8002312:	6138      	str	r0, [r7, #16]
 8002314:	e008      	b.n	8002328 <HAL_RCC_OscConfig+0x41c>
 8002316:	f7ff fb1f 	bl	8001958 <HAL_GetTick>
 800231a:	4602      	mov	r2, r0
 800231c:	693b      	ldr	r3, [r7, #16]
 800231e:	1ad3      	subs	r3, r2, r3
 8002320:	2b02      	cmp	r3, #2
 8002322:	d901      	bls.n	8002328 <HAL_RCC_OscConfig+0x41c>
 8002324:	2303      	movs	r3, #3
 8002326:	e067      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002328:	4b35      	ldr	r3, [pc, #212]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002330:	2b00      	cmp	r3, #0
 8002332:	d1f0      	bne.n	8002316 <HAL_RCC_OscConfig+0x40a>
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	6a1b      	ldr	r3, [r3, #32]
 8002338:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800233c:	d108      	bne.n	8002350 <HAL_RCC_OscConfig+0x444>
 800233e:	4b30      	ldr	r3, [pc, #192]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	689b      	ldr	r3, [r3, #8]
 800234a:	492d      	ldr	r1, [pc, #180]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800234c:	4313      	orrs	r3, r2
 800234e:	604b      	str	r3, [r1, #4]
 8002350:	4b2b      	ldr	r3, [pc, #172]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002352:	685b      	ldr	r3, [r3, #4]
 8002354:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	6a19      	ldr	r1, [r3, #32]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002360:	430b      	orrs	r3, r1
 8002362:	4927      	ldr	r1, [pc, #156]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 8002364:	4313      	orrs	r3, r2
 8002366:	604b      	str	r3, [r1, #4]
 8002368:	4b27      	ldr	r3, [pc, #156]	; (8002408 <HAL_RCC_OscConfig+0x4fc>)
 800236a:	2201      	movs	r2, #1
 800236c:	601a      	str	r2, [r3, #0]
 800236e:	f7ff faf3 	bl	8001958 <HAL_GetTick>
 8002372:	6138      	str	r0, [r7, #16]
 8002374:	e008      	b.n	8002388 <HAL_RCC_OscConfig+0x47c>
 8002376:	f7ff faef 	bl	8001958 <HAL_GetTick>
 800237a:	4602      	mov	r2, r0
 800237c:	693b      	ldr	r3, [r7, #16]
 800237e:	1ad3      	subs	r3, r2, r3
 8002380:	2b02      	cmp	r3, #2
 8002382:	d901      	bls.n	8002388 <HAL_RCC_OscConfig+0x47c>
 8002384:	2303      	movs	r3, #3
 8002386:	e037      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 8002388:	4b1d      	ldr	r3, [pc, #116]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002390:	2b00      	cmp	r3, #0
 8002392:	d0f0      	beq.n	8002376 <HAL_RCC_OscConfig+0x46a>
 8002394:	e02f      	b.n	80023f6 <HAL_RCC_OscConfig+0x4ea>
 8002396:	4b1c      	ldr	r3, [pc, #112]	; (8002408 <HAL_RCC_OscConfig+0x4fc>)
 8002398:	2200      	movs	r2, #0
 800239a:	601a      	str	r2, [r3, #0]
 800239c:	f7ff fadc 	bl	8001958 <HAL_GetTick>
 80023a0:	6138      	str	r0, [r7, #16]
 80023a2:	e008      	b.n	80023b6 <HAL_RCC_OscConfig+0x4aa>
 80023a4:	f7ff fad8 	bl	8001958 <HAL_GetTick>
 80023a8:	4602      	mov	r2, r0
 80023aa:	693b      	ldr	r3, [r7, #16]
 80023ac:	1ad3      	subs	r3, r2, r3
 80023ae:	2b02      	cmp	r3, #2
 80023b0:	d901      	bls.n	80023b6 <HAL_RCC_OscConfig+0x4aa>
 80023b2:	2303      	movs	r3, #3
 80023b4:	e020      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80023b6:	4b12      	ldr	r3, [pc, #72]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d1f0      	bne.n	80023a4 <HAL_RCC_OscConfig+0x498>
 80023c2:	e018      	b.n	80023f6 <HAL_RCC_OscConfig+0x4ea>
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	69db      	ldr	r3, [r3, #28]
 80023c8:	2b01      	cmp	r3, #1
 80023ca:	d101      	bne.n	80023d0 <HAL_RCC_OscConfig+0x4c4>
 80023cc:	2301      	movs	r3, #1
 80023ce:	e013      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80023d0:	4b0b      	ldr	r3, [pc, #44]	; (8002400 <HAL_RCC_OscConfig+0x4f4>)
 80023d2:	685b      	ldr	r3, [r3, #4]
 80023d4:	60fb      	str	r3, [r7, #12]
 80023d6:	68fb      	ldr	r3, [r7, #12]
 80023d8:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	6a1b      	ldr	r3, [r3, #32]
 80023e0:	429a      	cmp	r2, r3
 80023e2:	d106      	bne.n	80023f2 <HAL_RCC_OscConfig+0x4e6>
 80023e4:	68fb      	ldr	r3, [r7, #12]
 80023e6:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023ee:	429a      	cmp	r2, r3
 80023f0:	d001      	beq.n	80023f6 <HAL_RCC_OscConfig+0x4ea>
 80023f2:	2301      	movs	r3, #1
 80023f4:	e000      	b.n	80023f8 <HAL_RCC_OscConfig+0x4ec>
 80023f6:	2300      	movs	r3, #0
 80023f8:	4618      	mov	r0, r3
 80023fa:	3718      	adds	r7, #24
 80023fc:	46bd      	mov	sp, r7
 80023fe:	bd80      	pop	{r7, pc}
 8002400:	40021000 	.word	0x40021000
 8002404:	40007000 	.word	0x40007000
 8002408:	42420060 	.word	0x42420060

0800240c <HAL_RCC_ClockConfig>:
 800240c:	b580      	push	{r7, lr}
 800240e:	b084      	sub	sp, #16
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
 8002414:	6039      	str	r1, [r7, #0]
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	2b00      	cmp	r3, #0
 800241a:	d101      	bne.n	8002420 <HAL_RCC_ClockConfig+0x14>
 800241c:	2301      	movs	r3, #1
 800241e:	e0d0      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 8002420:	4b6a      	ldr	r3, [pc, #424]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f003 0307 	and.w	r3, r3, #7
 8002428:	683a      	ldr	r2, [r7, #0]
 800242a:	429a      	cmp	r2, r3
 800242c:	d910      	bls.n	8002450 <HAL_RCC_ClockConfig+0x44>
 800242e:	4b67      	ldr	r3, [pc, #412]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	f023 0207 	bic.w	r2, r3, #7
 8002436:	4965      	ldr	r1, [pc, #404]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 8002438:	683b      	ldr	r3, [r7, #0]
 800243a:	4313      	orrs	r3, r2
 800243c:	600b      	str	r3, [r1, #0]
 800243e:	4b63      	ldr	r3, [pc, #396]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	f003 0307 	and.w	r3, r3, #7
 8002446:	683a      	ldr	r2, [r7, #0]
 8002448:	429a      	cmp	r2, r3
 800244a:	d001      	beq.n	8002450 <HAL_RCC_ClockConfig+0x44>
 800244c:	2301      	movs	r3, #1
 800244e:	e0b8      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	f003 0302 	and.w	r3, r3, #2
 8002458:	2b00      	cmp	r3, #0
 800245a:	d020      	beq.n	800249e <HAL_RCC_ClockConfig+0x92>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	f003 0304 	and.w	r3, r3, #4
 8002464:	2b00      	cmp	r3, #0
 8002466:	d005      	beq.n	8002474 <HAL_RCC_ClockConfig+0x68>
 8002468:	4b59      	ldr	r3, [pc, #356]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800246a:	685b      	ldr	r3, [r3, #4]
 800246c:	4a58      	ldr	r2, [pc, #352]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800246e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002472:	6053      	str	r3, [r2, #4]
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f003 0308 	and.w	r3, r3, #8
 800247c:	2b00      	cmp	r3, #0
 800247e:	d005      	beq.n	800248c <HAL_RCC_ClockConfig+0x80>
 8002480:	4b53      	ldr	r3, [pc, #332]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002482:	685b      	ldr	r3, [r3, #4]
 8002484:	4a52      	ldr	r2, [pc, #328]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002486:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800248a:	6053      	str	r3, [r2, #4]
 800248c:	4b50      	ldr	r3, [pc, #320]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800248e:	685b      	ldr	r3, [r3, #4]
 8002490:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	689b      	ldr	r3, [r3, #8]
 8002498:	494d      	ldr	r1, [pc, #308]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800249a:	4313      	orrs	r3, r2
 800249c:	604b      	str	r3, [r1, #4]
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	f003 0301 	and.w	r3, r3, #1
 80024a6:	2b00      	cmp	r3, #0
 80024a8:	d040      	beq.n	800252c <HAL_RCC_ClockConfig+0x120>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	685b      	ldr	r3, [r3, #4]
 80024ae:	2b01      	cmp	r3, #1
 80024b0:	d107      	bne.n	80024c2 <HAL_RCC_ClockConfig+0xb6>
 80024b2:	4b47      	ldr	r3, [pc, #284]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d115      	bne.n	80024ea <HAL_RCC_ClockConfig+0xde>
 80024be:	2301      	movs	r3, #1
 80024c0:	e07f      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	685b      	ldr	r3, [r3, #4]
 80024c6:	2b02      	cmp	r3, #2
 80024c8:	d107      	bne.n	80024da <HAL_RCC_ClockConfig+0xce>
 80024ca:	4b41      	ldr	r3, [pc, #260]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d109      	bne.n	80024ea <HAL_RCC_ClockConfig+0xde>
 80024d6:	2301      	movs	r3, #1
 80024d8:	e073      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 80024da:	4b3d      	ldr	r3, [pc, #244]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f003 0302 	and.w	r3, r3, #2
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d101      	bne.n	80024ea <HAL_RCC_ClockConfig+0xde>
 80024e6:	2301      	movs	r3, #1
 80024e8:	e06b      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 80024ea:	4b39      	ldr	r3, [pc, #228]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024ec:	685b      	ldr	r3, [r3, #4]
 80024ee:	f023 0203 	bic.w	r2, r3, #3
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	685b      	ldr	r3, [r3, #4]
 80024f6:	4936      	ldr	r1, [pc, #216]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024f8:	4313      	orrs	r3, r2
 80024fa:	604b      	str	r3, [r1, #4]
 80024fc:	f7ff fa2c 	bl	8001958 <HAL_GetTick>
 8002500:	60f8      	str	r0, [r7, #12]
 8002502:	e00a      	b.n	800251a <HAL_RCC_ClockConfig+0x10e>
 8002504:	f7ff fa28 	bl	8001958 <HAL_GetTick>
 8002508:	4602      	mov	r2, r0
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	1ad3      	subs	r3, r2, r3
 800250e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002512:	4293      	cmp	r3, r2
 8002514:	d901      	bls.n	800251a <HAL_RCC_ClockConfig+0x10e>
 8002516:	2303      	movs	r3, #3
 8002518:	e053      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 800251a:	4b2d      	ldr	r3, [pc, #180]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800251c:	685b      	ldr	r3, [r3, #4]
 800251e:	f003 020c 	and.w	r2, r3, #12
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	685b      	ldr	r3, [r3, #4]
 8002526:	009b      	lsls	r3, r3, #2
 8002528:	429a      	cmp	r2, r3
 800252a:	d1eb      	bne.n	8002504 <HAL_RCC_ClockConfig+0xf8>
 800252c:	4b27      	ldr	r3, [pc, #156]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	f003 0307 	and.w	r3, r3, #7
 8002534:	683a      	ldr	r2, [r7, #0]
 8002536:	429a      	cmp	r2, r3
 8002538:	d210      	bcs.n	800255c <HAL_RCC_ClockConfig+0x150>
 800253a:	4b24      	ldr	r3, [pc, #144]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	f023 0207 	bic.w	r2, r3, #7
 8002542:	4922      	ldr	r1, [pc, #136]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 8002544:	683b      	ldr	r3, [r7, #0]
 8002546:	4313      	orrs	r3, r2
 8002548:	600b      	str	r3, [r1, #0]
 800254a:	4b20      	ldr	r3, [pc, #128]	; (80025cc <HAL_RCC_ClockConfig+0x1c0>)
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	f003 0307 	and.w	r3, r3, #7
 8002552:	683a      	ldr	r2, [r7, #0]
 8002554:	429a      	cmp	r2, r3
 8002556:	d001      	beq.n	800255c <HAL_RCC_ClockConfig+0x150>
 8002558:	2301      	movs	r3, #1
 800255a:	e032      	b.n	80025c2 <HAL_RCC_ClockConfig+0x1b6>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f003 0304 	and.w	r3, r3, #4
 8002564:	2b00      	cmp	r3, #0
 8002566:	d008      	beq.n	800257a <HAL_RCC_ClockConfig+0x16e>
 8002568:	4b19      	ldr	r3, [pc, #100]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 800256a:	685b      	ldr	r3, [r3, #4]
 800256c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	68db      	ldr	r3, [r3, #12]
 8002574:	4916      	ldr	r1, [pc, #88]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002576:	4313      	orrs	r3, r2
 8002578:	604b      	str	r3, [r1, #4]
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	f003 0308 	and.w	r3, r3, #8
 8002582:	2b00      	cmp	r3, #0
 8002584:	d009      	beq.n	800259a <HAL_RCC_ClockConfig+0x18e>
 8002586:	4b12      	ldr	r3, [pc, #72]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002588:	685b      	ldr	r3, [r3, #4]
 800258a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	691b      	ldr	r3, [r3, #16]
 8002592:	00db      	lsls	r3, r3, #3
 8002594:	490e      	ldr	r1, [pc, #56]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002596:	4313      	orrs	r3, r2
 8002598:	604b      	str	r3, [r1, #4]
 800259a:	f000 f821 	bl	80025e0 <HAL_RCC_GetSysClockFreq>
 800259e:	4602      	mov	r2, r0
 80025a0:	4b0b      	ldr	r3, [pc, #44]	; (80025d0 <HAL_RCC_ClockConfig+0x1c4>)
 80025a2:	685b      	ldr	r3, [r3, #4]
 80025a4:	091b      	lsrs	r3, r3, #4
 80025a6:	f003 030f 	and.w	r3, r3, #15
 80025aa:	490a      	ldr	r1, [pc, #40]	; (80025d4 <HAL_RCC_ClockConfig+0x1c8>)
 80025ac:	5ccb      	ldrb	r3, [r1, r3]
 80025ae:	fa22 f303 	lsr.w	r3, r2, r3
 80025b2:	4a09      	ldr	r2, [pc, #36]	; (80025d8 <HAL_RCC_ClockConfig+0x1cc>)
 80025b4:	6013      	str	r3, [r2, #0]
 80025b6:	4b09      	ldr	r3, [pc, #36]	; (80025dc <HAL_RCC_ClockConfig+0x1d0>)
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	4618      	mov	r0, r3
 80025bc:	f7ff f98a 	bl	80018d4 <HAL_InitTick>
 80025c0:	2300      	movs	r3, #0
 80025c2:	4618      	mov	r0, r3
 80025c4:	3710      	adds	r7, #16
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bd80      	pop	{r7, pc}
 80025ca:	bf00      	nop
 80025cc:	40022000 	.word	0x40022000
 80025d0:	40021000 	.word	0x40021000
 80025d4:	08002f24 	.word	0x08002f24
 80025d8:	20000074 	.word	0x20000074
 80025dc:	20000078 	.word	0x20000078

080025e0 <HAL_RCC_GetSysClockFreq>:
 80025e0:	b490      	push	{r4, r7}
 80025e2:	b08a      	sub	sp, #40	; 0x28
 80025e4:	af00      	add	r7, sp, #0
 80025e6:	4b2a      	ldr	r3, [pc, #168]	; (8002690 <HAL_RCC_GetSysClockFreq+0xb0>)
 80025e8:	1d3c      	adds	r4, r7, #4
 80025ea:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80025ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80025f0:	f240 2301 	movw	r3, #513	; 0x201
 80025f4:	803b      	strh	r3, [r7, #0]
 80025f6:	2300      	movs	r3, #0
 80025f8:	61fb      	str	r3, [r7, #28]
 80025fa:	2300      	movs	r3, #0
 80025fc:	61bb      	str	r3, [r7, #24]
 80025fe:	2300      	movs	r3, #0
 8002600:	627b      	str	r3, [r7, #36]	; 0x24
 8002602:	2300      	movs	r3, #0
 8002604:	617b      	str	r3, [r7, #20]
 8002606:	2300      	movs	r3, #0
 8002608:	623b      	str	r3, [r7, #32]
 800260a:	4b22      	ldr	r3, [pc, #136]	; (8002694 <HAL_RCC_GetSysClockFreq+0xb4>)
 800260c:	685b      	ldr	r3, [r3, #4]
 800260e:	61fb      	str	r3, [r7, #28]
 8002610:	69fb      	ldr	r3, [r7, #28]
 8002612:	f003 030c 	and.w	r3, r3, #12
 8002616:	2b04      	cmp	r3, #4
 8002618:	d002      	beq.n	8002620 <HAL_RCC_GetSysClockFreq+0x40>
 800261a:	2b08      	cmp	r3, #8
 800261c:	d003      	beq.n	8002626 <HAL_RCC_GetSysClockFreq+0x46>
 800261e:	e02d      	b.n	800267c <HAL_RCC_GetSysClockFreq+0x9c>
 8002620:	4b1d      	ldr	r3, [pc, #116]	; (8002698 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002622:	623b      	str	r3, [r7, #32]
 8002624:	e02d      	b.n	8002682 <HAL_RCC_GetSysClockFreq+0xa2>
 8002626:	69fb      	ldr	r3, [r7, #28]
 8002628:	0c9b      	lsrs	r3, r3, #18
 800262a:	f003 030f 	and.w	r3, r3, #15
 800262e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002632:	4413      	add	r3, r2
 8002634:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002638:	617b      	str	r3, [r7, #20]
 800263a:	69fb      	ldr	r3, [r7, #28]
 800263c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002640:	2b00      	cmp	r3, #0
 8002642:	d013      	beq.n	800266c <HAL_RCC_GetSysClockFreq+0x8c>
 8002644:	4b13      	ldr	r3, [pc, #76]	; (8002694 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002646:	685b      	ldr	r3, [r3, #4]
 8002648:	0c5b      	lsrs	r3, r3, #17
 800264a:	f003 0301 	and.w	r3, r3, #1
 800264e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002652:	4413      	add	r3, r2
 8002654:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002658:	61bb      	str	r3, [r7, #24]
 800265a:	697b      	ldr	r3, [r7, #20]
 800265c:	4a0e      	ldr	r2, [pc, #56]	; (8002698 <HAL_RCC_GetSysClockFreq+0xb8>)
 800265e:	fb02 f203 	mul.w	r2, r2, r3
 8002662:	69bb      	ldr	r3, [r7, #24]
 8002664:	fbb2 f3f3 	udiv	r3, r2, r3
 8002668:	627b      	str	r3, [r7, #36]	; 0x24
 800266a:	e004      	b.n	8002676 <HAL_RCC_GetSysClockFreq+0x96>
 800266c:	697b      	ldr	r3, [r7, #20]
 800266e:	4a0b      	ldr	r2, [pc, #44]	; (800269c <HAL_RCC_GetSysClockFreq+0xbc>)
 8002670:	fb02 f303 	mul.w	r3, r2, r3
 8002674:	627b      	str	r3, [r7, #36]	; 0x24
 8002676:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002678:	623b      	str	r3, [r7, #32]
 800267a:	e002      	b.n	8002682 <HAL_RCC_GetSysClockFreq+0xa2>
 800267c:	4b06      	ldr	r3, [pc, #24]	; (8002698 <HAL_RCC_GetSysClockFreq+0xb8>)
 800267e:	623b      	str	r3, [r7, #32]
 8002680:	bf00      	nop
 8002682:	6a3b      	ldr	r3, [r7, #32]
 8002684:	4618      	mov	r0, r3
 8002686:	3728      	adds	r7, #40	; 0x28
 8002688:	46bd      	mov	sp, r7
 800268a:	bc90      	pop	{r4, r7}
 800268c:	4770      	bx	lr
 800268e:	bf00      	nop
 8002690:	08002f14 	.word	0x08002f14
 8002694:	40021000 	.word	0x40021000
 8002698:	007a1200 	.word	0x007a1200
 800269c:	003d0900 	.word	0x003d0900

080026a0 <RCC_Delay>:
 80026a0:	b480      	push	{r7}
 80026a2:	b085      	sub	sp, #20
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	6078      	str	r0, [r7, #4]
 80026a8:	4b0a      	ldr	r3, [pc, #40]	; (80026d4 <RCC_Delay+0x34>)
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	4a0a      	ldr	r2, [pc, #40]	; (80026d8 <RCC_Delay+0x38>)
 80026ae:	fba2 2303 	umull	r2, r3, r2, r3
 80026b2:	0a5b      	lsrs	r3, r3, #9
 80026b4:	687a      	ldr	r2, [r7, #4]
 80026b6:	fb02 f303 	mul.w	r3, r2, r3
 80026ba:	60fb      	str	r3, [r7, #12]
 80026bc:	bf00      	nop
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	1e5a      	subs	r2, r3, #1
 80026c2:	60fa      	str	r2, [r7, #12]
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	d1f9      	bne.n	80026bc <RCC_Delay+0x1c>
 80026c8:	bf00      	nop
 80026ca:	bf00      	nop
 80026cc:	3714      	adds	r7, #20
 80026ce:	46bd      	mov	sp, r7
 80026d0:	bc80      	pop	{r7}
 80026d2:	4770      	bx	lr
 80026d4:	20000074 	.word	0x20000074
 80026d8:	10624dd3 	.word	0x10624dd3

080026dc <HAL_TIM_Base_Init>:
 80026dc:	b580      	push	{r7, lr}
 80026de:	b082      	sub	sp, #8
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d101      	bne.n	80026ee <HAL_TIM_Base_Init+0x12>
 80026ea:	2301      	movs	r3, #1
 80026ec:	e041      	b.n	8002772 <HAL_TIM_Base_Init+0x96>
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80026f4:	b2db      	uxtb	r3, r3
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d106      	bne.n	8002708 <HAL_TIM_Base_Init+0x2c>
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2200      	movs	r2, #0
 80026fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002702:	6878      	ldr	r0, [r7, #4]
 8002704:	f7fe fdd8 	bl	80012b8 <HAL_TIM_Base_MspInit>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	2202      	movs	r2, #2
 800270c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	681a      	ldr	r2, [r3, #0]
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	3304      	adds	r3, #4
 8002718:	4619      	mov	r1, r3
 800271a:	4610      	mov	r0, r2
 800271c:	f000 fa6a 	bl	8002bf4 <TIM_Base_SetConfig>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	2201      	movs	r2, #1
 8002724:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	2201      	movs	r2, #1
 800272c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	2201      	movs	r2, #1
 8002734:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	2201      	movs	r2, #1
 800273c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2201      	movs	r2, #1
 8002744:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2201      	movs	r2, #1
 800274c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	2201      	movs	r2, #1
 8002754:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	2201      	movs	r2, #1
 800275c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	2201      	movs	r2, #1
 8002764:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	2201      	movs	r2, #1
 800276c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002770:	2300      	movs	r3, #0
 8002772:	4618      	mov	r0, r3
 8002774:	3708      	adds	r7, #8
 8002776:	46bd      	mov	sp, r7
 8002778:	bd80      	pop	{r7, pc}
	...

0800277c <HAL_TIM_Base_Start_IT>:
 800277c:	b480      	push	{r7}
 800277e:	b085      	sub	sp, #20
 8002780:	af00      	add	r7, sp, #0
 8002782:	6078      	str	r0, [r7, #4]
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800278a:	b2db      	uxtb	r3, r3
 800278c:	2b01      	cmp	r3, #1
 800278e:	d001      	beq.n	8002794 <HAL_TIM_Base_Start_IT+0x18>
 8002790:	2301      	movs	r3, #1
 8002792:	e035      	b.n	8002800 <HAL_TIM_Base_Start_IT+0x84>
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	2202      	movs	r2, #2
 8002798:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	68da      	ldr	r2, [r3, #12]
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	f042 0201 	orr.w	r2, r2, #1
 80027aa:	60da      	str	r2, [r3, #12]
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4a16      	ldr	r2, [pc, #88]	; (800280c <HAL_TIM_Base_Start_IT+0x90>)
 80027b2:	4293      	cmp	r3, r2
 80027b4:	d009      	beq.n	80027ca <HAL_TIM_Base_Start_IT+0x4e>
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027be:	d004      	beq.n	80027ca <HAL_TIM_Base_Start_IT+0x4e>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	4a12      	ldr	r2, [pc, #72]	; (8002810 <HAL_TIM_Base_Start_IT+0x94>)
 80027c6:	4293      	cmp	r3, r2
 80027c8:	d111      	bne.n	80027ee <HAL_TIM_Base_Start_IT+0x72>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	689b      	ldr	r3, [r3, #8]
 80027d0:	f003 0307 	and.w	r3, r3, #7
 80027d4:	60fb      	str	r3, [r7, #12]
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	2b06      	cmp	r3, #6
 80027da:	d010      	beq.n	80027fe <HAL_TIM_Base_Start_IT+0x82>
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	681a      	ldr	r2, [r3, #0]
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	f042 0201 	orr.w	r2, r2, #1
 80027ea:	601a      	str	r2, [r3, #0]
 80027ec:	e007      	b.n	80027fe <HAL_TIM_Base_Start_IT+0x82>
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	681a      	ldr	r2, [r3, #0]
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	f042 0201 	orr.w	r2, r2, #1
 80027fc:	601a      	str	r2, [r3, #0]
 80027fe:	2300      	movs	r3, #0
 8002800:	4618      	mov	r0, r3
 8002802:	3714      	adds	r7, #20
 8002804:	46bd      	mov	sp, r7
 8002806:	bc80      	pop	{r7}
 8002808:	4770      	bx	lr
 800280a:	bf00      	nop
 800280c:	40012c00 	.word	0x40012c00
 8002810:	40000400 	.word	0x40000400

08002814 <HAL_TIM_IRQHandler>:
 8002814:	b580      	push	{r7, lr}
 8002816:	b082      	sub	sp, #8
 8002818:	af00      	add	r7, sp, #0
 800281a:	6078      	str	r0, [r7, #4]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	691b      	ldr	r3, [r3, #16]
 8002822:	f003 0302 	and.w	r3, r3, #2
 8002826:	2b02      	cmp	r3, #2
 8002828:	d122      	bne.n	8002870 <HAL_TIM_IRQHandler+0x5c>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	68db      	ldr	r3, [r3, #12]
 8002830:	f003 0302 	and.w	r3, r3, #2
 8002834:	2b02      	cmp	r3, #2
 8002836:	d11b      	bne.n	8002870 <HAL_TIM_IRQHandler+0x5c>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	f06f 0202 	mvn.w	r2, #2
 8002840:	611a      	str	r2, [r3, #16]
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	2201      	movs	r2, #1
 8002846:	771a      	strb	r2, [r3, #28]
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	699b      	ldr	r3, [r3, #24]
 800284e:	f003 0303 	and.w	r3, r3, #3
 8002852:	2b00      	cmp	r3, #0
 8002854:	d003      	beq.n	800285e <HAL_TIM_IRQHandler+0x4a>
 8002856:	6878      	ldr	r0, [r7, #4]
 8002858:	f000 f9b1 	bl	8002bbe <HAL_TIM_IC_CaptureCallback>
 800285c:	e005      	b.n	800286a <HAL_TIM_IRQHandler+0x56>
 800285e:	6878      	ldr	r0, [r7, #4]
 8002860:	f000 f9a4 	bl	8002bac <HAL_TIM_OC_DelayElapsedCallback>
 8002864:	6878      	ldr	r0, [r7, #4]
 8002866:	f000 f9b3 	bl	8002bd0 <HAL_TIM_PWM_PulseFinishedCallback>
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	2200      	movs	r2, #0
 800286e:	771a      	strb	r2, [r3, #28]
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	691b      	ldr	r3, [r3, #16]
 8002876:	f003 0304 	and.w	r3, r3, #4
 800287a:	2b04      	cmp	r3, #4
 800287c:	d122      	bne.n	80028c4 <HAL_TIM_IRQHandler+0xb0>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	68db      	ldr	r3, [r3, #12]
 8002884:	f003 0304 	and.w	r3, r3, #4
 8002888:	2b04      	cmp	r3, #4
 800288a:	d11b      	bne.n	80028c4 <HAL_TIM_IRQHandler+0xb0>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f06f 0204 	mvn.w	r2, #4
 8002894:	611a      	str	r2, [r3, #16]
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	2202      	movs	r2, #2
 800289a:	771a      	strb	r2, [r3, #28]
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	699b      	ldr	r3, [r3, #24]
 80028a2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80028a6:	2b00      	cmp	r3, #0
 80028a8:	d003      	beq.n	80028b2 <HAL_TIM_IRQHandler+0x9e>
 80028aa:	6878      	ldr	r0, [r7, #4]
 80028ac:	f000 f987 	bl	8002bbe <HAL_TIM_IC_CaptureCallback>
 80028b0:	e005      	b.n	80028be <HAL_TIM_IRQHandler+0xaa>
 80028b2:	6878      	ldr	r0, [r7, #4]
 80028b4:	f000 f97a 	bl	8002bac <HAL_TIM_OC_DelayElapsedCallback>
 80028b8:	6878      	ldr	r0, [r7, #4]
 80028ba:	f000 f989 	bl	8002bd0 <HAL_TIM_PWM_PulseFinishedCallback>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	2200      	movs	r2, #0
 80028c2:	771a      	strb	r2, [r3, #28]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	691b      	ldr	r3, [r3, #16]
 80028ca:	f003 0308 	and.w	r3, r3, #8
 80028ce:	2b08      	cmp	r3, #8
 80028d0:	d122      	bne.n	8002918 <HAL_TIM_IRQHandler+0x104>
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	68db      	ldr	r3, [r3, #12]
 80028d8:	f003 0308 	and.w	r3, r3, #8
 80028dc:	2b08      	cmp	r3, #8
 80028de:	d11b      	bne.n	8002918 <HAL_TIM_IRQHandler+0x104>
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	681b      	ldr	r3, [r3, #0]
 80028e4:	f06f 0208 	mvn.w	r2, #8
 80028e8:	611a      	str	r2, [r3, #16]
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	2204      	movs	r2, #4
 80028ee:	771a      	strb	r2, [r3, #28]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	69db      	ldr	r3, [r3, #28]
 80028f6:	f003 0303 	and.w	r3, r3, #3
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d003      	beq.n	8002906 <HAL_TIM_IRQHandler+0xf2>
 80028fe:	6878      	ldr	r0, [r7, #4]
 8002900:	f000 f95d 	bl	8002bbe <HAL_TIM_IC_CaptureCallback>
 8002904:	e005      	b.n	8002912 <HAL_TIM_IRQHandler+0xfe>
 8002906:	6878      	ldr	r0, [r7, #4]
 8002908:	f000 f950 	bl	8002bac <HAL_TIM_OC_DelayElapsedCallback>
 800290c:	6878      	ldr	r0, [r7, #4]
 800290e:	f000 f95f 	bl	8002bd0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	2200      	movs	r2, #0
 8002916:	771a      	strb	r2, [r3, #28]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	691b      	ldr	r3, [r3, #16]
 800291e:	f003 0310 	and.w	r3, r3, #16
 8002922:	2b10      	cmp	r3, #16
 8002924:	d122      	bne.n	800296c <HAL_TIM_IRQHandler+0x158>
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	68db      	ldr	r3, [r3, #12]
 800292c:	f003 0310 	and.w	r3, r3, #16
 8002930:	2b10      	cmp	r3, #16
 8002932:	d11b      	bne.n	800296c <HAL_TIM_IRQHandler+0x158>
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	f06f 0210 	mvn.w	r2, #16
 800293c:	611a      	str	r2, [r3, #16]
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	2208      	movs	r2, #8
 8002942:	771a      	strb	r2, [r3, #28]
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	681b      	ldr	r3, [r3, #0]
 8002948:	69db      	ldr	r3, [r3, #28]
 800294a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800294e:	2b00      	cmp	r3, #0
 8002950:	d003      	beq.n	800295a <HAL_TIM_IRQHandler+0x146>
 8002952:	6878      	ldr	r0, [r7, #4]
 8002954:	f000 f933 	bl	8002bbe <HAL_TIM_IC_CaptureCallback>
 8002958:	e005      	b.n	8002966 <HAL_TIM_IRQHandler+0x152>
 800295a:	6878      	ldr	r0, [r7, #4]
 800295c:	f000 f926 	bl	8002bac <HAL_TIM_OC_DelayElapsedCallback>
 8002960:	6878      	ldr	r0, [r7, #4]
 8002962:	f000 f935 	bl	8002bd0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	2200      	movs	r2, #0
 800296a:	771a      	strb	r2, [r3, #28]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	691b      	ldr	r3, [r3, #16]
 8002972:	f003 0301 	and.w	r3, r3, #1
 8002976:	2b01      	cmp	r3, #1
 8002978:	d10e      	bne.n	8002998 <HAL_TIM_IRQHandler+0x184>
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	68db      	ldr	r3, [r3, #12]
 8002980:	f003 0301 	and.w	r3, r3, #1
 8002984:	2b01      	cmp	r3, #1
 8002986:	d107      	bne.n	8002998 <HAL_TIM_IRQHandler+0x184>
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	f06f 0201 	mvn.w	r2, #1
 8002990:	611a      	str	r2, [r3, #16]
 8002992:	6878      	ldr	r0, [r7, #4]
 8002994:	f7fe fc4c 	bl	8001230 <HAL_TIM_PeriodElapsedCallback>
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	691b      	ldr	r3, [r3, #16]
 800299e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029a2:	2b80      	cmp	r3, #128	; 0x80
 80029a4:	d10e      	bne.n	80029c4 <HAL_TIM_IRQHandler+0x1b0>
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	68db      	ldr	r3, [r3, #12]
 80029ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029b0:	2b80      	cmp	r3, #128	; 0x80
 80029b2:	d107      	bne.n	80029c4 <HAL_TIM_IRQHandler+0x1b0>
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80029bc:	611a      	str	r2, [r3, #16]
 80029be:	6878      	ldr	r0, [r7, #4]
 80029c0:	f000 fa67 	bl	8002e92 <HAL_TIMEx_BreakCallback>
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	691b      	ldr	r3, [r3, #16]
 80029ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80029ce:	2b40      	cmp	r3, #64	; 0x40
 80029d0:	d10e      	bne.n	80029f0 <HAL_TIM_IRQHandler+0x1dc>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	68db      	ldr	r3, [r3, #12]
 80029d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80029dc:	2b40      	cmp	r3, #64	; 0x40
 80029de:	d107      	bne.n	80029f0 <HAL_TIM_IRQHandler+0x1dc>
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80029e8:	611a      	str	r2, [r3, #16]
 80029ea:	6878      	ldr	r0, [r7, #4]
 80029ec:	f000 f8f9 	bl	8002be2 <HAL_TIM_TriggerCallback>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	691b      	ldr	r3, [r3, #16]
 80029f6:	f003 0320 	and.w	r3, r3, #32
 80029fa:	2b20      	cmp	r3, #32
 80029fc:	d10e      	bne.n	8002a1c <HAL_TIM_IRQHandler+0x208>
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	68db      	ldr	r3, [r3, #12]
 8002a04:	f003 0320 	and.w	r3, r3, #32
 8002a08:	2b20      	cmp	r3, #32
 8002a0a:	d107      	bne.n	8002a1c <HAL_TIM_IRQHandler+0x208>
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	f06f 0220 	mvn.w	r2, #32
 8002a14:	611a      	str	r2, [r3, #16]
 8002a16:	6878      	ldr	r0, [r7, #4]
 8002a18:	f000 fa32 	bl	8002e80 <HAL_TIMEx_CommutCallback>
 8002a1c:	bf00      	nop
 8002a1e:	3708      	adds	r7, #8
 8002a20:	46bd      	mov	sp, r7
 8002a22:	bd80      	pop	{r7, pc}

08002a24 <HAL_TIM_ConfigClockSource>:
 8002a24:	b580      	push	{r7, lr}
 8002a26:	b084      	sub	sp, #16
 8002a28:	af00      	add	r7, sp, #0
 8002a2a:	6078      	str	r0, [r7, #4]
 8002a2c:	6039      	str	r1, [r7, #0]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002a34:	2b01      	cmp	r3, #1
 8002a36:	d101      	bne.n	8002a3c <HAL_TIM_ConfigClockSource+0x18>
 8002a38:	2302      	movs	r3, #2
 8002a3a:	e0b3      	b.n	8002ba4 <HAL_TIM_ConfigClockSource+0x180>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2202      	movs	r2, #2
 8002a48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	689b      	ldr	r3, [r3, #8]
 8002a52:	60fb      	str	r3, [r7, #12]
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002a5a:	60fb      	str	r3, [r7, #12]
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002a62:	60fb      	str	r3, [r7, #12]
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	68fa      	ldr	r2, [r7, #12]
 8002a6a:	609a      	str	r2, [r3, #8]
 8002a6c:	683b      	ldr	r3, [r7, #0]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002a74:	d03e      	beq.n	8002af4 <HAL_TIM_ConfigClockSource+0xd0>
 8002a76:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002a7a:	f200 8087 	bhi.w	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002a7e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a82:	f000 8085 	beq.w	8002b90 <HAL_TIM_ConfigClockSource+0x16c>
 8002a86:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a8a:	d87f      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002a8c:	2b70      	cmp	r3, #112	; 0x70
 8002a8e:	d01a      	beq.n	8002ac6 <HAL_TIM_ConfigClockSource+0xa2>
 8002a90:	2b70      	cmp	r3, #112	; 0x70
 8002a92:	d87b      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002a94:	2b60      	cmp	r3, #96	; 0x60
 8002a96:	d050      	beq.n	8002b3a <HAL_TIM_ConfigClockSource+0x116>
 8002a98:	2b60      	cmp	r3, #96	; 0x60
 8002a9a:	d877      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002a9c:	2b50      	cmp	r3, #80	; 0x50
 8002a9e:	d03c      	beq.n	8002b1a <HAL_TIM_ConfigClockSource+0xf6>
 8002aa0:	2b50      	cmp	r3, #80	; 0x50
 8002aa2:	d873      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002aa4:	2b40      	cmp	r3, #64	; 0x40
 8002aa6:	d058      	beq.n	8002b5a <HAL_TIM_ConfigClockSource+0x136>
 8002aa8:	2b40      	cmp	r3, #64	; 0x40
 8002aaa:	d86f      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002aac:	2b30      	cmp	r3, #48	; 0x30
 8002aae:	d064      	beq.n	8002b7a <HAL_TIM_ConfigClockSource+0x156>
 8002ab0:	2b30      	cmp	r3, #48	; 0x30
 8002ab2:	d86b      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002ab4:	2b20      	cmp	r3, #32
 8002ab6:	d060      	beq.n	8002b7a <HAL_TIM_ConfigClockSource+0x156>
 8002ab8:	2b20      	cmp	r3, #32
 8002aba:	d867      	bhi.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d05c      	beq.n	8002b7a <HAL_TIM_ConfigClockSource+0x156>
 8002ac0:	2b10      	cmp	r3, #16
 8002ac2:	d05a      	beq.n	8002b7a <HAL_TIM_ConfigClockSource+0x156>
 8002ac4:	e062      	b.n	8002b8c <HAL_TIM_ConfigClockSource+0x168>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	6818      	ldr	r0, [r3, #0]
 8002aca:	683b      	ldr	r3, [r7, #0]
 8002acc:	6899      	ldr	r1, [r3, #8]
 8002ace:	683b      	ldr	r3, [r7, #0]
 8002ad0:	685a      	ldr	r2, [r3, #4]
 8002ad2:	683b      	ldr	r3, [r7, #0]
 8002ad4:	68db      	ldr	r3, [r3, #12]
 8002ad6:	f000 f95c 	bl	8002d92 <TIM_ETR_SetConfig>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	689b      	ldr	r3, [r3, #8]
 8002ae0:	60fb      	str	r3, [r7, #12]
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002ae8:	60fb      	str	r3, [r7, #12]
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	68fa      	ldr	r2, [r7, #12]
 8002af0:	609a      	str	r2, [r3, #8]
 8002af2:	e04e      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	6818      	ldr	r0, [r3, #0]
 8002af8:	683b      	ldr	r3, [r7, #0]
 8002afa:	6899      	ldr	r1, [r3, #8]
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	685a      	ldr	r2, [r3, #4]
 8002b00:	683b      	ldr	r3, [r7, #0]
 8002b02:	68db      	ldr	r3, [r3, #12]
 8002b04:	f000 f945 	bl	8002d92 <TIM_ETR_SetConfig>
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	689a      	ldr	r2, [r3, #8]
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002b16:	609a      	str	r2, [r3, #8]
 8002b18:	e03b      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	6818      	ldr	r0, [r3, #0]
 8002b1e:	683b      	ldr	r3, [r7, #0]
 8002b20:	6859      	ldr	r1, [r3, #4]
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	68db      	ldr	r3, [r3, #12]
 8002b26:	461a      	mov	r2, r3
 8002b28:	f000 f8bc 	bl	8002ca4 <TIM_TI1_ConfigInputStage>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	2150      	movs	r1, #80	; 0x50
 8002b32:	4618      	mov	r0, r3
 8002b34:	f000 f913 	bl	8002d5e <TIM_ITRx_SetConfig>
 8002b38:	e02b      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6818      	ldr	r0, [r3, #0]
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	6859      	ldr	r1, [r3, #4]
 8002b42:	683b      	ldr	r3, [r7, #0]
 8002b44:	68db      	ldr	r3, [r3, #12]
 8002b46:	461a      	mov	r2, r3
 8002b48:	f000 f8da 	bl	8002d00 <TIM_TI2_ConfigInputStage>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	2160      	movs	r1, #96	; 0x60
 8002b52:	4618      	mov	r0, r3
 8002b54:	f000 f903 	bl	8002d5e <TIM_ITRx_SetConfig>
 8002b58:	e01b      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	6818      	ldr	r0, [r3, #0]
 8002b5e:	683b      	ldr	r3, [r7, #0]
 8002b60:	6859      	ldr	r1, [r3, #4]
 8002b62:	683b      	ldr	r3, [r7, #0]
 8002b64:	68db      	ldr	r3, [r3, #12]
 8002b66:	461a      	mov	r2, r3
 8002b68:	f000 f89c 	bl	8002ca4 <TIM_TI1_ConfigInputStage>
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	681b      	ldr	r3, [r3, #0]
 8002b70:	2140      	movs	r1, #64	; 0x40
 8002b72:	4618      	mov	r0, r3
 8002b74:	f000 f8f3 	bl	8002d5e <TIM_ITRx_SetConfig>
 8002b78:	e00b      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	681a      	ldr	r2, [r3, #0]
 8002b7e:	683b      	ldr	r3, [r7, #0]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4619      	mov	r1, r3
 8002b84:	4610      	mov	r0, r2
 8002b86:	f000 f8ea 	bl	8002d5e <TIM_ITRx_SetConfig>
 8002b8a:	e002      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b8c:	bf00      	nop
 8002b8e:	e000      	b.n	8002b92 <HAL_TIM_ConfigClockSource+0x16e>
 8002b90:	bf00      	nop
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	2201      	movs	r2, #1
 8002b96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ba2:	2300      	movs	r3, #0
 8002ba4:	4618      	mov	r0, r3
 8002ba6:	3710      	adds	r7, #16
 8002ba8:	46bd      	mov	sp, r7
 8002baa:	bd80      	pop	{r7, pc}

08002bac <HAL_TIM_OC_DelayElapsedCallback>:
 8002bac:	b480      	push	{r7}
 8002bae:	b083      	sub	sp, #12
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
 8002bb4:	bf00      	nop
 8002bb6:	370c      	adds	r7, #12
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	bc80      	pop	{r7}
 8002bbc:	4770      	bx	lr

08002bbe <HAL_TIM_IC_CaptureCallback>:
 8002bbe:	b480      	push	{r7}
 8002bc0:	b083      	sub	sp, #12
 8002bc2:	af00      	add	r7, sp, #0
 8002bc4:	6078      	str	r0, [r7, #4]
 8002bc6:	bf00      	nop
 8002bc8:	370c      	adds	r7, #12
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	bc80      	pop	{r7}
 8002bce:	4770      	bx	lr

08002bd0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002bd0:	b480      	push	{r7}
 8002bd2:	b083      	sub	sp, #12
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	6078      	str	r0, [r7, #4]
 8002bd8:	bf00      	nop
 8002bda:	370c      	adds	r7, #12
 8002bdc:	46bd      	mov	sp, r7
 8002bde:	bc80      	pop	{r7}
 8002be0:	4770      	bx	lr

08002be2 <HAL_TIM_TriggerCallback>:
 8002be2:	b480      	push	{r7}
 8002be4:	b083      	sub	sp, #12
 8002be6:	af00      	add	r7, sp, #0
 8002be8:	6078      	str	r0, [r7, #4]
 8002bea:	bf00      	nop
 8002bec:	370c      	adds	r7, #12
 8002bee:	46bd      	mov	sp, r7
 8002bf0:	bc80      	pop	{r7}
 8002bf2:	4770      	bx	lr

08002bf4 <TIM_Base_SetConfig>:
 8002bf4:	b480      	push	{r7}
 8002bf6:	b085      	sub	sp, #20
 8002bf8:	af00      	add	r7, sp, #0
 8002bfa:	6078      	str	r0, [r7, #4]
 8002bfc:	6039      	str	r1, [r7, #0]
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	60fb      	str	r3, [r7, #12]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	4a25      	ldr	r2, [pc, #148]	; (8002c9c <TIM_Base_SetConfig+0xa8>)
 8002c08:	4293      	cmp	r3, r2
 8002c0a:	d007      	beq.n	8002c1c <TIM_Base_SetConfig+0x28>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c12:	d003      	beq.n	8002c1c <TIM_Base_SetConfig+0x28>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	4a22      	ldr	r2, [pc, #136]	; (8002ca0 <TIM_Base_SetConfig+0xac>)
 8002c18:	4293      	cmp	r3, r2
 8002c1a:	d108      	bne.n	8002c2e <TIM_Base_SetConfig+0x3a>
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002c22:	60fb      	str	r3, [r7, #12]
 8002c24:	683b      	ldr	r3, [r7, #0]
 8002c26:	685b      	ldr	r3, [r3, #4]
 8002c28:	68fa      	ldr	r2, [r7, #12]
 8002c2a:	4313      	orrs	r3, r2
 8002c2c:	60fb      	str	r3, [r7, #12]
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	4a1a      	ldr	r2, [pc, #104]	; (8002c9c <TIM_Base_SetConfig+0xa8>)
 8002c32:	4293      	cmp	r3, r2
 8002c34:	d007      	beq.n	8002c46 <TIM_Base_SetConfig+0x52>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c3c:	d003      	beq.n	8002c46 <TIM_Base_SetConfig+0x52>
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	4a17      	ldr	r2, [pc, #92]	; (8002ca0 <TIM_Base_SetConfig+0xac>)
 8002c42:	4293      	cmp	r3, r2
 8002c44:	d108      	bne.n	8002c58 <TIM_Base_SetConfig+0x64>
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002c4c:	60fb      	str	r3, [r7, #12]
 8002c4e:	683b      	ldr	r3, [r7, #0]
 8002c50:	68db      	ldr	r3, [r3, #12]
 8002c52:	68fa      	ldr	r2, [r7, #12]
 8002c54:	4313      	orrs	r3, r2
 8002c56:	60fb      	str	r3, [r7, #12]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002c5e:	683b      	ldr	r3, [r7, #0]
 8002c60:	695b      	ldr	r3, [r3, #20]
 8002c62:	4313      	orrs	r3, r2
 8002c64:	60fb      	str	r3, [r7, #12]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	68fa      	ldr	r2, [r7, #12]
 8002c6a:	601a      	str	r2, [r3, #0]
 8002c6c:	683b      	ldr	r3, [r7, #0]
 8002c6e:	689a      	ldr	r2, [r3, #8]
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	62da      	str	r2, [r3, #44]	; 0x2c
 8002c74:	683b      	ldr	r3, [r7, #0]
 8002c76:	681a      	ldr	r2, [r3, #0]
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	629a      	str	r2, [r3, #40]	; 0x28
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	4a07      	ldr	r2, [pc, #28]	; (8002c9c <TIM_Base_SetConfig+0xa8>)
 8002c80:	4293      	cmp	r3, r2
 8002c82:	d103      	bne.n	8002c8c <TIM_Base_SetConfig+0x98>
 8002c84:	683b      	ldr	r3, [r7, #0]
 8002c86:	691a      	ldr	r2, [r3, #16]
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	631a      	str	r2, [r3, #48]	; 0x30
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	2201      	movs	r2, #1
 8002c90:	615a      	str	r2, [r3, #20]
 8002c92:	bf00      	nop
 8002c94:	3714      	adds	r7, #20
 8002c96:	46bd      	mov	sp, r7
 8002c98:	bc80      	pop	{r7}
 8002c9a:	4770      	bx	lr
 8002c9c:	40012c00 	.word	0x40012c00
 8002ca0:	40000400 	.word	0x40000400

08002ca4 <TIM_TI1_ConfigInputStage>:
 8002ca4:	b480      	push	{r7}
 8002ca6:	b087      	sub	sp, #28
 8002ca8:	af00      	add	r7, sp, #0
 8002caa:	60f8      	str	r0, [r7, #12]
 8002cac:	60b9      	str	r1, [r7, #8]
 8002cae:	607a      	str	r2, [r7, #4]
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	6a1b      	ldr	r3, [r3, #32]
 8002cb4:	617b      	str	r3, [r7, #20]
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	6a1b      	ldr	r3, [r3, #32]
 8002cba:	f023 0201 	bic.w	r2, r3, #1
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	621a      	str	r2, [r3, #32]
 8002cc2:	68fb      	ldr	r3, [r7, #12]
 8002cc4:	699b      	ldr	r3, [r3, #24]
 8002cc6:	613b      	str	r3, [r7, #16]
 8002cc8:	693b      	ldr	r3, [r7, #16]
 8002cca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002cce:	613b      	str	r3, [r7, #16]
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	011b      	lsls	r3, r3, #4
 8002cd4:	693a      	ldr	r2, [r7, #16]
 8002cd6:	4313      	orrs	r3, r2
 8002cd8:	613b      	str	r3, [r7, #16]
 8002cda:	697b      	ldr	r3, [r7, #20]
 8002cdc:	f023 030a 	bic.w	r3, r3, #10
 8002ce0:	617b      	str	r3, [r7, #20]
 8002ce2:	697a      	ldr	r2, [r7, #20]
 8002ce4:	68bb      	ldr	r3, [r7, #8]
 8002ce6:	4313      	orrs	r3, r2
 8002ce8:	617b      	str	r3, [r7, #20]
 8002cea:	68fb      	ldr	r3, [r7, #12]
 8002cec:	693a      	ldr	r2, [r7, #16]
 8002cee:	619a      	str	r2, [r3, #24]
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	697a      	ldr	r2, [r7, #20]
 8002cf4:	621a      	str	r2, [r3, #32]
 8002cf6:	bf00      	nop
 8002cf8:	371c      	adds	r7, #28
 8002cfa:	46bd      	mov	sp, r7
 8002cfc:	bc80      	pop	{r7}
 8002cfe:	4770      	bx	lr

08002d00 <TIM_TI2_ConfigInputStage>:
 8002d00:	b480      	push	{r7}
 8002d02:	b087      	sub	sp, #28
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	60f8      	str	r0, [r7, #12]
 8002d08:	60b9      	str	r1, [r7, #8]
 8002d0a:	607a      	str	r2, [r7, #4]
 8002d0c:	68fb      	ldr	r3, [r7, #12]
 8002d0e:	6a1b      	ldr	r3, [r3, #32]
 8002d10:	f023 0210 	bic.w	r2, r3, #16
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	621a      	str	r2, [r3, #32]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	699b      	ldr	r3, [r3, #24]
 8002d1c:	617b      	str	r3, [r7, #20]
 8002d1e:	68fb      	ldr	r3, [r7, #12]
 8002d20:	6a1b      	ldr	r3, [r3, #32]
 8002d22:	613b      	str	r3, [r7, #16]
 8002d24:	697b      	ldr	r3, [r7, #20]
 8002d26:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002d2a:	617b      	str	r3, [r7, #20]
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	031b      	lsls	r3, r3, #12
 8002d30:	697a      	ldr	r2, [r7, #20]
 8002d32:	4313      	orrs	r3, r2
 8002d34:	617b      	str	r3, [r7, #20]
 8002d36:	693b      	ldr	r3, [r7, #16]
 8002d38:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002d3c:	613b      	str	r3, [r7, #16]
 8002d3e:	68bb      	ldr	r3, [r7, #8]
 8002d40:	011b      	lsls	r3, r3, #4
 8002d42:	693a      	ldr	r2, [r7, #16]
 8002d44:	4313      	orrs	r3, r2
 8002d46:	613b      	str	r3, [r7, #16]
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	697a      	ldr	r2, [r7, #20]
 8002d4c:	619a      	str	r2, [r3, #24]
 8002d4e:	68fb      	ldr	r3, [r7, #12]
 8002d50:	693a      	ldr	r2, [r7, #16]
 8002d52:	621a      	str	r2, [r3, #32]
 8002d54:	bf00      	nop
 8002d56:	371c      	adds	r7, #28
 8002d58:	46bd      	mov	sp, r7
 8002d5a:	bc80      	pop	{r7}
 8002d5c:	4770      	bx	lr

08002d5e <TIM_ITRx_SetConfig>:
 8002d5e:	b480      	push	{r7}
 8002d60:	b085      	sub	sp, #20
 8002d62:	af00      	add	r7, sp, #0
 8002d64:	6078      	str	r0, [r7, #4]
 8002d66:	6039      	str	r1, [r7, #0]
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	689b      	ldr	r3, [r3, #8]
 8002d6c:	60fb      	str	r3, [r7, #12]
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002d74:	60fb      	str	r3, [r7, #12]
 8002d76:	683a      	ldr	r2, [r7, #0]
 8002d78:	68fb      	ldr	r3, [r7, #12]
 8002d7a:	4313      	orrs	r3, r2
 8002d7c:	f043 0307 	orr.w	r3, r3, #7
 8002d80:	60fb      	str	r3, [r7, #12]
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	68fa      	ldr	r2, [r7, #12]
 8002d86:	609a      	str	r2, [r3, #8]
 8002d88:	bf00      	nop
 8002d8a:	3714      	adds	r7, #20
 8002d8c:	46bd      	mov	sp, r7
 8002d8e:	bc80      	pop	{r7}
 8002d90:	4770      	bx	lr

08002d92 <TIM_ETR_SetConfig>:
 8002d92:	b480      	push	{r7}
 8002d94:	b087      	sub	sp, #28
 8002d96:	af00      	add	r7, sp, #0
 8002d98:	60f8      	str	r0, [r7, #12]
 8002d9a:	60b9      	str	r1, [r7, #8]
 8002d9c:	607a      	str	r2, [r7, #4]
 8002d9e:	603b      	str	r3, [r7, #0]
 8002da0:	68fb      	ldr	r3, [r7, #12]
 8002da2:	689b      	ldr	r3, [r3, #8]
 8002da4:	617b      	str	r3, [r7, #20]
 8002da6:	697b      	ldr	r3, [r7, #20]
 8002da8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002dac:	617b      	str	r3, [r7, #20]
 8002dae:	683b      	ldr	r3, [r7, #0]
 8002db0:	021a      	lsls	r2, r3, #8
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	431a      	orrs	r2, r3
 8002db6:	68bb      	ldr	r3, [r7, #8]
 8002db8:	4313      	orrs	r3, r2
 8002dba:	697a      	ldr	r2, [r7, #20]
 8002dbc:	4313      	orrs	r3, r2
 8002dbe:	617b      	str	r3, [r7, #20]
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	697a      	ldr	r2, [r7, #20]
 8002dc4:	609a      	str	r2, [r3, #8]
 8002dc6:	bf00      	nop
 8002dc8:	371c      	adds	r7, #28
 8002dca:	46bd      	mov	sp, r7
 8002dcc:	bc80      	pop	{r7}
 8002dce:	4770      	bx	lr

08002dd0 <HAL_TIMEx_MasterConfigSynchronization>:
 8002dd0:	b480      	push	{r7}
 8002dd2:	b085      	sub	sp, #20
 8002dd4:	af00      	add	r7, sp, #0
 8002dd6:	6078      	str	r0, [r7, #4]
 8002dd8:	6039      	str	r1, [r7, #0]
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002de0:	2b01      	cmp	r3, #1
 8002de2:	d101      	bne.n	8002de8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002de4:	2302      	movs	r3, #2
 8002de6:	e041      	b.n	8002e6c <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	2201      	movs	r2, #1
 8002dec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	2202      	movs	r2, #2
 8002df4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	685b      	ldr	r3, [r3, #4]
 8002dfe:	60fb      	str	r3, [r7, #12]
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	689b      	ldr	r3, [r3, #8]
 8002e06:	60bb      	str	r3, [r7, #8]
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002e0e:	60fb      	str	r3, [r7, #12]
 8002e10:	683b      	ldr	r3, [r7, #0]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	68fa      	ldr	r2, [r7, #12]
 8002e16:	4313      	orrs	r3, r2
 8002e18:	60fb      	str	r3, [r7, #12]
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	68fa      	ldr	r2, [r7, #12]
 8002e20:	605a      	str	r2, [r3, #4]
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	4a14      	ldr	r2, [pc, #80]	; (8002e78 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002e28:	4293      	cmp	r3, r2
 8002e2a:	d009      	beq.n	8002e40 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002e34:	d004      	beq.n	8002e40 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	4a10      	ldr	r2, [pc, #64]	; (8002e7c <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8002e3c:	4293      	cmp	r3, r2
 8002e3e:	d10c      	bne.n	8002e5a <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002e40:	68bb      	ldr	r3, [r7, #8]
 8002e42:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002e46:	60bb      	str	r3, [r7, #8]
 8002e48:	683b      	ldr	r3, [r7, #0]
 8002e4a:	685b      	ldr	r3, [r3, #4]
 8002e4c:	68ba      	ldr	r2, [r7, #8]
 8002e4e:	4313      	orrs	r3, r2
 8002e50:	60bb      	str	r3, [r7, #8]
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	68ba      	ldr	r2, [r7, #8]
 8002e58:	609a      	str	r2, [r3, #8]
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	2200      	movs	r2, #0
 8002e66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	4618      	mov	r0, r3
 8002e6e:	3714      	adds	r7, #20
 8002e70:	46bd      	mov	sp, r7
 8002e72:	bc80      	pop	{r7}
 8002e74:	4770      	bx	lr
 8002e76:	bf00      	nop
 8002e78:	40012c00 	.word	0x40012c00
 8002e7c:	40000400 	.word	0x40000400

08002e80 <HAL_TIMEx_CommutCallback>:
 8002e80:	b480      	push	{r7}
 8002e82:	b083      	sub	sp, #12
 8002e84:	af00      	add	r7, sp, #0
 8002e86:	6078      	str	r0, [r7, #4]
 8002e88:	bf00      	nop
 8002e8a:	370c      	adds	r7, #12
 8002e8c:	46bd      	mov	sp, r7
 8002e8e:	bc80      	pop	{r7}
 8002e90:	4770      	bx	lr

08002e92 <HAL_TIMEx_BreakCallback>:
 8002e92:	b480      	push	{r7}
 8002e94:	b083      	sub	sp, #12
 8002e96:	af00      	add	r7, sp, #0
 8002e98:	6078      	str	r0, [r7, #4]
 8002e9a:	bf00      	nop
 8002e9c:	370c      	adds	r7, #12
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bc80      	pop	{r7}
 8002ea2:	4770      	bx	lr

08002ea4 <__libc_init_array>:
 8002ea4:	b570      	push	{r4, r5, r6, lr}
 8002ea6:	2600      	movs	r6, #0
 8002ea8:	4d0c      	ldr	r5, [pc, #48]	; (8002edc <__libc_init_array+0x38>)
 8002eaa:	4c0d      	ldr	r4, [pc, #52]	; (8002ee0 <__libc_init_array+0x3c>)
 8002eac:	1b64      	subs	r4, r4, r5
 8002eae:	10a4      	asrs	r4, r4, #2
 8002eb0:	42a6      	cmp	r6, r4
 8002eb2:	d109      	bne.n	8002ec8 <__libc_init_array+0x24>
 8002eb4:	f000 f822 	bl	8002efc <_init>
 8002eb8:	2600      	movs	r6, #0
 8002eba:	4d0a      	ldr	r5, [pc, #40]	; (8002ee4 <__libc_init_array+0x40>)
 8002ebc:	4c0a      	ldr	r4, [pc, #40]	; (8002ee8 <__libc_init_array+0x44>)
 8002ebe:	1b64      	subs	r4, r4, r5
 8002ec0:	10a4      	asrs	r4, r4, #2
 8002ec2:	42a6      	cmp	r6, r4
 8002ec4:	d105      	bne.n	8002ed2 <__libc_init_array+0x2e>
 8002ec6:	bd70      	pop	{r4, r5, r6, pc}
 8002ec8:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ecc:	4798      	blx	r3
 8002ece:	3601      	adds	r6, #1
 8002ed0:	e7ee      	b.n	8002eb0 <__libc_init_array+0xc>
 8002ed2:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ed6:	4798      	blx	r3
 8002ed8:	3601      	adds	r6, #1
 8002eda:	e7f2      	b.n	8002ec2 <__libc_init_array+0x1e>
 8002edc:	08002f34 	.word	0x08002f34
 8002ee0:	08002f34 	.word	0x08002f34
 8002ee4:	08002f34 	.word	0x08002f34
 8002ee8:	08002f38 	.word	0x08002f38

08002eec <memset>:
 8002eec:	4603      	mov	r3, r0
 8002eee:	4402      	add	r2, r0
 8002ef0:	4293      	cmp	r3, r2
 8002ef2:	d100      	bne.n	8002ef6 <memset+0xa>
 8002ef4:	4770      	bx	lr
 8002ef6:	f803 1b01 	strb.w	r1, [r3], #1
 8002efa:	e7f9      	b.n	8002ef0 <memset+0x4>

08002efc <_init>:
 8002efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002efe:	bf00      	nop
 8002f00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002f02:	bc08      	pop	{r3}
 8002f04:	469e      	mov	lr, r3
 8002f06:	4770      	bx	lr

08002f08 <_fini>:
 8002f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f0a:	bf00      	nop
 8002f0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002f0e:	bc08      	pop	{r3}
 8002f10:	469e      	mov	lr, r3
 8002f12:	4770      	bx	lr
