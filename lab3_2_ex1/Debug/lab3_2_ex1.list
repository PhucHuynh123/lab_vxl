
lab3_2_ex1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002dec  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08002ef8  08002ef8  00012ef8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002f18  08002f18  00020080  2**0
                  CONTENTS
  4 .ARM          00000000  08002f18  08002f18  00020080  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002f18  08002f18  00020080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002f18  08002f18  00012f18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002f1c  08002f1c  00012f1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000080  20000000  08002f20  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b4  20000080  08002fa0  00020080  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000134  08002fa0  00020134  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020080  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009f06  00000000  00000000  000200a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ab0  00000000  00000000  00029faf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000aa8  00000000  00000000  0002ba60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00016e15  00000000  00000000  0002c508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   0000bd6a  00000000  00000000  0004331d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    00082491  00000000  00000000  0004f087  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000053  00000000  00000000  000d1518  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00000998  00000000  00000000  000d1570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000029e4  00000000  00000000  000d1f08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000080 	.word	0x20000080
 8000128:	00000000 	.word	0x00000000
 800012c:	08002ee0 	.word	0x08002ee0

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000084 	.word	0x20000084
 8000148:	08002ee0 	.word	0x08002ee0

0800014c <fsm_for_input_processing>:
#include "global.h"
#include "timer.h"



 void fsm_for_input_processing (){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
 	switch (State){
 8000150:	4b71      	ldr	r3, [pc, #452]	; (8000318 <fsm_for_input_processing+0x1cc>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	3b01      	subs	r3, #1
 8000156:	2b03      	cmp	r3, #3
 8000158:	f200 8163 	bhi.w	8000422 <fsm_for_input_processing+0x2d6>
 800015c:	a201      	add	r2, pc, #4	; (adr r2, 8000164 <fsm_for_input_processing+0x18>)
 800015e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000162:	bf00      	nop
 8000164:	08000175 	.word	0x08000175
 8000168:	080001a1 	.word	0x080001a1
 800016c:	0800025d 	.word	0x0800025d
 8000170:	0800034d 	.word	0x0800034d
 		case MODE1:
 			fsm_automatic_1();
 8000174:	f001 fa88 	bl	8001688 <fsm_automatic_1>
 			fsm_automatic_2();
 8000178:	f001 faf4 	bl	8001764 <fsm_automatic_2>
 			display_two_7SEG();
 800017c:	f000 fc3e 	bl	80009fc <display_two_7SEG>
 			if(button_flag[0] == 1 ){
 8000180:	4b66      	ldr	r3, [pc, #408]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	2b01      	cmp	r3, #1
 8000186:	f040 814e 	bne.w	8000426 <fsm_for_input_processing+0x2da>
 				button_flag[0] = 0;
 800018a:	4b64      	ldr	r3, [pc, #400]	; (800031c <fsm_for_input_processing+0x1d0>)
 800018c:	2200      	movs	r2, #0
 800018e:	601a      	str	r2, [r3, #0]
 				setTimer6(10000);
 8000190:	f242 7010 	movw	r0, #10000	; 0x2710
 8000194:	f001 f94c 	bl	8001430 <setTimer6>
 				State = MODE2;
 8000198:	4b5f      	ldr	r3, [pc, #380]	; (8000318 <fsm_for_input_processing+0x1cc>)
 800019a:	2202      	movs	r2, #2
 800019c:	601a      	str	r2, [r3, #0]
 			}
 			break;
 800019e:	e142      	b.n	8000426 <fsm_for_input_processing+0x2da>
 		case MODE2:
 			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 80001a0:	4b5e      	ldr	r3, [pc, #376]	; (800031c <fsm_for_input_processing+0x1d0>)
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	2b01      	cmp	r3, #1
 80001a6:	d007      	beq.n	80001b8 <fsm_for_input_processing+0x6c>
 80001a8:	4b5c      	ldr	r3, [pc, #368]	; (800031c <fsm_for_input_processing+0x1d0>)
 80001aa:	685b      	ldr	r3, [r3, #4]
 80001ac:	2b01      	cmp	r3, #1
 80001ae:	d003      	beq.n	80001b8 <fsm_for_input_processing+0x6c>
 80001b0:	4b5a      	ldr	r3, [pc, #360]	; (800031c <fsm_for_input_processing+0x1d0>)
 80001b2:	689b      	ldr	r3, [r3, #8]
 80001b4:	2b01      	cmp	r3, #1
 80001b6:	d103      	bne.n	80001c0 <fsm_for_input_processing+0x74>
 				setTimer6(10000);
 80001b8:	f242 7010 	movw	r0, #10000	; 0x2710
 80001bc:	f001 f938 	bl	8001430 <setTimer6>
 			}
 			if (timer_flag6 == 1){
 80001c0:	4b57      	ldr	r3, [pc, #348]	; (8000320 <fsm_for_input_processing+0x1d4>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	2b01      	cmp	r3, #1
 80001c6:	d114      	bne.n	80001f2 <fsm_for_input_processing+0xa6>
 				status1 = 1;
 80001c8:	4b56      	ldr	r3, [pc, #344]	; (8000324 <fsm_for_input_processing+0x1d8>)
 80001ca:	2201      	movs	r2, #1
 80001cc:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 80001ce:	4b56      	ldr	r3, [pc, #344]	; (8000328 <fsm_for_input_processing+0x1dc>)
 80001d0:	2201      	movs	r2, #1
 80001d2:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 80001d4:	4b55      	ldr	r3, [pc, #340]	; (800032c <fsm_for_input_processing+0x1e0>)
 80001d6:	2201      	movs	r2, #1
 80001d8:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 80001da:	4b55      	ldr	r3, [pc, #340]	; (8000330 <fsm_for_input_processing+0x1e4>)
 80001dc:	2201      	movs	r2, #1
 80001de:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 80001e0:	4b54      	ldr	r3, [pc, #336]	; (8000334 <fsm_for_input_processing+0x1e8>)
 80001e2:	2201      	movs	r2, #1
 80001e4:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 80001e6:	4b54      	ldr	r3, [pc, #336]	; (8000338 <fsm_for_input_processing+0x1ec>)
 80001e8:	2201      	movs	r2, #1
 80001ea:	601a      	str	r2, [r3, #0]
 				State = MODE1;
 80001ec:	4b4a      	ldr	r3, [pc, #296]	; (8000318 <fsm_for_input_processing+0x1cc>)
 80001ee:	2201      	movs	r2, #1
 80001f0:	601a      	str	r2, [r3, #0]
 			}
 			blink_led_red();
 80001f2:	f000 fd43 	bl	8000c7c <blink_led_red>
 			if(button_flag[1] == 1){
 80001f6:	4b49      	ldr	r3, [pc, #292]	; (800031c <fsm_for_input_processing+0x1d0>)
 80001f8:	685b      	ldr	r3, [r3, #4]
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d10e      	bne.n	800021c <fsm_for_input_processing+0xd0>
 				button_flag[1] = 0;
 80001fe:	4b47      	ldr	r3, [pc, #284]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000200:	2200      	movs	r2, #0
 8000202:	605a      	str	r2, [r3, #4]
 				bufferRed++;
 8000204:	4b4d      	ldr	r3, [pc, #308]	; (800033c <fsm_for_input_processing+0x1f0>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	3301      	adds	r3, #1
 800020a:	4a4c      	ldr	r2, [pc, #304]	; (800033c <fsm_for_input_processing+0x1f0>)
 800020c:	6013      	str	r3, [r2, #0]
 				if(bufferRed > 99){
 800020e:	4b4b      	ldr	r3, [pc, #300]	; (800033c <fsm_for_input_processing+0x1f0>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	2b63      	cmp	r3, #99	; 0x63
 8000214:	dd02      	ble.n	800021c <fsm_for_input_processing+0xd0>
 					bufferRed = 1;
 8000216:	4b49      	ldr	r3, [pc, #292]	; (800033c <fsm_for_input_processing+0x1f0>)
 8000218:	2201      	movs	r2, #1
 800021a:	601a      	str	r2, [r3, #0]
 				}
 			}
 			update_two_7SEG(bufferRed);
 800021c:	4b47      	ldr	r3, [pc, #284]	; (800033c <fsm_for_input_processing+0x1f0>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	4618      	mov	r0, r3
 8000222:	f000 fe2d 	bl	8000e80 <update_two_7SEG>
 			if(button_flag[2] == 1){
 8000226:	4b3d      	ldr	r3, [pc, #244]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000228:	689b      	ldr	r3, [r3, #8]
 800022a:	2b01      	cmp	r3, #1
 800022c:	d106      	bne.n	800023c <fsm_for_input_processing+0xf0>
 				button_flag[2] = 0;
 800022e:	4b3b      	ldr	r3, [pc, #236]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000230:	2200      	movs	r2, #0
 8000232:	609a      	str	r2, [r3, #8]
 				time_red = bufferRed;
 8000234:	4b41      	ldr	r3, [pc, #260]	; (800033c <fsm_for_input_processing+0x1f0>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a41      	ldr	r2, [pc, #260]	; (8000340 <fsm_for_input_processing+0x1f4>)
 800023a:	6013      	str	r3, [r2, #0]
 			}
 			if (button_flag[0]){
 800023c:	4b37      	ldr	r3, [pc, #220]	; (800031c <fsm_for_input_processing+0x1d0>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	2b00      	cmp	r3, #0
 8000242:	f000 80f2 	beq.w	800042a <fsm_for_input_processing+0x2de>
 				button_flag[0] = 0;
 8000246:	4b35      	ldr	r3, [pc, #212]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000248:	2200      	movs	r2, #0
 800024a:	601a      	str	r2, [r3, #0]
 				State = MODE3;
 800024c:	4b32      	ldr	r3, [pc, #200]	; (8000318 <fsm_for_input_processing+0x1cc>)
 800024e:	2203      	movs	r2, #3
 8000250:	601a      	str	r2, [r3, #0]
 				setTimer6(10000);
 8000252:	f242 7010 	movw	r0, #10000	; 0x2710
 8000256:	f001 f8eb 	bl	8001430 <setTimer6>
 			}
 			break;
 800025a:	e0e6      	b.n	800042a <fsm_for_input_processing+0x2de>
 		case MODE3:
			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 800025c:	4b2f      	ldr	r3, [pc, #188]	; (800031c <fsm_for_input_processing+0x1d0>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	2b01      	cmp	r3, #1
 8000262:	d007      	beq.n	8000274 <fsm_for_input_processing+0x128>
 8000264:	4b2d      	ldr	r3, [pc, #180]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000266:	685b      	ldr	r3, [r3, #4]
 8000268:	2b01      	cmp	r3, #1
 800026a:	d003      	beq.n	8000274 <fsm_for_input_processing+0x128>
 800026c:	4b2b      	ldr	r3, [pc, #172]	; (800031c <fsm_for_input_processing+0x1d0>)
 800026e:	689b      	ldr	r3, [r3, #8]
 8000270:	2b01      	cmp	r3, #1
 8000272:	d103      	bne.n	800027c <fsm_for_input_processing+0x130>
 				setTimer6(10000);
 8000274:	f242 7010 	movw	r0, #10000	; 0x2710
 8000278:	f001 f8da 	bl	8001430 <setTimer6>
 			}
 			if (timer_flag6 == 1){
 800027c:	4b28      	ldr	r3, [pc, #160]	; (8000320 <fsm_for_input_processing+0x1d4>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	2b01      	cmp	r3, #1
 8000282:	d114      	bne.n	80002ae <fsm_for_input_processing+0x162>
 				status1 = 1;
 8000284:	4b27      	ldr	r3, [pc, #156]	; (8000324 <fsm_for_input_processing+0x1d8>)
 8000286:	2201      	movs	r2, #1
 8000288:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 800028a:	4b27      	ldr	r3, [pc, #156]	; (8000328 <fsm_for_input_processing+0x1dc>)
 800028c:	2201      	movs	r2, #1
 800028e:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 8000290:	4b26      	ldr	r3, [pc, #152]	; (800032c <fsm_for_input_processing+0x1e0>)
 8000292:	2201      	movs	r2, #1
 8000294:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 8000296:	4b26      	ldr	r3, [pc, #152]	; (8000330 <fsm_for_input_processing+0x1e4>)
 8000298:	2201      	movs	r2, #1
 800029a:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 800029c:	4b25      	ldr	r3, [pc, #148]	; (8000334 <fsm_for_input_processing+0x1e8>)
 800029e:	2201      	movs	r2, #1
 80002a0:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 80002a2:	4b25      	ldr	r3, [pc, #148]	; (8000338 <fsm_for_input_processing+0x1ec>)
 80002a4:	2201      	movs	r2, #1
 80002a6:	601a      	str	r2, [r3, #0]
 				State = MODE1;
 80002a8:	4b1b      	ldr	r3, [pc, #108]	; (8000318 <fsm_for_input_processing+0x1cc>)
 80002aa:	2201      	movs	r2, #1
 80002ac:	601a      	str	r2, [r3, #0]
 			}
 			blink_led_amber();
 80002ae:	f000 fd3b 	bl	8000d28 <blink_led_amber>
 			if(button_flag[1] == 1){
 80002b2:	4b1a      	ldr	r3, [pc, #104]	; (800031c <fsm_for_input_processing+0x1d0>)
 80002b4:	685b      	ldr	r3, [r3, #4]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d10e      	bne.n	80002d8 <fsm_for_input_processing+0x18c>
 				button_flag[1] = 0;
 80002ba:	4b18      	ldr	r3, [pc, #96]	; (800031c <fsm_for_input_processing+0x1d0>)
 80002bc:	2200      	movs	r2, #0
 80002be:	605a      	str	r2, [r3, #4]
 				bufferAmber++;
 80002c0:	4b20      	ldr	r3, [pc, #128]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	3301      	adds	r3, #1
 80002c6:	4a1f      	ldr	r2, [pc, #124]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002c8:	6013      	str	r3, [r2, #0]
 				if(bufferAmber > 99){
 80002ca:	4b1e      	ldr	r3, [pc, #120]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	2b63      	cmp	r3, #99	; 0x63
 80002d0:	dd02      	ble.n	80002d8 <fsm_for_input_processing+0x18c>
 					bufferAmber = 1;
 80002d2:	4b1c      	ldr	r3, [pc, #112]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002d4:	2201      	movs	r2, #1
 80002d6:	601a      	str	r2, [r3, #0]
 				}
 			}
 			if(button_flag[2] == 1){
 80002d8:	4b10      	ldr	r3, [pc, #64]	; (800031c <fsm_for_input_processing+0x1d0>)
 80002da:	689b      	ldr	r3, [r3, #8]
 80002dc:	2b01      	cmp	r3, #1
 80002de:	d106      	bne.n	80002ee <fsm_for_input_processing+0x1a2>
 				button_flag[2] = 0;
 80002e0:	4b0e      	ldr	r3, [pc, #56]	; (800031c <fsm_for_input_processing+0x1d0>)
 80002e2:	2200      	movs	r2, #0
 80002e4:	609a      	str	r2, [r3, #8]
 				time_amber = bufferAmber;
 80002e6:	4b17      	ldr	r3, [pc, #92]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a17      	ldr	r2, [pc, #92]	; (8000348 <fsm_for_input_processing+0x1fc>)
 80002ec:	6013      	str	r3, [r2, #0]
 			}
 			update_two_7SEG(bufferAmber);
 80002ee:	4b15      	ldr	r3, [pc, #84]	; (8000344 <fsm_for_input_processing+0x1f8>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4618      	mov	r0, r3
 80002f4:	f000 fdc4 	bl	8000e80 <update_two_7SEG>
 			if (button_flag[0]){
 80002f8:	4b08      	ldr	r3, [pc, #32]	; (800031c <fsm_for_input_processing+0x1d0>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	f000 8096 	beq.w	800042e <fsm_for_input_processing+0x2e2>
 					button_flag[0] = 0;
 8000302:	4b06      	ldr	r3, [pc, #24]	; (800031c <fsm_for_input_processing+0x1d0>)
 8000304:	2200      	movs	r2, #0
 8000306:	601a      	str	r2, [r3, #0]
 					setTimer6(10000);
 8000308:	f242 7010 	movw	r0, #10000	; 0x2710
 800030c:	f001 f890 	bl	8001430 <setTimer6>
 					State = MODE4;
 8000310:	4b01      	ldr	r3, [pc, #4]	; (8000318 <fsm_for_input_processing+0x1cc>)
 8000312:	2204      	movs	r2, #4
 8000314:	601a      	str	r2, [r3, #0]
 			}
 			break;
 8000316:	e08a      	b.n	800042e <fsm_for_input_processing+0x2e2>
 8000318:	2000001c 	.word	0x2000001c
 800031c:	2000009c 	.word	0x2000009c
 8000320:	200000c0 	.word	0x200000c0
 8000324:	20000000 	.word	0x20000000
 8000328:	20000004 	.word	0x20000004
 800032c:	20000008 	.word	0x20000008
 8000330:	2000000c 	.word	0x2000000c
 8000334:	20000010 	.word	0x20000010
 8000338:	20000014 	.word	0x20000014
 800033c:	2000002c 	.word	0x2000002c
 8000340:	20000020 	.word	0x20000020
 8000344:	20000030 	.word	0x20000030
 8000348:	20000024 	.word	0x20000024
 		case MODE4:
			if(button_flag[0] == 1 || button_flag[1] == 1 || button_flag[2] == 1 ){
 800034c:	4b3a      	ldr	r3, [pc, #232]	; (8000438 <fsm_for_input_processing+0x2ec>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	2b01      	cmp	r3, #1
 8000352:	d007      	beq.n	8000364 <fsm_for_input_processing+0x218>
 8000354:	4b38      	ldr	r3, [pc, #224]	; (8000438 <fsm_for_input_processing+0x2ec>)
 8000356:	685b      	ldr	r3, [r3, #4]
 8000358:	2b01      	cmp	r3, #1
 800035a:	d003      	beq.n	8000364 <fsm_for_input_processing+0x218>
 800035c:	4b36      	ldr	r3, [pc, #216]	; (8000438 <fsm_for_input_processing+0x2ec>)
 800035e:	689b      	ldr	r3, [r3, #8]
 8000360:	2b01      	cmp	r3, #1
 8000362:	d103      	bne.n	800036c <fsm_for_input_processing+0x220>
 				setTimer6(10000);
 8000364:	f242 7010 	movw	r0, #10000	; 0x2710
 8000368:	f001 f862 	bl	8001430 <setTimer6>
 			}
 			if (timer_flag6 == 1){
 800036c:	4b33      	ldr	r3, [pc, #204]	; (800043c <fsm_for_input_processing+0x2f0>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	2b01      	cmp	r3, #1
 8000372:	d114      	bne.n	800039e <fsm_for_input_processing+0x252>
 				status1 = 1;
 8000374:	4b32      	ldr	r3, [pc, #200]	; (8000440 <fsm_for_input_processing+0x2f4>)
 8000376:	2201      	movs	r2, #1
 8000378:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 800037a:	4b32      	ldr	r3, [pc, #200]	; (8000444 <fsm_for_input_processing+0x2f8>)
 800037c:	2201      	movs	r2, #1
 800037e:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 8000380:	4b31      	ldr	r3, [pc, #196]	; (8000448 <fsm_for_input_processing+0x2fc>)
 8000382:	2201      	movs	r2, #1
 8000384:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 8000386:	4b31      	ldr	r3, [pc, #196]	; (800044c <fsm_for_input_processing+0x300>)
 8000388:	2201      	movs	r2, #1
 800038a:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 800038c:	4b30      	ldr	r3, [pc, #192]	; (8000450 <fsm_for_input_processing+0x304>)
 800038e:	2201      	movs	r2, #1
 8000390:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 8000392:	4b30      	ldr	r3, [pc, #192]	; (8000454 <fsm_for_input_processing+0x308>)
 8000394:	2201      	movs	r2, #1
 8000396:	601a      	str	r2, [r3, #0]
 				State = MODE1;
 8000398:	4b2f      	ldr	r3, [pc, #188]	; (8000458 <fsm_for_input_processing+0x30c>)
 800039a:	2201      	movs	r2, #1
 800039c:	601a      	str	r2, [r3, #0]
 			}
 			blink_led_green();
 800039e:	f000 fd19 	bl	8000dd4 <blink_led_green>
 			if(button_flag[1] == 1){
 80003a2:	4b25      	ldr	r3, [pc, #148]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003a4:	685b      	ldr	r3, [r3, #4]
 80003a6:	2b01      	cmp	r3, #1
 80003a8:	d10e      	bne.n	80003c8 <fsm_for_input_processing+0x27c>
 				button_flag[1] = 0;
 80003aa:	4b23      	ldr	r3, [pc, #140]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003ac:	2200      	movs	r2, #0
 80003ae:	605a      	str	r2, [r3, #4]
 				bufferGreen++;
 80003b0:	4b2a      	ldr	r3, [pc, #168]	; (800045c <fsm_for_input_processing+0x310>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	3301      	adds	r3, #1
 80003b6:	4a29      	ldr	r2, [pc, #164]	; (800045c <fsm_for_input_processing+0x310>)
 80003b8:	6013      	str	r3, [r2, #0]
 				if(bufferGreen > 99){
 80003ba:	4b28      	ldr	r3, [pc, #160]	; (800045c <fsm_for_input_processing+0x310>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	2b63      	cmp	r3, #99	; 0x63
 80003c0:	dd02      	ble.n	80003c8 <fsm_for_input_processing+0x27c>
 					bufferGreen = 1;
 80003c2:	4b26      	ldr	r3, [pc, #152]	; (800045c <fsm_for_input_processing+0x310>)
 80003c4:	2201      	movs	r2, #1
 80003c6:	601a      	str	r2, [r3, #0]
 				}
 			}
 			update_two_7SEG(bufferGreen);
 80003c8:	4b24      	ldr	r3, [pc, #144]	; (800045c <fsm_for_input_processing+0x310>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4618      	mov	r0, r3
 80003ce:	f000 fd57 	bl	8000e80 <update_two_7SEG>
 			if(button_flag[2] == 1){
 80003d2:	4b19      	ldr	r3, [pc, #100]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003d4:	689b      	ldr	r3, [r3, #8]
 80003d6:	2b01      	cmp	r3, #1
 80003d8:	d106      	bne.n	80003e8 <fsm_for_input_processing+0x29c>
 				button_flag[2] = 0;
 80003da:	4b17      	ldr	r3, [pc, #92]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003dc:	2200      	movs	r2, #0
 80003de:	609a      	str	r2, [r3, #8]
 				time_green = bufferGreen;
 80003e0:	4b1e      	ldr	r3, [pc, #120]	; (800045c <fsm_for_input_processing+0x310>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4a1e      	ldr	r2, [pc, #120]	; (8000460 <fsm_for_input_processing+0x314>)
 80003e6:	6013      	str	r3, [r2, #0]
 			}
 			if(button_flag[0]){
 80003e8:	4b13      	ldr	r3, [pc, #76]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d020      	beq.n	8000432 <fsm_for_input_processing+0x2e6>
 				button_flag[0] = 0;
 80003f0:	4b11      	ldr	r3, [pc, #68]	; (8000438 <fsm_for_input_processing+0x2ec>)
 80003f2:	2200      	movs	r2, #0
 80003f4:	601a      	str	r2, [r3, #0]
 				State = MODE1;
 80003f6:	4b18      	ldr	r3, [pc, #96]	; (8000458 <fsm_for_input_processing+0x30c>)
 80003f8:	2201      	movs	r2, #1
 80003fa:	601a      	str	r2, [r3, #0]
 				status1 = 1;
 80003fc:	4b10      	ldr	r3, [pc, #64]	; (8000440 <fsm_for_input_processing+0x2f4>)
 80003fe:	2201      	movs	r2, #1
 8000400:	601a      	str	r2, [r3, #0]
 				status2 = 1;
 8000402:	4b10      	ldr	r3, [pc, #64]	; (8000444 <fsm_for_input_processing+0x2f8>)
 8000404:	2201      	movs	r2, #1
 8000406:	601a      	str	r2, [r3, #0]
 				status3 = 1;
 8000408:	4b0f      	ldr	r3, [pc, #60]	; (8000448 <fsm_for_input_processing+0x2fc>)
 800040a:	2201      	movs	r2, #1
 800040c:	601a      	str	r2, [r3, #0]
 				status4 = 1;
 800040e:	4b0f      	ldr	r3, [pc, #60]	; (800044c <fsm_for_input_processing+0x300>)
 8000410:	2201      	movs	r2, #1
 8000412:	601a      	str	r2, [r3, #0]
 				status4_1 = 1;
 8000414:	4b0e      	ldr	r3, [pc, #56]	; (8000450 <fsm_for_input_processing+0x304>)
 8000416:	2201      	movs	r2, #1
 8000418:	601a      	str	r2, [r3, #0]
 				status4_2 = 1;
 800041a:	4b0e      	ldr	r3, [pc, #56]	; (8000454 <fsm_for_input_processing+0x308>)
 800041c:	2201      	movs	r2, #1
 800041e:	601a      	str	r2, [r3, #0]
 			}
 			break;
 8000420:	e007      	b.n	8000432 <fsm_for_input_processing+0x2e6>
 		default:
 			break;
 8000422:	bf00      	nop
 8000424:	e006      	b.n	8000434 <fsm_for_input_processing+0x2e8>
 			break;
 8000426:	bf00      	nop
 8000428:	e004      	b.n	8000434 <fsm_for_input_processing+0x2e8>
 			break;
 800042a:	bf00      	nop
 800042c:	e002      	b.n	8000434 <fsm_for_input_processing+0x2e8>
 			break;
 800042e:	bf00      	nop
 8000430:	e000      	b.n	8000434 <fsm_for_input_processing+0x2e8>
 			break;
 8000432:	bf00      	nop
 	}
 }
 8000434:	bf00      	nop
 8000436:	bd80      	pop	{r7, pc}
 8000438:	2000009c 	.word	0x2000009c
 800043c:	200000c0 	.word	0x200000c0
 8000440:	20000000 	.word	0x20000000
 8000444:	20000004 	.word	0x20000004
 8000448:	20000008 	.word	0x20000008
 800044c:	2000000c 	.word	0x2000000c
 8000450:	20000010 	.word	0x20000010
 8000454:	20000014 	.word	0x20000014
 8000458:	2000001c 	.word	0x2000001c
 800045c:	20000034 	.word	0x20000034
 8000460:	20000028 	.word	0x20000028

08000464 <subKeyProcess>:


int button_flag[3] = {0,0,0};
int TimeOutForKeyPress[3] = {500,50,500};

void subKeyProcess(int index){
 8000464:	b480      	push	{r7}
 8000466:	b083      	sub	sp, #12
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
	//TODO
	button_flag[index] = 1;
 800046c:	4a04      	ldr	r2, [pc, #16]	; (8000480 <subKeyProcess+0x1c>)
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	2101      	movs	r1, #1
 8000472:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000476:	bf00      	nop
 8000478:	370c      	adds	r7, #12
 800047a:	46bd      	mov	sp, r7
 800047c:	bc80      	pop	{r7}
 800047e:	4770      	bx	lr
 8000480:	2000009c 	.word	0x2000009c

08000484 <getKeyInput>:

void getKeyInput(){
 8000484:	b580      	push	{r7, lr}
 8000486:	b082      	sub	sp, #8
 8000488:	af00      	add	r7, sp, #0
	for(int i = 0;i<3;i++){
 800048a:	2300      	movs	r3, #0
 800048c:	607b      	str	r3, [r7, #4]
 800048e:	e08f      	b.n	80005b0 <getKeyInput+0x12c>
		KeyReg2[i] = KeyReg1[i];
 8000490:	4a4c      	ldr	r2, [pc, #304]	; (80005c4 <getKeyInput+0x140>)
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000498:	494b      	ldr	r1, [pc, #300]	; (80005c8 <getKeyInput+0x144>)
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		KeyReg1[i] = KeyReg0[i];
 80004a0:	4a4a      	ldr	r2, [pc, #296]	; (80005cc <getKeyInput+0x148>)
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004a8:	4946      	ldr	r1, [pc, #280]	; (80005c4 <getKeyInput+0x140>)
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		if(i == 0){
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	2b00      	cmp	r3, #0
 80004b4:	d10a      	bne.n	80004cc <getKeyInput+0x48>
			KeyReg0[i] = HAL_GPIO_ReadPin(button1_GPIO_Port, button1_Pin);
 80004b6:	2180      	movs	r1, #128	; 0x80
 80004b8:	4845      	ldr	r0, [pc, #276]	; (80005d0 <getKeyInput+0x14c>)
 80004ba:	f001 fcd1 	bl	8001e60 <HAL_GPIO_ReadPin>
 80004be:	4603      	mov	r3, r0
 80004c0:	4619      	mov	r1, r3
 80004c2:	4a42      	ldr	r2, [pc, #264]	; (80005cc <getKeyInput+0x148>)
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80004ca:	e01c      	b.n	8000506 <getKeyInput+0x82>
		}
		else if(i == 1){
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	2b01      	cmp	r3, #1
 80004d0:	d10b      	bne.n	80004ea <getKeyInput+0x66>
			KeyReg0[i] = HAL_GPIO_ReadPin(button2_GPIO_Port, button2_Pin);
 80004d2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004d6:	483e      	ldr	r0, [pc, #248]	; (80005d0 <getKeyInput+0x14c>)
 80004d8:	f001 fcc2 	bl	8001e60 <HAL_GPIO_ReadPin>
 80004dc:	4603      	mov	r3, r0
 80004de:	4619      	mov	r1, r3
 80004e0:	4a3a      	ldr	r2, [pc, #232]	; (80005cc <getKeyInput+0x148>)
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80004e8:	e00d      	b.n	8000506 <getKeyInput+0x82>
		}
		else if (i == 2){
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	2b02      	cmp	r3, #2
 80004ee:	d10a      	bne.n	8000506 <getKeyInput+0x82>
			KeyReg0[i] = HAL_GPIO_ReadPin(button3_GPIO_Port, button3_Pin);
 80004f0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80004f4:	4836      	ldr	r0, [pc, #216]	; (80005d0 <getKeyInput+0x14c>)
 80004f6:	f001 fcb3 	bl	8001e60 <HAL_GPIO_ReadPin>
 80004fa:	4603      	mov	r3, r0
 80004fc:	4619      	mov	r1, r3
 80004fe:	4a33      	ldr	r2, [pc, #204]	; (80005cc <getKeyInput+0x148>)
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		}
		if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
 8000506:	4a2f      	ldr	r2, [pc, #188]	; (80005c4 <getKeyInput+0x140>)
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800050e:	492f      	ldr	r1, [pc, #188]	; (80005cc <getKeyInput+0x148>)
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000516:	429a      	cmp	r2, r3
 8000518:	d147      	bne.n	80005aa <getKeyInput+0x126>
 800051a:	4a2a      	ldr	r2, [pc, #168]	; (80005c4 <getKeyInput+0x140>)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000522:	4929      	ldr	r1, [pc, #164]	; (80005c8 <getKeyInput+0x144>)
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800052a:	429a      	cmp	r2, r3
 800052c:	d13d      	bne.n	80005aa <getKeyInput+0x126>
			if (KeyReg2[i] != KeyReg3[i]){
 800052e:	4a26      	ldr	r2, [pc, #152]	; (80005c8 <getKeyInput+0x144>)
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000536:	4927      	ldr	r1, [pc, #156]	; (80005d4 <getKeyInput+0x150>)
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800053e:	429a      	cmp	r2, r3
 8000540:	d019      	beq.n	8000576 <getKeyInput+0xf2>
			  KeyReg3[i] = KeyReg2[i];
 8000542:	4a21      	ldr	r2, [pc, #132]	; (80005c8 <getKeyInput+0x144>)
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800054a:	4922      	ldr	r1, [pc, #136]	; (80005d4 <getKeyInput+0x150>)
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			  if (KeyReg3[i] == PRESSED_STATE){
 8000552:	4a20      	ldr	r2, [pc, #128]	; (80005d4 <getKeyInput+0x150>)
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800055a:	2b00      	cmp	r3, #0
 800055c:	d125      	bne.n	80005aa <getKeyInput+0x126>
				  if(i == 1){
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	2b01      	cmp	r3, #1
 8000562:	d104      	bne.n	800056e <getKeyInput+0xea>
					  TimeOutForKeyPress[i] = 50;
 8000564:	4a1c      	ldr	r2, [pc, #112]	; (80005d8 <getKeyInput+0x154>)
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	2132      	movs	r1, #50	; 0x32
 800056a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				  }
				  subKeyProcess(i);
 800056e:	6878      	ldr	r0, [r7, #4]
 8000570:	f7ff ff78 	bl	8000464 <subKeyProcess>
 8000574:	e019      	b.n	80005aa <getKeyInput+0x126>
			  }
			}
			else{
				 if (i == 1) TimeOutForKeyPress[i]--;
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	2b01      	cmp	r3, #1
 800057a:	d108      	bne.n	800058e <getKeyInput+0x10a>
 800057c:	4a16      	ldr	r2, [pc, #88]	; (80005d8 <getKeyInput+0x154>)
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000584:	1e5a      	subs	r2, r3, #1
 8000586:	4914      	ldr	r1, [pc, #80]	; (80005d8 <getKeyInput+0x154>)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 if (i == 1 && TimeOutForKeyPress[i] == 0){
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	2b01      	cmp	r3, #1
 8000592:	d10a      	bne.n	80005aa <getKeyInput+0x126>
 8000594:	4a10      	ldr	r2, [pc, #64]	; (80005d8 <getKeyInput+0x154>)
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800059c:	2b00      	cmp	r3, #0
 800059e:	d104      	bne.n	80005aa <getKeyInput+0x126>
					 KeyReg3[i] = NORMAL_STATE;
 80005a0:	4a0c      	ldr	r2, [pc, #48]	; (80005d4 <getKeyInput+0x150>)
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	2101      	movs	r1, #1
 80005a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0;i<3;i++){
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	3301      	adds	r3, #1
 80005ae:	607b      	str	r3, [r7, #4]
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	2b02      	cmp	r3, #2
 80005b4:	f77f af6c 	ble.w	8000490 <getKeyInput+0xc>
				}
			}
		}
	}
}
 80005b8:	bf00      	nop
 80005ba:	bf00      	nop
 80005bc:	3708      	adds	r7, #8
 80005be:	46bd      	mov	sp, r7
 80005c0:	bd80      	pop	{r7, pc}
 80005c2:	bf00      	nop
 80005c4:	20000044 	.word	0x20000044
 80005c8:	20000050 	.word	0x20000050
 80005cc:	20000038 	.word	0x20000038
 80005d0:	40010800 	.word	0x40010800
 80005d4:	2000005c 	.word	0x2000005c
 80005d8:	20000068 	.word	0x20000068

080005dc <clear_led>:
#include "led_display.h"
#include "trafficLight.h"
#include"timer.h"
#include "global.h"

void clear_led(){
 80005dc:	b580      	push	{r7, lr}
 80005de:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 80005e0:	2201      	movs	r2, #1
 80005e2:	2104      	movs	r1, #4
 80005e4:	480e      	ldr	r0, [pc, #56]	; (8000620 <clear_led+0x44>)
 80005e6:	f001 fc52 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 80005ea:	2201      	movs	r2, #1
 80005ec:	2120      	movs	r1, #32
 80005ee:	480c      	ldr	r0, [pc, #48]	; (8000620 <clear_led+0x44>)
 80005f0:	f001 fc4d 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 80005f4:	2201      	movs	r2, #1
 80005f6:	2108      	movs	r1, #8
 80005f8:	4809      	ldr	r0, [pc, #36]	; (8000620 <clear_led+0x44>)
 80005fa:	f001 fc48 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 80005fe:	2201      	movs	r2, #1
 8000600:	2140      	movs	r1, #64	; 0x40
 8000602:	4807      	ldr	r0, [pc, #28]	; (8000620 <clear_led+0x44>)
 8000604:	f001 fc43 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 8000608:	2201      	movs	r2, #1
 800060a:	2102      	movs	r1, #2
 800060c:	4804      	ldr	r0, [pc, #16]	; (8000620 <clear_led+0x44>)
 800060e:	f001 fc3e 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 8000612:	2201      	movs	r2, #1
 8000614:	2110      	movs	r1, #16
 8000616:	4802      	ldr	r0, [pc, #8]	; (8000620 <clear_led+0x44>)
 8000618:	f001 fc39 	bl	8001e8e <HAL_GPIO_WritePin>
}
 800061c:	bf00      	nop
 800061e:	bd80      	pop	{r7, pc}
 8000620:	40010800 	.word	0x40010800

08000624 <state_7seg1>:
void state_7seg1(int a ,int b , int c , int d , int e ,int f, int g){
 8000624:	b580      	push	{r7, lr}
 8000626:	b084      	sub	sp, #16
 8000628:	af00      	add	r7, sp, #0
 800062a:	60f8      	str	r0, [r7, #12]
 800062c:	60b9      	str	r1, [r7, #8]
 800062e:	607a      	str	r2, [r7, #4]
 8000630:	603b      	str	r3, [r7, #0]
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2,a);
 8000632:	68fb      	ldr	r3, [r7, #12]
 8000634:	b2db      	uxtb	r3, r3
 8000636:	461a      	mov	r2, r3
 8000638:	2104      	movs	r1, #4
 800063a:	4819      	ldr	r0, [pc, #100]	; (80006a0 <state_7seg1+0x7c>)
 800063c:	f001 fc27 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3,b);
 8000640:	68bb      	ldr	r3, [r7, #8]
 8000642:	b2db      	uxtb	r3, r3
 8000644:	461a      	mov	r2, r3
 8000646:	2108      	movs	r1, #8
 8000648:	4815      	ldr	r0, [pc, #84]	; (80006a0 <state_7seg1+0x7c>)
 800064a:	f001 fc20 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4,c);
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	b2db      	uxtb	r3, r3
 8000652:	461a      	mov	r2, r3
 8000654:	2110      	movs	r1, #16
 8000656:	4812      	ldr	r0, [pc, #72]	; (80006a0 <state_7seg1+0x7c>)
 8000658:	f001 fc19 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5,d);
 800065c:	683b      	ldr	r3, [r7, #0]
 800065e:	b2db      	uxtb	r3, r3
 8000660:	461a      	mov	r2, r3
 8000662:	2120      	movs	r1, #32
 8000664:	480e      	ldr	r0, [pc, #56]	; (80006a0 <state_7seg1+0x7c>)
 8000666:	f001 fc12 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6,e);
 800066a:	69bb      	ldr	r3, [r7, #24]
 800066c:	b2db      	uxtb	r3, r3
 800066e:	461a      	mov	r2, r3
 8000670:	2140      	movs	r1, #64	; 0x40
 8000672:	480b      	ldr	r0, [pc, #44]	; (80006a0 <state_7seg1+0x7c>)
 8000674:	f001 fc0b 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7,f);
 8000678:	69fb      	ldr	r3, [r7, #28]
 800067a:	b2db      	uxtb	r3, r3
 800067c:	461a      	mov	r2, r3
 800067e:	2180      	movs	r1, #128	; 0x80
 8000680:	4807      	ldr	r0, [pc, #28]	; (80006a0 <state_7seg1+0x7c>)
 8000682:	f001 fc04 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8,g);
 8000686:	6a3b      	ldr	r3, [r7, #32]
 8000688:	b2db      	uxtb	r3, r3
 800068a:	461a      	mov	r2, r3
 800068c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000690:	4803      	ldr	r0, [pc, #12]	; (80006a0 <state_7seg1+0x7c>)
 8000692:	f001 fbfc 	bl	8001e8e <HAL_GPIO_WritePin>
 }
 8000696:	bf00      	nop
 8000698:	3710      	adds	r7, #16
 800069a:	46bd      	mov	sp, r7
 800069c:	bd80      	pop	{r7, pc}
 800069e:	bf00      	nop
 80006a0:	40010c00 	.word	0x40010c00

080006a4 <display7SEG1>:
void display7SEG1(int num){
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b086      	sub	sp, #24
 80006a8:	af04      	add	r7, sp, #16
 80006aa:	6078      	str	r0, [r7, #4]
	 if (num == 0){
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	d10c      	bne.n	80006cc <display7SEG1+0x28>
		state_7seg1(0,0,0,0,0,0,1);
 80006b2:	2301      	movs	r3, #1
 80006b4:	9302      	str	r3, [sp, #8]
 80006b6:	2300      	movs	r3, #0
 80006b8:	9301      	str	r3, [sp, #4]
 80006ba:	2300      	movs	r3, #0
 80006bc:	9300      	str	r3, [sp, #0]
 80006be:	2300      	movs	r3, #0
 80006c0:	2200      	movs	r2, #0
 80006c2:	2100      	movs	r1, #0
 80006c4:	2000      	movs	r0, #0
 80006c6:	f7ff ffad 	bl	8000624 <state_7seg1>
		 state_7seg1(0,0,0,0,1,0,0);
	 }
	 else if(num >= 10){
		 state_7seg1(0,0,0,0,0,0,1);
	 }
}
 80006ca:	e09e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 1){
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	2b01      	cmp	r3, #1
 80006d0:	d10c      	bne.n	80006ec <display7SEG1+0x48>
		 state_7seg1(1,0,0,1,1,1,1);
 80006d2:	2301      	movs	r3, #1
 80006d4:	9302      	str	r3, [sp, #8]
 80006d6:	2301      	movs	r3, #1
 80006d8:	9301      	str	r3, [sp, #4]
 80006da:	2301      	movs	r3, #1
 80006dc:	9300      	str	r3, [sp, #0]
 80006de:	2301      	movs	r3, #1
 80006e0:	2200      	movs	r2, #0
 80006e2:	2100      	movs	r1, #0
 80006e4:	2001      	movs	r0, #1
 80006e6:	f7ff ff9d 	bl	8000624 <state_7seg1>
}
 80006ea:	e08e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 2){
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	2b02      	cmp	r3, #2
 80006f0:	d10c      	bne.n	800070c <display7SEG1+0x68>
		 state_7seg1(0,0,1,0,0,1,0);
 80006f2:	2300      	movs	r3, #0
 80006f4:	9302      	str	r3, [sp, #8]
 80006f6:	2301      	movs	r3, #1
 80006f8:	9301      	str	r3, [sp, #4]
 80006fa:	2300      	movs	r3, #0
 80006fc:	9300      	str	r3, [sp, #0]
 80006fe:	2300      	movs	r3, #0
 8000700:	2201      	movs	r2, #1
 8000702:	2100      	movs	r1, #0
 8000704:	2000      	movs	r0, #0
 8000706:	f7ff ff8d 	bl	8000624 <state_7seg1>
}
 800070a:	e07e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 3){
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	2b03      	cmp	r3, #3
 8000710:	d10c      	bne.n	800072c <display7SEG1+0x88>
		 state_7seg1(0,0,0,0,1,1,0);
 8000712:	2300      	movs	r3, #0
 8000714:	9302      	str	r3, [sp, #8]
 8000716:	2301      	movs	r3, #1
 8000718:	9301      	str	r3, [sp, #4]
 800071a:	2301      	movs	r3, #1
 800071c:	9300      	str	r3, [sp, #0]
 800071e:	2300      	movs	r3, #0
 8000720:	2200      	movs	r2, #0
 8000722:	2100      	movs	r1, #0
 8000724:	2000      	movs	r0, #0
 8000726:	f7ff ff7d 	bl	8000624 <state_7seg1>
}
 800072a:	e06e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 4){
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	2b04      	cmp	r3, #4
 8000730:	d10c      	bne.n	800074c <display7SEG1+0xa8>
		 state_7seg1(1,0,0,1,1,0,0);
 8000732:	2300      	movs	r3, #0
 8000734:	9302      	str	r3, [sp, #8]
 8000736:	2300      	movs	r3, #0
 8000738:	9301      	str	r3, [sp, #4]
 800073a:	2301      	movs	r3, #1
 800073c:	9300      	str	r3, [sp, #0]
 800073e:	2301      	movs	r3, #1
 8000740:	2200      	movs	r2, #0
 8000742:	2100      	movs	r1, #0
 8000744:	2001      	movs	r0, #1
 8000746:	f7ff ff6d 	bl	8000624 <state_7seg1>
}
 800074a:	e05e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 5){
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	2b05      	cmp	r3, #5
 8000750:	d10c      	bne.n	800076c <display7SEG1+0xc8>
		 state_7seg1(0,1,0,0,1,0,0);
 8000752:	2300      	movs	r3, #0
 8000754:	9302      	str	r3, [sp, #8]
 8000756:	2300      	movs	r3, #0
 8000758:	9301      	str	r3, [sp, #4]
 800075a:	2301      	movs	r3, #1
 800075c:	9300      	str	r3, [sp, #0]
 800075e:	2300      	movs	r3, #0
 8000760:	2200      	movs	r2, #0
 8000762:	2101      	movs	r1, #1
 8000764:	2000      	movs	r0, #0
 8000766:	f7ff ff5d 	bl	8000624 <state_7seg1>
}
 800076a:	e04e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 6){
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	2b06      	cmp	r3, #6
 8000770:	d10c      	bne.n	800078c <display7SEG1+0xe8>
		 state_7seg1(0,1,0,0,0,0,0);
 8000772:	2300      	movs	r3, #0
 8000774:	9302      	str	r3, [sp, #8]
 8000776:	2300      	movs	r3, #0
 8000778:	9301      	str	r3, [sp, #4]
 800077a:	2300      	movs	r3, #0
 800077c:	9300      	str	r3, [sp, #0]
 800077e:	2300      	movs	r3, #0
 8000780:	2200      	movs	r2, #0
 8000782:	2101      	movs	r1, #1
 8000784:	2000      	movs	r0, #0
 8000786:	f7ff ff4d 	bl	8000624 <state_7seg1>
}
 800078a:	e03e      	b.n	800080a <display7SEG1+0x166>
	 else if(num == 7){
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	2b07      	cmp	r3, #7
 8000790:	d10c      	bne.n	80007ac <display7SEG1+0x108>
		 state_7seg1(0,0,0,1,1,1,1);
 8000792:	2301      	movs	r3, #1
 8000794:	9302      	str	r3, [sp, #8]
 8000796:	2301      	movs	r3, #1
 8000798:	9301      	str	r3, [sp, #4]
 800079a:	2301      	movs	r3, #1
 800079c:	9300      	str	r3, [sp, #0]
 800079e:	2301      	movs	r3, #1
 80007a0:	2200      	movs	r2, #0
 80007a2:	2100      	movs	r1, #0
 80007a4:	2000      	movs	r0, #0
 80007a6:	f7ff ff3d 	bl	8000624 <state_7seg1>
}
 80007aa:	e02e      	b.n	800080a <display7SEG1+0x166>
	 else if (num == 8){
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	2b08      	cmp	r3, #8
 80007b0:	d10c      	bne.n	80007cc <display7SEG1+0x128>
		 state_7seg1(0,0,0,0,0,0,0);
 80007b2:	2300      	movs	r3, #0
 80007b4:	9302      	str	r3, [sp, #8]
 80007b6:	2300      	movs	r3, #0
 80007b8:	9301      	str	r3, [sp, #4]
 80007ba:	2300      	movs	r3, #0
 80007bc:	9300      	str	r3, [sp, #0]
 80007be:	2300      	movs	r3, #0
 80007c0:	2200      	movs	r2, #0
 80007c2:	2100      	movs	r1, #0
 80007c4:	2000      	movs	r0, #0
 80007c6:	f7ff ff2d 	bl	8000624 <state_7seg1>
}
 80007ca:	e01e      	b.n	800080a <display7SEG1+0x166>
	 else if(num == 9){
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	2b09      	cmp	r3, #9
 80007d0:	d10c      	bne.n	80007ec <display7SEG1+0x148>
		 state_7seg1(0,0,0,0,1,0,0);
 80007d2:	2300      	movs	r3, #0
 80007d4:	9302      	str	r3, [sp, #8]
 80007d6:	2300      	movs	r3, #0
 80007d8:	9301      	str	r3, [sp, #4]
 80007da:	2301      	movs	r3, #1
 80007dc:	9300      	str	r3, [sp, #0]
 80007de:	2300      	movs	r3, #0
 80007e0:	2200      	movs	r2, #0
 80007e2:	2100      	movs	r1, #0
 80007e4:	2000      	movs	r0, #0
 80007e6:	f7ff ff1d 	bl	8000624 <state_7seg1>
}
 80007ea:	e00e      	b.n	800080a <display7SEG1+0x166>
	 else if(num >= 10){
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	2b09      	cmp	r3, #9
 80007f0:	dd0b      	ble.n	800080a <display7SEG1+0x166>
		 state_7seg1(0,0,0,0,0,0,1);
 80007f2:	2301      	movs	r3, #1
 80007f4:	9302      	str	r3, [sp, #8]
 80007f6:	2300      	movs	r3, #0
 80007f8:	9301      	str	r3, [sp, #4]
 80007fa:	2300      	movs	r3, #0
 80007fc:	9300      	str	r3, [sp, #0]
 80007fe:	2300      	movs	r3, #0
 8000800:	2200      	movs	r2, #0
 8000802:	2100      	movs	r1, #0
 8000804:	2000      	movs	r0, #0
 8000806:	f7ff ff0d 	bl	8000624 <state_7seg1>
}
 800080a:	bf00      	nop
 800080c:	3708      	adds	r7, #8
 800080e:	46bd      	mov	sp, r7
 8000810:	bd80      	pop	{r7, pc}
	...

08000814 <state_7seg2>:

void state_7seg2(int a ,int b , int c , int d , int e ,int f, int g){
 8000814:	b580      	push	{r7, lr}
 8000816:	b084      	sub	sp, #16
 8000818:	af00      	add	r7, sp, #0
 800081a:	60f8      	str	r0, [r7, #12]
 800081c:	60b9      	str	r1, [r7, #8]
 800081e:	607a      	str	r2, [r7, #4]
 8000820:	603b      	str	r3, [r7, #0]
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9,a);
 8000822:	68fb      	ldr	r3, [r7, #12]
 8000824:	b2db      	uxtb	r3, r3
 8000826:	461a      	mov	r2, r3
 8000828:	f44f 7100 	mov.w	r1, #512	; 0x200
 800082c:	481b      	ldr	r0, [pc, #108]	; (800089c <state_7seg2+0x88>)
 800082e:	f001 fb2e 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10,b);
 8000832:	68bb      	ldr	r3, [r7, #8]
 8000834:	b2db      	uxtb	r3, r3
 8000836:	461a      	mov	r2, r3
 8000838:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800083c:	4817      	ldr	r0, [pc, #92]	; (800089c <state_7seg2+0x88>)
 800083e:	f001 fb26 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11,c);
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	b2db      	uxtb	r3, r3
 8000846:	461a      	mov	r2, r3
 8000848:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800084c:	4813      	ldr	r0, [pc, #76]	; (800089c <state_7seg2+0x88>)
 800084e:	f001 fb1e 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12,d);
 8000852:	683b      	ldr	r3, [r7, #0]
 8000854:	b2db      	uxtb	r3, r3
 8000856:	461a      	mov	r2, r3
 8000858:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800085c:	480f      	ldr	r0, [pc, #60]	; (800089c <state_7seg2+0x88>)
 800085e:	f001 fb16 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13,e);
 8000862:	69bb      	ldr	r3, [r7, #24]
 8000864:	b2db      	uxtb	r3, r3
 8000866:	461a      	mov	r2, r3
 8000868:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800086c:	480b      	ldr	r0, [pc, #44]	; (800089c <state_7seg2+0x88>)
 800086e:	f001 fb0e 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,f);
 8000872:	69fb      	ldr	r3, [r7, #28]
 8000874:	b2db      	uxtb	r3, r3
 8000876:	461a      	mov	r2, r3
 8000878:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800087c:	4807      	ldr	r0, [pc, #28]	; (800089c <state_7seg2+0x88>)
 800087e:	f001 fb06 	bl	8001e8e <HAL_GPIO_WritePin>
	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15,g);
 8000882:	6a3b      	ldr	r3, [r7, #32]
 8000884:	b2db      	uxtb	r3, r3
 8000886:	461a      	mov	r2, r3
 8000888:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800088c:	4803      	ldr	r0, [pc, #12]	; (800089c <state_7seg2+0x88>)
 800088e:	f001 fafe 	bl	8001e8e <HAL_GPIO_WritePin>
 }
 8000892:	bf00      	nop
 8000894:	3710      	adds	r7, #16
 8000896:	46bd      	mov	sp, r7
 8000898:	bd80      	pop	{r7, pc}
 800089a:	bf00      	nop
 800089c:	40010c00 	.word	0x40010c00

080008a0 <display7SEG2>:
void display7SEG2(int num){
 80008a0:	b580      	push	{r7, lr}
 80008a2:	b086      	sub	sp, #24
 80008a4:	af04      	add	r7, sp, #16
 80008a6:	6078      	str	r0, [r7, #4]
	 if (num == 0){
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d10b      	bne.n	80008c6 <display7SEG2+0x26>
		state_7seg2(0,0,0,0,0,0,1);
 80008ae:	2301      	movs	r3, #1
 80008b0:	9302      	str	r3, [sp, #8]
 80008b2:	2300      	movs	r3, #0
 80008b4:	9301      	str	r3, [sp, #4]
 80008b6:	2300      	movs	r3, #0
 80008b8:	9300      	str	r3, [sp, #0]
 80008ba:	2300      	movs	r3, #0
 80008bc:	2200      	movs	r2, #0
 80008be:	2100      	movs	r1, #0
 80008c0:	2000      	movs	r0, #0
 80008c2:	f7ff ffa7 	bl	8000814 <state_7seg2>
	 }
	 if (num == 1){
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	2b01      	cmp	r3, #1
 80008ca:	d10b      	bne.n	80008e4 <display7SEG2+0x44>
		 state_7seg2(1,0,0,1,1,1,1);
 80008cc:	2301      	movs	r3, #1
 80008ce:	9302      	str	r3, [sp, #8]
 80008d0:	2301      	movs	r3, #1
 80008d2:	9301      	str	r3, [sp, #4]
 80008d4:	2301      	movs	r3, #1
 80008d6:	9300      	str	r3, [sp, #0]
 80008d8:	2301      	movs	r3, #1
 80008da:	2200      	movs	r2, #0
 80008dc:	2100      	movs	r1, #0
 80008de:	2001      	movs	r0, #1
 80008e0:	f7ff ff98 	bl	8000814 <state_7seg2>
	 }
	 if (num == 2){
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	2b02      	cmp	r3, #2
 80008e8:	d10b      	bne.n	8000902 <display7SEG2+0x62>
		 state_7seg2(0,0,1,0,0,1,0);
 80008ea:	2300      	movs	r3, #0
 80008ec:	9302      	str	r3, [sp, #8]
 80008ee:	2301      	movs	r3, #1
 80008f0:	9301      	str	r3, [sp, #4]
 80008f2:	2300      	movs	r3, #0
 80008f4:	9300      	str	r3, [sp, #0]
 80008f6:	2300      	movs	r3, #0
 80008f8:	2201      	movs	r2, #1
 80008fa:	2100      	movs	r1, #0
 80008fc:	2000      	movs	r0, #0
 80008fe:	f7ff ff89 	bl	8000814 <state_7seg2>
	 }
	 if (num == 3){
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	2b03      	cmp	r3, #3
 8000906:	d10b      	bne.n	8000920 <display7SEG2+0x80>
		 state_7seg2(0,0,0,0,1,1,0);
 8000908:	2300      	movs	r3, #0
 800090a:	9302      	str	r3, [sp, #8]
 800090c:	2301      	movs	r3, #1
 800090e:	9301      	str	r3, [sp, #4]
 8000910:	2301      	movs	r3, #1
 8000912:	9300      	str	r3, [sp, #0]
 8000914:	2300      	movs	r3, #0
 8000916:	2200      	movs	r2, #0
 8000918:	2100      	movs	r1, #0
 800091a:	2000      	movs	r0, #0
 800091c:	f7ff ff7a 	bl	8000814 <state_7seg2>
	 }
	 if (num == 4){
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	2b04      	cmp	r3, #4
 8000924:	d10b      	bne.n	800093e <display7SEG2+0x9e>
		 state_7seg2(1,0,0,1,1,0,0);
 8000926:	2300      	movs	r3, #0
 8000928:	9302      	str	r3, [sp, #8]
 800092a:	2300      	movs	r3, #0
 800092c:	9301      	str	r3, [sp, #4]
 800092e:	2301      	movs	r3, #1
 8000930:	9300      	str	r3, [sp, #0]
 8000932:	2301      	movs	r3, #1
 8000934:	2200      	movs	r2, #0
 8000936:	2100      	movs	r1, #0
 8000938:	2001      	movs	r0, #1
 800093a:	f7ff ff6b 	bl	8000814 <state_7seg2>
	 }
	 if (num == 5){
 800093e:	687b      	ldr	r3, [r7, #4]
 8000940:	2b05      	cmp	r3, #5
 8000942:	d10b      	bne.n	800095c <display7SEG2+0xbc>
		 state_7seg2(0,1,0,0,1,0,0);
 8000944:	2300      	movs	r3, #0
 8000946:	9302      	str	r3, [sp, #8]
 8000948:	2300      	movs	r3, #0
 800094a:	9301      	str	r3, [sp, #4]
 800094c:	2301      	movs	r3, #1
 800094e:	9300      	str	r3, [sp, #0]
 8000950:	2300      	movs	r3, #0
 8000952:	2200      	movs	r2, #0
 8000954:	2101      	movs	r1, #1
 8000956:	2000      	movs	r0, #0
 8000958:	f7ff ff5c 	bl	8000814 <state_7seg2>
	 }
	 if (num == 6){
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	2b06      	cmp	r3, #6
 8000960:	d10b      	bne.n	800097a <display7SEG2+0xda>
		 state_7seg2(0,1,0,0,0,0,0);
 8000962:	2300      	movs	r3, #0
 8000964:	9302      	str	r3, [sp, #8]
 8000966:	2300      	movs	r3, #0
 8000968:	9301      	str	r3, [sp, #4]
 800096a:	2300      	movs	r3, #0
 800096c:	9300      	str	r3, [sp, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	2200      	movs	r2, #0
 8000972:	2101      	movs	r1, #1
 8000974:	2000      	movs	r0, #0
 8000976:	f7ff ff4d 	bl	8000814 <state_7seg2>
	 }
	 if(num == 7){
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	2b07      	cmp	r3, #7
 800097e:	d10b      	bne.n	8000998 <display7SEG2+0xf8>
		 state_7seg2(0,0,0,1,1,1,1);
 8000980:	2301      	movs	r3, #1
 8000982:	9302      	str	r3, [sp, #8]
 8000984:	2301      	movs	r3, #1
 8000986:	9301      	str	r3, [sp, #4]
 8000988:	2301      	movs	r3, #1
 800098a:	9300      	str	r3, [sp, #0]
 800098c:	2301      	movs	r3, #1
 800098e:	2200      	movs	r2, #0
 8000990:	2100      	movs	r1, #0
 8000992:	2000      	movs	r0, #0
 8000994:	f7ff ff3e 	bl	8000814 <state_7seg2>
	 }
	 if (num == 8){
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	2b08      	cmp	r3, #8
 800099c:	d10b      	bne.n	80009b6 <display7SEG2+0x116>
		 state_7seg2(0,0,0,0,0,0,0);
 800099e:	2300      	movs	r3, #0
 80009a0:	9302      	str	r3, [sp, #8]
 80009a2:	2300      	movs	r3, #0
 80009a4:	9301      	str	r3, [sp, #4]
 80009a6:	2300      	movs	r3, #0
 80009a8:	9300      	str	r3, [sp, #0]
 80009aa:	2300      	movs	r3, #0
 80009ac:	2200      	movs	r2, #0
 80009ae:	2100      	movs	r1, #0
 80009b0:	2000      	movs	r0, #0
 80009b2:	f7ff ff2f 	bl	8000814 <state_7seg2>
	 }
	 if(num == 9){
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	2b09      	cmp	r3, #9
 80009ba:	d10b      	bne.n	80009d4 <display7SEG2+0x134>
		 state_7seg2(0,0,0,0,1,0,0);
 80009bc:	2300      	movs	r3, #0
 80009be:	9302      	str	r3, [sp, #8]
 80009c0:	2300      	movs	r3, #0
 80009c2:	9301      	str	r3, [sp, #4]
 80009c4:	2301      	movs	r3, #1
 80009c6:	9300      	str	r3, [sp, #0]
 80009c8:	2300      	movs	r3, #0
 80009ca:	2200      	movs	r2, #0
 80009cc:	2100      	movs	r1, #0
 80009ce:	2000      	movs	r0, #0
 80009d0:	f7ff ff20 	bl	8000814 <state_7seg2>
	 }
	 if(num >= 10){
 80009d4:	687b      	ldr	r3, [r7, #4]
 80009d6:	2b09      	cmp	r3, #9
 80009d8:	dd0b      	ble.n	80009f2 <display7SEG2+0x152>
		 state_7seg2(0,0,0,0,0,0,1);
 80009da:	2301      	movs	r3, #1
 80009dc:	9302      	str	r3, [sp, #8]
 80009de:	2300      	movs	r3, #0
 80009e0:	9301      	str	r3, [sp, #4]
 80009e2:	2300      	movs	r3, #0
 80009e4:	9300      	str	r3, [sp, #0]
 80009e6:	2300      	movs	r3, #0
 80009e8:	2200      	movs	r2, #0
 80009ea:	2100      	movs	r1, #0
 80009ec:	2000      	movs	r0, #0
 80009ee:	f7ff ff11 	bl	8000814 <state_7seg2>
	 }
}
 80009f2:	bf00      	nop
 80009f4:	3708      	adds	r7, #8
 80009f6:	46bd      	mov	sp, r7
 80009f8:	bd80      	pop	{r7, pc}
	...

080009fc <display_two_7SEG>:


int count_7seg1;
int count_7seg2;
void display_two_7SEG(){
 80009fc:	b580      	push	{r7, lr}
 80009fe:	af00      	add	r7, sp, #0
	switch(status3){
 8000a00:	4b93      	ldr	r3, [pc, #588]	; (8000c50 <display_two_7SEG+0x254>)
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	2b03      	cmp	r3, #3
 8000a06:	f000 80d7 	beq.w	8000bb8 <display_two_7SEG+0x1bc>
 8000a0a:	2b03      	cmp	r3, #3
 8000a0c:	f300 8118 	bgt.w	8000c40 <display_two_7SEG+0x244>
 8000a10:	2b01      	cmp	r3, #1
 8000a12:	d002      	beq.n	8000a1a <display_two_7SEG+0x1e>
 8000a14:	2b02      	cmp	r3, #2
 8000a16:	d03e      	beq.n	8000a96 <display_two_7SEG+0x9a>

				setTimer2(500);
			}
			break;
		default:
			break;
 8000a18:	e112      	b.n	8000c40 <display_two_7SEG+0x244>
			status3 = SEG_1;
 8000a1a:	4b8d      	ldr	r3, [pc, #564]	; (8000c50 <display_two_7SEG+0x254>)
 8000a1c:	2202      	movs	r2, #2
 8000a1e:	601a      	str	r2, [r3, #0]
			count_7seg1 = time_red;
 8000a20:	4b8c      	ldr	r3, [pc, #560]	; (8000c54 <display_two_7SEG+0x258>)
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	4a8c      	ldr	r2, [pc, #560]	; (8000c58 <display_two_7SEG+0x25c>)
 8000a26:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000a28:	2200      	movs	r2, #0
 8000a2a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000a2e:	488b      	ldr	r0, [pc, #556]	; (8000c5c <display_two_7SEG+0x260>)
 8000a30:	f001 fa2d 	bl	8001e8e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000a34:	2201      	movs	r2, #1
 8000a36:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a3a:	4888      	ldr	r0, [pc, #544]	; (8000c5c <display_two_7SEG+0x260>)
 8000a3c:	f001 fa27 	bl	8001e8e <HAL_GPIO_WritePin>
			display7SEG1(count_7seg1/10);
 8000a40:	4b85      	ldr	r3, [pc, #532]	; (8000c58 <display_two_7SEG+0x25c>)
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	4a86      	ldr	r2, [pc, #536]	; (8000c60 <display_two_7SEG+0x264>)
 8000a46:	fb82 1203 	smull	r1, r2, r2, r3
 8000a4a:	1092      	asrs	r2, r2, #2
 8000a4c:	17db      	asrs	r3, r3, #31
 8000a4e:	1ad3      	subs	r3, r2, r3
 8000a50:	4618      	mov	r0, r3
 8000a52:	f7ff fe27 	bl	80006a4 <display7SEG1>
			count_7seg2 = time_green;
 8000a56:	4b83      	ldr	r3, [pc, #524]	; (8000c64 <display_two_7SEG+0x268>)
 8000a58:	681b      	ldr	r3, [r3, #0]
 8000a5a:	4a83      	ldr	r2, [pc, #524]	; (8000c68 <display_two_7SEG+0x26c>)
 8000a5c:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000a5e:	2200      	movs	r2, #0
 8000a60:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000a64:	487d      	ldr	r0, [pc, #500]	; (8000c5c <display_two_7SEG+0x260>)
 8000a66:	f001 fa12 	bl	8001e8e <HAL_GPIO_WritePin>
		    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000a6a:	2201      	movs	r2, #1
 8000a6c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000a70:	487a      	ldr	r0, [pc, #488]	; (8000c5c <display_two_7SEG+0x260>)
 8000a72:	f001 fa0c 	bl	8001e8e <HAL_GPIO_WritePin>
			display7SEG2(count_7seg2/10);
 8000a76:	4b7c      	ldr	r3, [pc, #496]	; (8000c68 <display_two_7SEG+0x26c>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	4a79      	ldr	r2, [pc, #484]	; (8000c60 <display_two_7SEG+0x264>)
 8000a7c:	fb82 1203 	smull	r1, r2, r2, r3
 8000a80:	1092      	asrs	r2, r2, #2
 8000a82:	17db      	asrs	r3, r3, #31
 8000a84:	1ad3      	subs	r3, r2, r3
 8000a86:	4618      	mov	r0, r3
 8000a88:	f7ff ff0a 	bl	80008a0 <display7SEG2>
			setTimer2(500);
 8000a8c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000a90:	f000 fc8c 	bl	80013ac <setTimer2>
			break;
 8000a94:	e0d9      	b.n	8000c4a <display_two_7SEG+0x24e>
			if (status1 == AUTO_GREEN1 && count_7seg1 == 0){
 8000a96:	4b75      	ldr	r3, [pc, #468]	; (8000c6c <display_two_7SEG+0x270>)
 8000a98:	681b      	ldr	r3, [r3, #0]
 8000a9a:	2b03      	cmp	r3, #3
 8000a9c:	d108      	bne.n	8000ab0 <display_two_7SEG+0xb4>
 8000a9e:	4b6e      	ldr	r3, [pc, #440]	; (8000c58 <display_two_7SEG+0x25c>)
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	d104      	bne.n	8000ab0 <display_two_7SEG+0xb4>
				count_7seg1 = time_green;
 8000aa6:	4b6f      	ldr	r3, [pc, #444]	; (8000c64 <display_two_7SEG+0x268>)
 8000aa8:	681b      	ldr	r3, [r3, #0]
 8000aaa:	4a6b      	ldr	r2, [pc, #428]	; (8000c58 <display_two_7SEG+0x25c>)
 8000aac:	6013      	str	r3, [r2, #0]
 8000aae:	e018      	b.n	8000ae2 <display_two_7SEG+0xe6>
			else if (status1 == AUTO_YELLOW1 && count_7seg1 == 0){
 8000ab0:	4b6e      	ldr	r3, [pc, #440]	; (8000c6c <display_two_7SEG+0x270>)
 8000ab2:	681b      	ldr	r3, [r3, #0]
 8000ab4:	2b04      	cmp	r3, #4
 8000ab6:	d108      	bne.n	8000aca <display_two_7SEG+0xce>
 8000ab8:	4b67      	ldr	r3, [pc, #412]	; (8000c58 <display_two_7SEG+0x25c>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	d104      	bne.n	8000aca <display_two_7SEG+0xce>
				count_7seg1 = time_amber;
 8000ac0:	4b6b      	ldr	r3, [pc, #428]	; (8000c70 <display_two_7SEG+0x274>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	4a64      	ldr	r2, [pc, #400]	; (8000c58 <display_two_7SEG+0x25c>)
 8000ac6:	6013      	str	r3, [r2, #0]
 8000ac8:	e00b      	b.n	8000ae2 <display_two_7SEG+0xe6>
			else if (status1 == AUTO_RED1 && count_7seg1 == 0){
 8000aca:	4b68      	ldr	r3, [pc, #416]	; (8000c6c <display_two_7SEG+0x270>)
 8000acc:	681b      	ldr	r3, [r3, #0]
 8000ace:	2b02      	cmp	r3, #2
 8000ad0:	d107      	bne.n	8000ae2 <display_two_7SEG+0xe6>
 8000ad2:	4b61      	ldr	r3, [pc, #388]	; (8000c58 <display_two_7SEG+0x25c>)
 8000ad4:	681b      	ldr	r3, [r3, #0]
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	d103      	bne.n	8000ae2 <display_two_7SEG+0xe6>
				count_7seg1 = time_red;
 8000ada:	4b5e      	ldr	r3, [pc, #376]	; (8000c54 <display_two_7SEG+0x258>)
 8000adc:	681b      	ldr	r3, [r3, #0]
 8000ade:	4a5e      	ldr	r2, [pc, #376]	; (8000c58 <display_two_7SEG+0x25c>)
 8000ae0:	6013      	str	r3, [r2, #0]
			if (status2 == AUTO_GREEN2 && count_7seg2 == 0){
 8000ae2:	4b64      	ldr	r3, [pc, #400]	; (8000c74 <display_two_7SEG+0x278>)
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	2b02      	cmp	r3, #2
 8000ae8:	d108      	bne.n	8000afc <display_two_7SEG+0x100>
 8000aea:	4b5f      	ldr	r3, [pc, #380]	; (8000c68 <display_two_7SEG+0x26c>)
 8000aec:	681b      	ldr	r3, [r3, #0]
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d104      	bne.n	8000afc <display_two_7SEG+0x100>
				count_7seg2 = time_green;
 8000af2:	4b5c      	ldr	r3, [pc, #368]	; (8000c64 <display_two_7SEG+0x268>)
 8000af4:	681b      	ldr	r3, [r3, #0]
 8000af6:	4a5c      	ldr	r2, [pc, #368]	; (8000c68 <display_two_7SEG+0x26c>)
 8000af8:	6013      	str	r3, [r2, #0]
 8000afa:	e018      	b.n	8000b2e <display_two_7SEG+0x132>
			else if (status2 == AUTO_YELLOW2 && count_7seg2 == 0){
 8000afc:	4b5d      	ldr	r3, [pc, #372]	; (8000c74 <display_two_7SEG+0x278>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	2b03      	cmp	r3, #3
 8000b02:	d108      	bne.n	8000b16 <display_two_7SEG+0x11a>
 8000b04:	4b58      	ldr	r3, [pc, #352]	; (8000c68 <display_two_7SEG+0x26c>)
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d104      	bne.n	8000b16 <display_two_7SEG+0x11a>
				count_7seg2 = time_amber;
 8000b0c:	4b58      	ldr	r3, [pc, #352]	; (8000c70 <display_two_7SEG+0x274>)
 8000b0e:	681b      	ldr	r3, [r3, #0]
 8000b10:	4a55      	ldr	r2, [pc, #340]	; (8000c68 <display_two_7SEG+0x26c>)
 8000b12:	6013      	str	r3, [r2, #0]
 8000b14:	e00b      	b.n	8000b2e <display_two_7SEG+0x132>
			else if (status2 == AUTO_RED2 && count_7seg2 == 0){
 8000b16:	4b57      	ldr	r3, [pc, #348]	; (8000c74 <display_two_7SEG+0x278>)
 8000b18:	681b      	ldr	r3, [r3, #0]
 8000b1a:	2b04      	cmp	r3, #4
 8000b1c:	d107      	bne.n	8000b2e <display_two_7SEG+0x132>
 8000b1e:	4b52      	ldr	r3, [pc, #328]	; (8000c68 <display_two_7SEG+0x26c>)
 8000b20:	681b      	ldr	r3, [r3, #0]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d103      	bne.n	8000b2e <display_two_7SEG+0x132>
				count_7seg2 = time_red;
 8000b26:	4b4b      	ldr	r3, [pc, #300]	; (8000c54 <display_two_7SEG+0x258>)
 8000b28:	681b      	ldr	r3, [r3, #0]
 8000b2a:	4a4f      	ldr	r2, [pc, #316]	; (8000c68 <display_two_7SEG+0x26c>)
 8000b2c:	6013      	str	r3, [r2, #0]
			if(timer_flag2 == 1){
 8000b2e:	4b52      	ldr	r3, [pc, #328]	; (8000c78 <display_two_7SEG+0x27c>)
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	2b01      	cmp	r3, #1
 8000b34:	f040 8086 	bne.w	8000c44 <display_two_7SEG+0x248>
				status3 = SEG_2;
 8000b38:	4b45      	ldr	r3, [pc, #276]	; (8000c50 <display_two_7SEG+0x254>)
 8000b3a:	2203      	movs	r2, #3
 8000b3c:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  1);
 8000b3e:	2201      	movs	r2, #1
 8000b40:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000b44:	4845      	ldr	r0, [pc, #276]	; (8000c5c <display_two_7SEG+0x260>)
 8000b46:	f001 f9a2 	bl	8001e8e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  0);
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b50:	4842      	ldr	r0, [pc, #264]	; (8000c5c <display_two_7SEG+0x260>)
 8000b52:	f001 f99c 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG1((count_7seg1 - (count_7seg1/10)*10));
 8000b56:	4b40      	ldr	r3, [pc, #256]	; (8000c58 <display_two_7SEG+0x25c>)
 8000b58:	681a      	ldr	r2, [r3, #0]
 8000b5a:	4b41      	ldr	r3, [pc, #260]	; (8000c60 <display_two_7SEG+0x264>)
 8000b5c:	fb83 1302 	smull	r1, r3, r3, r2
 8000b60:	1099      	asrs	r1, r3, #2
 8000b62:	17d3      	asrs	r3, r2, #31
 8000b64:	1ac9      	subs	r1, r1, r3
 8000b66:	460b      	mov	r3, r1
 8000b68:	009b      	lsls	r3, r3, #2
 8000b6a:	440b      	add	r3, r1
 8000b6c:	005b      	lsls	r3, r3, #1
 8000b6e:	1ad1      	subs	r1, r2, r3
 8000b70:	4608      	mov	r0, r1
 8000b72:	f7ff fd97 	bl	80006a4 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  1);
 8000b76:	2201      	movs	r2, #1
 8000b78:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000b7c:	4837      	ldr	r0, [pc, #220]	; (8000c5c <display_two_7SEG+0x260>)
 8000b7e:	f001 f986 	bl	8001e8e <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  0);
 8000b82:	2200      	movs	r2, #0
 8000b84:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000b88:	4834      	ldr	r0, [pc, #208]	; (8000c5c <display_two_7SEG+0x260>)
 8000b8a:	f001 f980 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG2((count_7seg2 - (count_7seg2/10)*10));
 8000b8e:	4b36      	ldr	r3, [pc, #216]	; (8000c68 <display_two_7SEG+0x26c>)
 8000b90:	681a      	ldr	r2, [r3, #0]
 8000b92:	4b33      	ldr	r3, [pc, #204]	; (8000c60 <display_two_7SEG+0x264>)
 8000b94:	fb83 1302 	smull	r1, r3, r3, r2
 8000b98:	1099      	asrs	r1, r3, #2
 8000b9a:	17d3      	asrs	r3, r2, #31
 8000b9c:	1ac9      	subs	r1, r1, r3
 8000b9e:	460b      	mov	r3, r1
 8000ba0:	009b      	lsls	r3, r3, #2
 8000ba2:	440b      	add	r3, r1
 8000ba4:	005b      	lsls	r3, r3, #1
 8000ba6:	1ad1      	subs	r1, r2, r3
 8000ba8:	4608      	mov	r0, r1
 8000baa:	f7ff fe79 	bl	80008a0 <display7SEG2>
				setTimer2(500);
 8000bae:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000bb2:	f000 fbfb 	bl	80013ac <setTimer2>
			break;
 8000bb6:	e045      	b.n	8000c44 <display_two_7SEG+0x248>
			if(timer_flag2 == 1){
 8000bb8:	4b2f      	ldr	r3, [pc, #188]	; (8000c78 <display_two_7SEG+0x27c>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	2b01      	cmp	r3, #1
 8000bbe:	d143      	bne.n	8000c48 <display_two_7SEG+0x24c>
				count_7seg1--;
 8000bc0:	4b25      	ldr	r3, [pc, #148]	; (8000c58 <display_two_7SEG+0x25c>)
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	3b01      	subs	r3, #1
 8000bc6:	4a24      	ldr	r2, [pc, #144]	; (8000c58 <display_two_7SEG+0x25c>)
 8000bc8:	6013      	str	r3, [r2, #0]
				status3 = SEG_1;
 8000bca:	4b21      	ldr	r3, [pc, #132]	; (8000c50 <display_two_7SEG+0x254>)
 8000bcc:	2202      	movs	r2, #2
 8000bce:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000bd6:	4821      	ldr	r0, [pc, #132]	; (8000c5c <display_two_7SEG+0x260>)
 8000bd8:	f001 f959 	bl	8001e8e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000bdc:	2201      	movs	r2, #1
 8000bde:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000be2:	481e      	ldr	r0, [pc, #120]	; (8000c5c <display_two_7SEG+0x260>)
 8000be4:	f001 f953 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG1(count_7seg1/10);
 8000be8:	4b1b      	ldr	r3, [pc, #108]	; (8000c58 <display_two_7SEG+0x25c>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	4a1c      	ldr	r2, [pc, #112]	; (8000c60 <display_two_7SEG+0x264>)
 8000bee:	fb82 1203 	smull	r1, r2, r2, r3
 8000bf2:	1092      	asrs	r2, r2, #2
 8000bf4:	17db      	asrs	r3, r3, #31
 8000bf6:	1ad3      	subs	r3, r2, r3
 8000bf8:	4618      	mov	r0, r3
 8000bfa:	f7ff fd53 	bl	80006a4 <display7SEG1>
				count_7seg2--;
 8000bfe:	4b1a      	ldr	r3, [pc, #104]	; (8000c68 <display_two_7SEG+0x26c>)
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	3b01      	subs	r3, #1
 8000c04:	4a18      	ldr	r2, [pc, #96]	; (8000c68 <display_two_7SEG+0x26c>)
 8000c06:	6013      	str	r3, [r2, #0]
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000c08:	2200      	movs	r2, #0
 8000c0a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000c0e:	4813      	ldr	r0, [pc, #76]	; (8000c5c <display_two_7SEG+0x260>)
 8000c10:	f001 f93d 	bl	8001e8e <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000c14:	2201      	movs	r2, #1
 8000c16:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000c1a:	4810      	ldr	r0, [pc, #64]	; (8000c5c <display_two_7SEG+0x260>)
 8000c1c:	f001 f937 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG2(count_7seg2/10);
 8000c20:	4b11      	ldr	r3, [pc, #68]	; (8000c68 <display_two_7SEG+0x26c>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	4a0e      	ldr	r2, [pc, #56]	; (8000c60 <display_two_7SEG+0x264>)
 8000c26:	fb82 1203 	smull	r1, r2, r2, r3
 8000c2a:	1092      	asrs	r2, r2, #2
 8000c2c:	17db      	asrs	r3, r3, #31
 8000c2e:	1ad3      	subs	r3, r2, r3
 8000c30:	4618      	mov	r0, r3
 8000c32:	f7ff fe35 	bl	80008a0 <display7SEG2>
				setTimer2(500);
 8000c36:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c3a:	f000 fbb7 	bl	80013ac <setTimer2>
			break;
 8000c3e:	e003      	b.n	8000c48 <display_two_7SEG+0x24c>
			break;
 8000c40:	bf00      	nop
 8000c42:	e002      	b.n	8000c4a <display_two_7SEG+0x24e>
			break;
 8000c44:	bf00      	nop
 8000c46:	e000      	b.n	8000c4a <display_two_7SEG+0x24e>
			break;
 8000c48:	bf00      	nop
	}
}
 8000c4a:	bf00      	nop
 8000c4c:	bd80      	pop	{r7, pc}
 8000c4e:	bf00      	nop
 8000c50:	20000008 	.word	0x20000008
 8000c54:	20000020 	.word	0x20000020
 8000c58:	200000e0 	.word	0x200000e0
 8000c5c:	40010800 	.word	0x40010800
 8000c60:	66666667 	.word	0x66666667
 8000c64:	20000028 	.word	0x20000028
 8000c68:	200000e4 	.word	0x200000e4
 8000c6c:	20000000 	.word	0x20000000
 8000c70:	20000024 	.word	0x20000024
 8000c74:	20000004 	.word	0x20000004
 8000c78:	200000b0 	.word	0x200000b0

08000c7c <blink_led_red>:


void blink_led_red(){
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	af00      	add	r7, sp, #0
	switch(status4){
 8000c80:	4b26      	ldr	r3, [pc, #152]	; (8000d1c <blink_led_red+0xa0>)
 8000c82:	681b      	ldr	r3, [r3, #0]
 8000c84:	2b03      	cmp	r3, #3
 8000c86:	d02e      	beq.n	8000ce6 <blink_led_red+0x6a>
 8000c88:	2b03      	cmp	r3, #3
 8000c8a:	dc40      	bgt.n	8000d0e <blink_led_red+0x92>
 8000c8c:	2b01      	cmp	r3, #1
 8000c8e:	d002      	beq.n	8000c96 <blink_led_red+0x1a>
 8000c90:	2b02      	cmp	r3, #2
 8000c92:	d014      	beq.n	8000cbe <blink_led_red+0x42>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000c94:	e03b      	b.n	8000d0e <blink_led_red+0x92>
			clear_led();
 8000c96:	f7ff fca1 	bl	80005dc <clear_led>
			status4 = 2;
 8000c9a:	4b20      	ldr	r3, [pc, #128]	; (8000d1c <blink_led_red+0xa0>)
 8000c9c:	2202      	movs	r2, #2
 8000c9e:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 0);
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	2102      	movs	r1, #2
 8000ca4:	481e      	ldr	r0, [pc, #120]	; (8000d20 <blink_led_red+0xa4>)
 8000ca6:	f001 f8f2 	bl	8001e8e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin,0);
 8000caa:	2200      	movs	r2, #0
 8000cac:	2110      	movs	r1, #16
 8000cae:	481c      	ldr	r0, [pc, #112]	; (8000d20 <blink_led_red+0xa4>)
 8000cb0:	f001 f8ed 	bl	8001e8e <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000cb4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cb8:	f000 fb8e 	bl	80013d8 <setTimer4>
		    break;
 8000cbc:	e02c      	b.n	8000d18 <blink_led_red+0x9c>
			if(timer_flag4 == 1){
 8000cbe:	4b19      	ldr	r3, [pc, #100]	; (8000d24 <blink_led_red+0xa8>)
 8000cc0:	681b      	ldr	r3, [r3, #0]
 8000cc2:	2b01      	cmp	r3, #1
 8000cc4:	d125      	bne.n	8000d12 <blink_led_red+0x96>
				status4 = 3;
 8000cc6:	4b15      	ldr	r3, [pc, #84]	; (8000d1c <blink_led_red+0xa0>)
 8000cc8:	2203      	movs	r2, #3
 8000cca:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(red1_GPIO_Port, red1_Pin);
 8000ccc:	2102      	movs	r1, #2
 8000cce:	4814      	ldr	r0, [pc, #80]	; (8000d20 <blink_led_red+0xa4>)
 8000cd0:	f001 f8f5 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
 8000cd4:	2110      	movs	r1, #16
 8000cd6:	4812      	ldr	r0, [pc, #72]	; (8000d20 <blink_led_red+0xa4>)
 8000cd8:	f001 f8f1 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000cdc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000ce0:	f000 fb7a 	bl	80013d8 <setTimer4>
			break;
 8000ce4:	e015      	b.n	8000d12 <blink_led_red+0x96>
			if(timer_flag4 == 1){
 8000ce6:	4b0f      	ldr	r3, [pc, #60]	; (8000d24 <blink_led_red+0xa8>)
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	2b01      	cmp	r3, #1
 8000cec:	d113      	bne.n	8000d16 <blink_led_red+0x9a>
				status4 = 2;
 8000cee:	4b0b      	ldr	r3, [pc, #44]	; (8000d1c <blink_led_red+0xa0>)
 8000cf0:	2202      	movs	r2, #2
 8000cf2:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(red1_GPIO_Port, red1_Pin);
 8000cf4:	2102      	movs	r1, #2
 8000cf6:	480a      	ldr	r0, [pc, #40]	; (8000d20 <blink_led_red+0xa4>)
 8000cf8:	f001 f8e1 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(red2_GPIO_Port, red2_Pin);
 8000cfc:	2110      	movs	r1, #16
 8000cfe:	4808      	ldr	r0, [pc, #32]	; (8000d20 <blink_led_red+0xa4>)
 8000d00:	f001 f8dd 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000d04:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d08:	f000 fb66 	bl	80013d8 <setTimer4>
			break;
 8000d0c:	e003      	b.n	8000d16 <blink_led_red+0x9a>
			break;
 8000d0e:	bf00      	nop
 8000d10:	e002      	b.n	8000d18 <blink_led_red+0x9c>
			break;
 8000d12:	bf00      	nop
 8000d14:	e000      	b.n	8000d18 <blink_led_red+0x9c>
			break;
 8000d16:	bf00      	nop
	}
}
 8000d18:	bf00      	nop
 8000d1a:	bd80      	pop	{r7, pc}
 8000d1c:	2000000c 	.word	0x2000000c
 8000d20:	40010800 	.word	0x40010800
 8000d24:	200000b8 	.word	0x200000b8

08000d28 <blink_led_amber>:


void blink_led_amber(){
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	af00      	add	r7, sp, #0
	switch(status4_1){
 8000d2c:	4b26      	ldr	r3, [pc, #152]	; (8000dc8 <blink_led_amber+0xa0>)
 8000d2e:	681b      	ldr	r3, [r3, #0]
 8000d30:	2b03      	cmp	r3, #3
 8000d32:	d02e      	beq.n	8000d92 <blink_led_amber+0x6a>
 8000d34:	2b03      	cmp	r3, #3
 8000d36:	dc40      	bgt.n	8000dba <blink_led_amber+0x92>
 8000d38:	2b01      	cmp	r3, #1
 8000d3a:	d002      	beq.n	8000d42 <blink_led_amber+0x1a>
 8000d3c:	2b02      	cmp	r3, #2
 8000d3e:	d014      	beq.n	8000d6a <blink_led_amber+0x42>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000d40:	e03b      	b.n	8000dba <blink_led_amber+0x92>
			clear_led();
 8000d42:	f7ff fc4b 	bl	80005dc <clear_led>
			status4_1 = 2;
 8000d46:	4b20      	ldr	r3, [pc, #128]	; (8000dc8 <blink_led_amber+0xa0>)
 8000d48:	2202      	movs	r2, #2
 8000d4a:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 0);
 8000d4c:	2200      	movs	r2, #0
 8000d4e:	2104      	movs	r1, #4
 8000d50:	481e      	ldr	r0, [pc, #120]	; (8000dcc <blink_led_amber+0xa4>)
 8000d52:	f001 f89c 	bl	8001e8e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin,0);
 8000d56:	2200      	movs	r2, #0
 8000d58:	2120      	movs	r1, #32
 8000d5a:	481c      	ldr	r0, [pc, #112]	; (8000dcc <blink_led_amber+0xa4>)
 8000d5c:	f001 f897 	bl	8001e8e <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000d60:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d64:	f000 fb38 	bl	80013d8 <setTimer4>
		    break;
 8000d68:	e02c      	b.n	8000dc4 <blink_led_amber+0x9c>
			if(timer_flag4 == 1){
 8000d6a:	4b19      	ldr	r3, [pc, #100]	; (8000dd0 <blink_led_amber+0xa8>)
 8000d6c:	681b      	ldr	r3, [r3, #0]
 8000d6e:	2b01      	cmp	r3, #1
 8000d70:	d125      	bne.n	8000dbe <blink_led_amber+0x96>
				status4_1 = 3;
 8000d72:	4b15      	ldr	r3, [pc, #84]	; (8000dc8 <blink_led_amber+0xa0>)
 8000d74:	2203      	movs	r2, #3
 8000d76:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(amber1_GPIO_Port, amber1_Pin);
 8000d78:	2104      	movs	r1, #4
 8000d7a:	4814      	ldr	r0, [pc, #80]	; (8000dcc <blink_led_amber+0xa4>)
 8000d7c:	f001 f89f 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
 8000d80:	2120      	movs	r1, #32
 8000d82:	4812      	ldr	r0, [pc, #72]	; (8000dcc <blink_led_amber+0xa4>)
 8000d84:	f001 f89b 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000d88:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d8c:	f000 fb24 	bl	80013d8 <setTimer4>
			break;
 8000d90:	e015      	b.n	8000dbe <blink_led_amber+0x96>
			if(timer_flag4 == 1){
 8000d92:	4b0f      	ldr	r3, [pc, #60]	; (8000dd0 <blink_led_amber+0xa8>)
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	2b01      	cmp	r3, #1
 8000d98:	d113      	bne.n	8000dc2 <blink_led_amber+0x9a>
				status4_1 = 2;
 8000d9a:	4b0b      	ldr	r3, [pc, #44]	; (8000dc8 <blink_led_amber+0xa0>)
 8000d9c:	2202      	movs	r2, #2
 8000d9e:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(amber1_GPIO_Port,amber1_Pin);
 8000da0:	2104      	movs	r1, #4
 8000da2:	480a      	ldr	r0, [pc, #40]	; (8000dcc <blink_led_amber+0xa4>)
 8000da4:	f001 f88b 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(amber2_GPIO_Port, amber2_Pin);
 8000da8:	2120      	movs	r1, #32
 8000daa:	4808      	ldr	r0, [pc, #32]	; (8000dcc <blink_led_amber+0xa4>)
 8000dac:	f001 f887 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000db0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000db4:	f000 fb10 	bl	80013d8 <setTimer4>
			break;
 8000db8:	e003      	b.n	8000dc2 <blink_led_amber+0x9a>
			break;
 8000dba:	bf00      	nop
 8000dbc:	e002      	b.n	8000dc4 <blink_led_amber+0x9c>
			break;
 8000dbe:	bf00      	nop
 8000dc0:	e000      	b.n	8000dc4 <blink_led_amber+0x9c>
			break;
 8000dc2:	bf00      	nop
	}
}
 8000dc4:	bf00      	nop
 8000dc6:	bd80      	pop	{r7, pc}
 8000dc8:	20000010 	.word	0x20000010
 8000dcc:	40010800 	.word	0x40010800
 8000dd0:	200000b8 	.word	0x200000b8

08000dd4 <blink_led_green>:

void blink_led_green(){
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	af00      	add	r7, sp, #0
	switch(status4_2){
 8000dd8:	4b26      	ldr	r3, [pc, #152]	; (8000e74 <blink_led_green+0xa0>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	2b03      	cmp	r3, #3
 8000dde:	d02e      	beq.n	8000e3e <blink_led_green+0x6a>
 8000de0:	2b03      	cmp	r3, #3
 8000de2:	dc40      	bgt.n	8000e66 <blink_led_green+0x92>
 8000de4:	2b01      	cmp	r3, #1
 8000de6:	d002      	beq.n	8000dee <blink_led_green+0x1a>
 8000de8:	2b02      	cmp	r3, #2
 8000dea:	d014      	beq.n	8000e16 <blink_led_green+0x42>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
				setTimer4(500);
			}
			break;
		default:
			break;
 8000dec:	e03b      	b.n	8000e66 <blink_led_green+0x92>
			clear_led();
 8000dee:	f7ff fbf5 	bl	80005dc <clear_led>
			status4_2 = 2;
 8000df2:	4b20      	ldr	r3, [pc, #128]	; (8000e74 <blink_led_green+0xa0>)
 8000df4:	2202      	movs	r2, #2
 8000df6:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin,0);
 8000df8:	2200      	movs	r2, #0
 8000dfa:	2108      	movs	r1, #8
 8000dfc:	481e      	ldr	r0, [pc, #120]	; (8000e78 <blink_led_green+0xa4>)
 8000dfe:	f001 f846 	bl	8001e8e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(green2_GPIO_Port,green2_Pin,0);
 8000e02:	2200      	movs	r2, #0
 8000e04:	2140      	movs	r1, #64	; 0x40
 8000e06:	481c      	ldr	r0, [pc, #112]	; (8000e78 <blink_led_green+0xa4>)
 8000e08:	f001 f841 	bl	8001e8e <HAL_GPIO_WritePin>
		    setTimer4(500);
 8000e0c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e10:	f000 fae2 	bl	80013d8 <setTimer4>
		    break;
 8000e14:	e02c      	b.n	8000e70 <blink_led_green+0x9c>
			if(timer_flag4 == 1){
 8000e16:	4b19      	ldr	r3, [pc, #100]	; (8000e7c <blink_led_green+0xa8>)
 8000e18:	681b      	ldr	r3, [r3, #0]
 8000e1a:	2b01      	cmp	r3, #1
 8000e1c:	d125      	bne.n	8000e6a <blink_led_green+0x96>
				status4_2 = 3;
 8000e1e:	4b15      	ldr	r3, [pc, #84]	; (8000e74 <blink_led_green+0xa0>)
 8000e20:	2203      	movs	r2, #3
 8000e22:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(green1_GPIO_Port, green1_Pin);
 8000e24:	2108      	movs	r1, #8
 8000e26:	4814      	ldr	r0, [pc, #80]	; (8000e78 <blink_led_green+0xa4>)
 8000e28:	f001 f849 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
 8000e2c:	2140      	movs	r1, #64	; 0x40
 8000e2e:	4812      	ldr	r0, [pc, #72]	; (8000e78 <blink_led_green+0xa4>)
 8000e30:	f001 f845 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000e34:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e38:	f000 face 	bl	80013d8 <setTimer4>
			break;
 8000e3c:	e015      	b.n	8000e6a <blink_led_green+0x96>
			if(timer_flag4 == 1){
 8000e3e:	4b0f      	ldr	r3, [pc, #60]	; (8000e7c <blink_led_green+0xa8>)
 8000e40:	681b      	ldr	r3, [r3, #0]
 8000e42:	2b01      	cmp	r3, #1
 8000e44:	d113      	bne.n	8000e6e <blink_led_green+0x9a>
				status4_2 = 2;
 8000e46:	4b0b      	ldr	r3, [pc, #44]	; (8000e74 <blink_led_green+0xa0>)
 8000e48:	2202      	movs	r2, #2
 8000e4a:	601a      	str	r2, [r3, #0]
				HAL_GPIO_TogglePin(green1_GPIO_Port, green1_Pin);
 8000e4c:	2108      	movs	r1, #8
 8000e4e:	480a      	ldr	r0, [pc, #40]	; (8000e78 <blink_led_green+0xa4>)
 8000e50:	f001 f835 	bl	8001ebe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(green2_GPIO_Port, green2_Pin);
 8000e54:	2140      	movs	r1, #64	; 0x40
 8000e56:	4808      	ldr	r0, [pc, #32]	; (8000e78 <blink_led_green+0xa4>)
 8000e58:	f001 f831 	bl	8001ebe <HAL_GPIO_TogglePin>
				setTimer4(500);
 8000e5c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e60:	f000 faba 	bl	80013d8 <setTimer4>
			break;
 8000e64:	e003      	b.n	8000e6e <blink_led_green+0x9a>
			break;
 8000e66:	bf00      	nop
 8000e68:	e002      	b.n	8000e70 <blink_led_green+0x9c>
			break;
 8000e6a:	bf00      	nop
 8000e6c:	e000      	b.n	8000e70 <blink_led_green+0x9c>
			break;
 8000e6e:	bf00      	nop
	}
}
 8000e70:	bf00      	nop
 8000e72:	bd80      	pop	{r7, pc}
 8000e74:	20000014 	.word	0x20000014
 8000e78:	40010800 	.word	0x40010800
 8000e7c:	200000b8 	.word	0x200000b8

08000e80 <update_two_7SEG>:


void update_two_7SEG(int num){
 8000e80:	b580      	push	{r7, lr}
 8000e82:	b082      	sub	sp, #8
 8000e84:	af00      	add	r7, sp, #0
 8000e86:	6078      	str	r0, [r7, #4]
	switch(status5){
 8000e88:	4b5f      	ldr	r3, [pc, #380]	; (8001008 <update_two_7SEG+0x188>)
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	2b03      	cmp	r3, #3
 8000e8e:	d07b      	beq.n	8000f88 <update_two_7SEG+0x108>
 8000e90:	2b03      	cmp	r3, #3
 8000e92:	f300 80b0 	bgt.w	8000ff6 <update_two_7SEG+0x176>
 8000e96:	2b01      	cmp	r3, #1
 8000e98:	d002      	beq.n	8000ea0 <update_two_7SEG+0x20>
 8000e9a:	2b02      	cmp	r3, #2
 8000e9c:	d033      	beq.n	8000f06 <update_two_7SEG+0x86>

				setTimer5(100);
			}
			break;
		default:
			break;
 8000e9e:	e0aa      	b.n	8000ff6 <update_two_7SEG+0x176>
			status5 = 2;
 8000ea0:	4b59      	ldr	r3, [pc, #356]	; (8001008 <update_two_7SEG+0x188>)
 8000ea2:	2202      	movs	r2, #2
 8000ea4:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000eac:	4857      	ldr	r0, [pc, #348]	; (800100c <update_two_7SEG+0x18c>)
 8000eae:	f000 ffee 	bl	8001e8e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000eb2:	2201      	movs	r2, #1
 8000eb4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000eb8:	4854      	ldr	r0, [pc, #336]	; (800100c <update_two_7SEG+0x18c>)
 8000eba:	f000 ffe8 	bl	8001e8e <HAL_GPIO_WritePin>
			display7SEG1((int)num/10);
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	4a53      	ldr	r2, [pc, #332]	; (8001010 <update_two_7SEG+0x190>)
 8000ec2:	fb82 1203 	smull	r1, r2, r2, r3
 8000ec6:	1092      	asrs	r2, r2, #2
 8000ec8:	17db      	asrs	r3, r3, #31
 8000eca:	1ad3      	subs	r3, r2, r3
 8000ecc:	4618      	mov	r0, r3
 8000ece:	f7ff fbe9 	bl	80006a4 <display7SEG1>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000ed8:	484c      	ldr	r0, [pc, #304]	; (800100c <update_two_7SEG+0x18c>)
 8000eda:	f000 ffd8 	bl	8001e8e <HAL_GPIO_WritePin>
		    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000ede:	2201      	movs	r2, #1
 8000ee0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000ee4:	4849      	ldr	r0, [pc, #292]	; (800100c <update_two_7SEG+0x18c>)
 8000ee6:	f000 ffd2 	bl	8001e8e <HAL_GPIO_WritePin>
			display7SEG2((int)num/10);
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	4a48      	ldr	r2, [pc, #288]	; (8001010 <update_two_7SEG+0x190>)
 8000eee:	fb82 1203 	smull	r1, r2, r2, r3
 8000ef2:	1092      	asrs	r2, r2, #2
 8000ef4:	17db      	asrs	r3, r3, #31
 8000ef6:	1ad3      	subs	r3, r2, r3
 8000ef8:	4618      	mov	r0, r3
 8000efa:	f7ff fcd1 	bl	80008a0 <display7SEG2>
			setTimer5(100);
 8000efe:	2064      	movs	r0, #100	; 0x64
 8000f00:	f000 fa80 	bl	8001404 <setTimer5>
			break;
 8000f04:	e07c      	b.n	8001000 <update_two_7SEG+0x180>
			if(timer_flag5 == 1){
 8000f06:	4b43      	ldr	r3, [pc, #268]	; (8001014 <update_two_7SEG+0x194>)
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	2b01      	cmp	r3, #1
 8000f0c:	d175      	bne.n	8000ffa <update_two_7SEG+0x17a>
				status5 = 3;
 8000f0e:	4b3e      	ldr	r3, [pc, #248]	; (8001008 <update_two_7SEG+0x188>)
 8000f10:	2203      	movs	r2, #3
 8000f12:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  1);
 8000f14:	2201      	movs	r2, #1
 8000f16:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f1a:	483c      	ldr	r0, [pc, #240]	; (800100c <update_two_7SEG+0x18c>)
 8000f1c:	f000 ffb7 	bl	8001e8e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  0);
 8000f20:	2200      	movs	r2, #0
 8000f22:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000f26:	4839      	ldr	r0, [pc, #228]	; (800100c <update_two_7SEG+0x18c>)
 8000f28:	f000 ffb1 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG1(num%10);
 8000f2c:	687a      	ldr	r2, [r7, #4]
 8000f2e:	4b38      	ldr	r3, [pc, #224]	; (8001010 <update_two_7SEG+0x190>)
 8000f30:	fb83 1302 	smull	r1, r3, r3, r2
 8000f34:	1099      	asrs	r1, r3, #2
 8000f36:	17d3      	asrs	r3, r2, #31
 8000f38:	1ac9      	subs	r1, r1, r3
 8000f3a:	460b      	mov	r3, r1
 8000f3c:	009b      	lsls	r3, r3, #2
 8000f3e:	440b      	add	r3, r1
 8000f40:	005b      	lsls	r3, r3, #1
 8000f42:	1ad1      	subs	r1, r2, r3
 8000f44:	4608      	mov	r0, r1
 8000f46:	f7ff fbad 	bl	80006a4 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  1);
 8000f4a:	2201      	movs	r2, #1
 8000f4c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000f50:	482e      	ldr	r0, [pc, #184]	; (800100c <update_two_7SEG+0x18c>)
 8000f52:	f000 ff9c 	bl	8001e8e <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  0);
 8000f56:	2200      	movs	r2, #0
 8000f58:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000f5c:	482b      	ldr	r0, [pc, #172]	; (800100c <update_two_7SEG+0x18c>)
 8000f5e:	f000 ff96 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG2(num%10);
 8000f62:	687a      	ldr	r2, [r7, #4]
 8000f64:	4b2a      	ldr	r3, [pc, #168]	; (8001010 <update_two_7SEG+0x190>)
 8000f66:	fb83 1302 	smull	r1, r3, r3, r2
 8000f6a:	1099      	asrs	r1, r3, #2
 8000f6c:	17d3      	asrs	r3, r2, #31
 8000f6e:	1ac9      	subs	r1, r1, r3
 8000f70:	460b      	mov	r3, r1
 8000f72:	009b      	lsls	r3, r3, #2
 8000f74:	440b      	add	r3, r1
 8000f76:	005b      	lsls	r3, r3, #1
 8000f78:	1ad1      	subs	r1, r2, r3
 8000f7a:	4608      	mov	r0, r1
 8000f7c:	f7ff fc90 	bl	80008a0 <display7SEG2>
				setTimer5(100);
 8000f80:	2064      	movs	r0, #100	; 0x64
 8000f82:	f000 fa3f 	bl	8001404 <setTimer5>
			break;
 8000f86:	e038      	b.n	8000ffa <update_two_7SEG+0x17a>
			if(timer_flag5 == 1){
 8000f88:	4b22      	ldr	r3, [pc, #136]	; (8001014 <update_two_7SEG+0x194>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	2b01      	cmp	r3, #1
 8000f8e:	d136      	bne.n	8000ffe <update_two_7SEG+0x17e>
				status5 = 2;
 8000f90:	4b1d      	ldr	r3, [pc, #116]	; (8001008 <update_two_7SEG+0x188>)
 8000f92:	2202      	movs	r2, #2
 8000f94:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin,  0);
 8000f96:	2200      	movs	r2, #0
 8000f98:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f9c:	481b      	ldr	r0, [pc, #108]	; (800100c <update_two_7SEG+0x18c>)
 8000f9e:	f000 ff76 	bl	8001e8e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin,  1);
 8000fa2:	2201      	movs	r2, #1
 8000fa4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fa8:	4818      	ldr	r0, [pc, #96]	; (800100c <update_two_7SEG+0x18c>)
 8000faa:	f000 ff70 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG1((int)num/10);
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	4a17      	ldr	r2, [pc, #92]	; (8001010 <update_two_7SEG+0x190>)
 8000fb2:	fb82 1203 	smull	r1, r2, r2, r3
 8000fb6:	1092      	asrs	r2, r2, #2
 8000fb8:	17db      	asrs	r3, r3, #31
 8000fba:	1ad3      	subs	r3, r2, r3
 8000fbc:	4618      	mov	r0, r3
 8000fbe:	f7ff fb71 	bl	80006a4 <display7SEG1>
				HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin,  0);
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fc8:	4810      	ldr	r0, [pc, #64]	; (800100c <update_two_7SEG+0x18c>)
 8000fca:	f000 ff60 	bl	8001e8e <HAL_GPIO_WritePin>
			    HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin,  1);
 8000fce:	2201      	movs	r2, #1
 8000fd0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <update_two_7SEG+0x18c>)
 8000fd6:	f000 ff5a 	bl	8001e8e <HAL_GPIO_WritePin>
				display7SEG2((int)num/10);
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	4a0c      	ldr	r2, [pc, #48]	; (8001010 <update_two_7SEG+0x190>)
 8000fde:	fb82 1203 	smull	r1, r2, r2, r3
 8000fe2:	1092      	asrs	r2, r2, #2
 8000fe4:	17db      	asrs	r3, r3, #31
 8000fe6:	1ad3      	subs	r3, r2, r3
 8000fe8:	4618      	mov	r0, r3
 8000fea:	f7ff fc59 	bl	80008a0 <display7SEG2>
				setTimer5(100);
 8000fee:	2064      	movs	r0, #100	; 0x64
 8000ff0:	f000 fa08 	bl	8001404 <setTimer5>
			break;
 8000ff4:	e003      	b.n	8000ffe <update_two_7SEG+0x17e>
			break;
 8000ff6:	bf00      	nop
 8000ff8:	e002      	b.n	8001000 <update_two_7SEG+0x180>
			break;
 8000ffa:	bf00      	nop
 8000ffc:	e000      	b.n	8001000 <update_two_7SEG+0x180>
			break;
 8000ffe:	bf00      	nop
	}
}
 8001000:	bf00      	nop
 8001002:	3708      	adds	r7, #8
 8001004:	46bd      	mov	sp, r7
 8001006:	bd80      	pop	{r7, pc}
 8001008:	20000018 	.word	0x20000018
 800100c:	40010800 	.word	0x40010800
 8001010:	66666667 	.word	0x66666667
 8001014:	200000bc 	.word	0x200000bc

08001018 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800101c:	f000 fc36 	bl	800188c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001020:	f000 f80c 	bl	800103c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001024:	f000 f892 	bl	800114c <MX_GPIO_Init>
  MX_TIM2_Init();
 8001028:	f000 f844 	bl	80010b4 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
HAL_TIM_Base_Start_IT(&htim2);
 800102c:	4802      	ldr	r0, [pc, #8]	; (8001038 <main+0x20>)
 800102e:	f001 fb97 	bl	8002760 <HAL_TIM_Base_Start_IT>
  /* USER CODE BEGIN WHILE */


  while (1)
  {
	  fsm_for_input_processing ();
 8001032:	f7ff f88b 	bl	800014c <fsm_for_input_processing>
 8001036:	e7fc      	b.n	8001032 <main+0x1a>
 8001038:	200000e8 	.word	0x200000e8

0800103c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800103c:	b580      	push	{r7, lr}
 800103e:	b090      	sub	sp, #64	; 0x40
 8001040:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001042:	f107 0318 	add.w	r3, r7, #24
 8001046:	2228      	movs	r2, #40	; 0x28
 8001048:	2100      	movs	r1, #0
 800104a:	4618      	mov	r0, r3
 800104c:	f001 ff40 	bl	8002ed0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001050:	1d3b      	adds	r3, r7, #4
 8001052:	2200      	movs	r2, #0
 8001054:	601a      	str	r2, [r3, #0]
 8001056:	605a      	str	r2, [r3, #4]
 8001058:	609a      	str	r2, [r3, #8]
 800105a:	60da      	str	r2, [r3, #12]
 800105c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800105e:	2302      	movs	r3, #2
 8001060:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001062:	2301      	movs	r3, #1
 8001064:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001066:	2310      	movs	r3, #16
 8001068:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800106a:	2300      	movs	r3, #0
 800106c:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800106e:	f107 0318 	add.w	r3, r7, #24
 8001072:	4618      	mov	r0, r3
 8001074:	f000 ff3c 	bl	8001ef0 <HAL_RCC_OscConfig>
 8001078:	4603      	mov	r3, r0
 800107a:	2b00      	cmp	r3, #0
 800107c:	d001      	beq.n	8001082 <SystemClock_Config+0x46>
  {
    Error_Handler();
 800107e:	f000 f8d5 	bl	800122c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001082:	230f      	movs	r3, #15
 8001084:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001086:	2300      	movs	r3, #0
 8001088:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800108a:	2300      	movs	r3, #0
 800108c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800108e:	2300      	movs	r3, #0
 8001090:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001092:	2300      	movs	r3, #0
 8001094:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001096:	1d3b      	adds	r3, r7, #4
 8001098:	2100      	movs	r1, #0
 800109a:	4618      	mov	r0, r3
 800109c:	f001 f9a8 	bl	80023f0 <HAL_RCC_ClockConfig>
 80010a0:	4603      	mov	r3, r0
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	d001      	beq.n	80010aa <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80010a6:	f000 f8c1 	bl	800122c <Error_Handler>
  }
}
 80010aa:	bf00      	nop
 80010ac:	3740      	adds	r7, #64	; 0x40
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bd80      	pop	{r7, pc}
	...

080010b4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b086      	sub	sp, #24
 80010b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80010ba:	f107 0308 	add.w	r3, r7, #8
 80010be:	2200      	movs	r2, #0
 80010c0:	601a      	str	r2, [r3, #0]
 80010c2:	605a      	str	r2, [r3, #4]
 80010c4:	609a      	str	r2, [r3, #8]
 80010c6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80010c8:	463b      	mov	r3, r7
 80010ca:	2200      	movs	r2, #0
 80010cc:	601a      	str	r2, [r3, #0]
 80010ce:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80010d0:	4b1d      	ldr	r3, [pc, #116]	; (8001148 <MX_TIM2_Init+0x94>)
 80010d2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80010d6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 80010d8:	4b1b      	ldr	r3, [pc, #108]	; (8001148 <MX_TIM2_Init+0x94>)
 80010da:	f641 723f 	movw	r2, #7999	; 0x1f3f
 80010de:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010e0:	4b19      	ldr	r3, [pc, #100]	; (8001148 <MX_TIM2_Init+0x94>)
 80010e2:	2200      	movs	r2, #0
 80010e4:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10;
 80010e6:	4b18      	ldr	r3, [pc, #96]	; (8001148 <MX_TIM2_Init+0x94>)
 80010e8:	220a      	movs	r2, #10
 80010ea:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010ec:	4b16      	ldr	r3, [pc, #88]	; (8001148 <MX_TIM2_Init+0x94>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80010f2:	4b15      	ldr	r3, [pc, #84]	; (8001148 <MX_TIM2_Init+0x94>)
 80010f4:	2200      	movs	r2, #0
 80010f6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80010f8:	4813      	ldr	r0, [pc, #76]	; (8001148 <MX_TIM2_Init+0x94>)
 80010fa:	f001 fae1 	bl	80026c0 <HAL_TIM_Base_Init>
 80010fe:	4603      	mov	r3, r0
 8001100:	2b00      	cmp	r3, #0
 8001102:	d001      	beq.n	8001108 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001104:	f000 f892 	bl	800122c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001108:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800110c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800110e:	f107 0308 	add.w	r3, r7, #8
 8001112:	4619      	mov	r1, r3
 8001114:	480c      	ldr	r0, [pc, #48]	; (8001148 <MX_TIM2_Init+0x94>)
 8001116:	f001 fc77 	bl	8002a08 <HAL_TIM_ConfigClockSource>
 800111a:	4603      	mov	r3, r0
 800111c:	2b00      	cmp	r3, #0
 800111e:	d001      	beq.n	8001124 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001120:	f000 f884 	bl	800122c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001124:	2300      	movs	r3, #0
 8001126:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001128:	2300      	movs	r3, #0
 800112a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800112c:	463b      	mov	r3, r7
 800112e:	4619      	mov	r1, r3
 8001130:	4805      	ldr	r0, [pc, #20]	; (8001148 <MX_TIM2_Init+0x94>)
 8001132:	f001 fe3f 	bl	8002db4 <HAL_TIMEx_MasterConfigSynchronization>
 8001136:	4603      	mov	r3, r0
 8001138:	2b00      	cmp	r3, #0
 800113a:	d001      	beq.n	8001140 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 800113c:	f000 f876 	bl	800122c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001140:	bf00      	nop
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bd80      	pop	{r7, pc}
 8001148:	200000e8 	.word	0x200000e8

0800114c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b086      	sub	sp, #24
 8001150:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001152:	f107 0308 	add.w	r3, r7, #8
 8001156:	2200      	movs	r2, #0
 8001158:	601a      	str	r2, [r3, #0]
 800115a:	605a      	str	r2, [r3, #4]
 800115c:	609a      	str	r2, [r3, #8]
 800115e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001160:	4b29      	ldr	r3, [pc, #164]	; (8001208 <MX_GPIO_Init+0xbc>)
 8001162:	699b      	ldr	r3, [r3, #24]
 8001164:	4a28      	ldr	r2, [pc, #160]	; (8001208 <MX_GPIO_Init+0xbc>)
 8001166:	f043 0304 	orr.w	r3, r3, #4
 800116a:	6193      	str	r3, [r2, #24]
 800116c:	4b26      	ldr	r3, [pc, #152]	; (8001208 <MX_GPIO_Init+0xbc>)
 800116e:	699b      	ldr	r3, [r3, #24]
 8001170:	f003 0304 	and.w	r3, r3, #4
 8001174:	607b      	str	r3, [r7, #4]
 8001176:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001178:	4b23      	ldr	r3, [pc, #140]	; (8001208 <MX_GPIO_Init+0xbc>)
 800117a:	699b      	ldr	r3, [r3, #24]
 800117c:	4a22      	ldr	r2, [pc, #136]	; (8001208 <MX_GPIO_Init+0xbc>)
 800117e:	f043 0308 	orr.w	r3, r3, #8
 8001182:	6193      	str	r3, [r2, #24]
 8001184:	4b20      	ldr	r3, [pc, #128]	; (8001208 <MX_GPIO_Init+0xbc>)
 8001186:	699b      	ldr	r3, [r3, #24]
 8001188:	f003 0308 	and.w	r3, r3, #8
 800118c:	603b      	str	r3, [r7, #0]
 800118e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, red1_Pin|amber1_Pin|green1_Pin|red2_Pin
 8001190:	2200      	movs	r2, #0
 8001192:	f24f 017e 	movw	r1, #61566	; 0xf07e
 8001196:	481d      	ldr	r0, [pc, #116]	; (800120c <MX_GPIO_Init+0xc0>)
 8001198:	f000 fe79 	bl	8001e8e <HAL_GPIO_WritePin>
                          |amber2_Pin|green2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, SEG1_0_Pin|SEG2_1_Pin|SEG2_2_Pin|SEG2_3_Pin
 800119c:	2200      	movs	r2, #0
 800119e:	f64f 71fc 	movw	r1, #65532	; 0xfffc
 80011a2:	481b      	ldr	r0, [pc, #108]	; (8001210 <MX_GPIO_Init+0xc4>)
 80011a4:	f000 fe73 	bl	8001e8e <HAL_GPIO_WritePin>
                          |SEG1_6_Pin|SEG2_0_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : red1_Pin amber1_Pin green1_Pin red2_Pin
                           amber2_Pin green2_Pin EN0_Pin EN1_Pin
                           EN2_Pin EN3_Pin */
  GPIO_InitStruct.Pin = red1_Pin|amber1_Pin|green1_Pin|red2_Pin
 80011a8:	f24f 037e 	movw	r3, #61566	; 0xf07e
 80011ac:	60bb      	str	r3, [r7, #8]
                          |amber2_Pin|green2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011ae:	2301      	movs	r3, #1
 80011b0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011b2:	2300      	movs	r3, #0
 80011b4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011b6:	2302      	movs	r3, #2
 80011b8:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011ba:	f107 0308 	add.w	r3, r7, #8
 80011be:	4619      	mov	r1, r3
 80011c0:	4812      	ldr	r0, [pc, #72]	; (800120c <MX_GPIO_Init+0xc0>)
 80011c2:	f000 fcd3 	bl	8001b6c <HAL_GPIO_Init>

  /*Configure GPIO pins : button1_Pin button2_Pin button3_Pin */
  GPIO_InitStruct.Pin = button1_Pin|button2_Pin|button3_Pin;
 80011c6:	f44f 7360 	mov.w	r3, #896	; 0x380
 80011ca:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80011cc:	2300      	movs	r3, #0
 80011ce:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011d0:	2300      	movs	r3, #0
 80011d2:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011d4:	f107 0308 	add.w	r3, r7, #8
 80011d8:	4619      	mov	r1, r3
 80011da:	480c      	ldr	r0, [pc, #48]	; (800120c <MX_GPIO_Init+0xc0>)
 80011dc:	f000 fcc6 	bl	8001b6c <HAL_GPIO_Init>

  /*Configure GPIO pins : SEG1_0_Pin SEG2_1_Pin SEG2_2_Pin SEG2_3_Pin
                           SEG2_4_Pin SEG2_5_Pin SEG2_6_Pin SEG1_1_Pin
                           SEG1_2_Pin SEG1_3_Pin SEG1_4_Pin SEG1_5_Pin
                           SEG1_6_Pin SEG2_0_Pin */
  GPIO_InitStruct.Pin = SEG1_0_Pin|SEG2_1_Pin|SEG2_2_Pin|SEG2_3_Pin
 80011e0:	f64f 73fc 	movw	r3, #65532	; 0xfffc
 80011e4:	60bb      	str	r3, [r7, #8]
                          |SEG2_4_Pin|SEG2_5_Pin|SEG2_6_Pin|SEG1_1_Pin
                          |SEG1_2_Pin|SEG1_3_Pin|SEG1_4_Pin|SEG1_5_Pin
                          |SEG1_6_Pin|SEG2_0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011e6:	2301      	movs	r3, #1
 80011e8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011ea:	2300      	movs	r3, #0
 80011ec:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011ee:	2302      	movs	r3, #2
 80011f0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80011f2:	f107 0308 	add.w	r3, r7, #8
 80011f6:	4619      	mov	r1, r3
 80011f8:	4805      	ldr	r0, [pc, #20]	; (8001210 <MX_GPIO_Init+0xc4>)
 80011fa:	f000 fcb7 	bl	8001b6c <HAL_GPIO_Init>

}
 80011fe:	bf00      	nop
 8001200:	3718      	adds	r7, #24
 8001202:	46bd      	mov	sp, r7
 8001204:	bd80      	pop	{r7, pc}
 8001206:	bf00      	nop
 8001208:	40021000 	.word	0x40021000
 800120c:	40010800 	.word	0x40010800
 8001210:	40010c00 	.word	0x40010c00

08001214 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback ( TIM_HandleTypeDef* htim ) {
 8001214:	b580      	push	{r7, lr}
 8001216:	b082      	sub	sp, #8
 8001218:	af00      	add	r7, sp, #0
 800121a:	6078      	str	r0, [r7, #4]
	timer_run();
 800121c:	f000 f91e 	bl	800145c <timer_run>
	getKeyInput();
 8001220:	f7ff f930 	bl	8000484 <getKeyInput>
}
 8001224:	bf00      	nop
 8001226:	3708      	adds	r7, #8
 8001228:	46bd      	mov	sp, r7
 800122a:	bd80      	pop	{r7, pc}

0800122c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800122c:	b480      	push	{r7}
 800122e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001230:	b672      	cpsid	i
}
 8001232:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001234:	e7fe      	b.n	8001234 <Error_Handler+0x8>
	...

08001238 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001238:	b480      	push	{r7}
 800123a:	b085      	sub	sp, #20
 800123c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800123e:	4b15      	ldr	r3, [pc, #84]	; (8001294 <HAL_MspInit+0x5c>)
 8001240:	699b      	ldr	r3, [r3, #24]
 8001242:	4a14      	ldr	r2, [pc, #80]	; (8001294 <HAL_MspInit+0x5c>)
 8001244:	f043 0301 	orr.w	r3, r3, #1
 8001248:	6193      	str	r3, [r2, #24]
 800124a:	4b12      	ldr	r3, [pc, #72]	; (8001294 <HAL_MspInit+0x5c>)
 800124c:	699b      	ldr	r3, [r3, #24]
 800124e:	f003 0301 	and.w	r3, r3, #1
 8001252:	60bb      	str	r3, [r7, #8]
 8001254:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001256:	4b0f      	ldr	r3, [pc, #60]	; (8001294 <HAL_MspInit+0x5c>)
 8001258:	69db      	ldr	r3, [r3, #28]
 800125a:	4a0e      	ldr	r2, [pc, #56]	; (8001294 <HAL_MspInit+0x5c>)
 800125c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001260:	61d3      	str	r3, [r2, #28]
 8001262:	4b0c      	ldr	r3, [pc, #48]	; (8001294 <HAL_MspInit+0x5c>)
 8001264:	69db      	ldr	r3, [r3, #28]
 8001266:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800126a:	607b      	str	r3, [r7, #4]
 800126c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 800126e:	4b0a      	ldr	r3, [pc, #40]	; (8001298 <HAL_MspInit+0x60>)
 8001270:	685b      	ldr	r3, [r3, #4]
 8001272:	60fb      	str	r3, [r7, #12]
 8001274:	68fb      	ldr	r3, [r7, #12]
 8001276:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001282:	60fb      	str	r3, [r7, #12]
 8001284:	4a04      	ldr	r2, [pc, #16]	; (8001298 <HAL_MspInit+0x60>)
 8001286:	68fb      	ldr	r3, [r7, #12]
 8001288:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800128a:	bf00      	nop
 800128c:	3714      	adds	r7, #20
 800128e:	46bd      	mov	sp, r7
 8001290:	bc80      	pop	{r7}
 8001292:	4770      	bx	lr
 8001294:	40021000 	.word	0x40021000
 8001298:	40010000 	.word	0x40010000

0800129c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800129c:	b580      	push	{r7, lr}
 800129e:	b084      	sub	sp, #16
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80012ac:	d113      	bne.n	80012d6 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80012ae:	4b0c      	ldr	r3, [pc, #48]	; (80012e0 <HAL_TIM_Base_MspInit+0x44>)
 80012b0:	69db      	ldr	r3, [r3, #28]
 80012b2:	4a0b      	ldr	r2, [pc, #44]	; (80012e0 <HAL_TIM_Base_MspInit+0x44>)
 80012b4:	f043 0301 	orr.w	r3, r3, #1
 80012b8:	61d3      	str	r3, [r2, #28]
 80012ba:	4b09      	ldr	r3, [pc, #36]	; (80012e0 <HAL_TIM_Base_MspInit+0x44>)
 80012bc:	69db      	ldr	r3, [r3, #28]
 80012be:	f003 0301 	and.w	r3, r3, #1
 80012c2:	60fb      	str	r3, [r7, #12]
 80012c4:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80012c6:	2200      	movs	r2, #0
 80012c8:	2100      	movs	r1, #0
 80012ca:	201c      	movs	r0, #28
 80012cc:	f000 fc17 	bl	8001afe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80012d0:	201c      	movs	r0, #28
 80012d2:	f000 fc30 	bl	8001b36 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80012d6:	bf00      	nop
 80012d8:	3710      	adds	r7, #16
 80012da:	46bd      	mov	sp, r7
 80012dc:	bd80      	pop	{r7, pc}
 80012de:	bf00      	nop
 80012e0:	40021000 	.word	0x40021000

080012e4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80012e4:	b480      	push	{r7}
 80012e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80012e8:	e7fe      	b.n	80012e8 <NMI_Handler+0x4>

080012ea <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80012ea:	b480      	push	{r7}
 80012ec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80012ee:	e7fe      	b.n	80012ee <HardFault_Handler+0x4>

080012f0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80012f0:	b480      	push	{r7}
 80012f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80012f4:	e7fe      	b.n	80012f4 <MemManage_Handler+0x4>

080012f6 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80012f6:	b480      	push	{r7}
 80012f8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80012fa:	e7fe      	b.n	80012fa <BusFault_Handler+0x4>

080012fc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80012fc:	b480      	push	{r7}
 80012fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001300:	e7fe      	b.n	8001300 <UsageFault_Handler+0x4>

08001302 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001302:	b480      	push	{r7}
 8001304:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001306:	bf00      	nop
 8001308:	46bd      	mov	sp, r7
 800130a:	bc80      	pop	{r7}
 800130c:	4770      	bx	lr

0800130e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800130e:	b480      	push	{r7}
 8001310:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001312:	bf00      	nop
 8001314:	46bd      	mov	sp, r7
 8001316:	bc80      	pop	{r7}
 8001318:	4770      	bx	lr

0800131a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800131a:	b480      	push	{r7}
 800131c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800131e:	bf00      	nop
 8001320:	46bd      	mov	sp, r7
 8001322:	bc80      	pop	{r7}
 8001324:	4770      	bx	lr

08001326 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001326:	b580      	push	{r7, lr}
 8001328:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800132a:	f000 faf5 	bl	8001918 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800132e:	bf00      	nop
 8001330:	bd80      	pop	{r7, pc}
	...

08001334 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001334:	b580      	push	{r7, lr}
 8001336:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001338:	4802      	ldr	r0, [pc, #8]	; (8001344 <TIM2_IRQHandler+0x10>)
 800133a:	f001 fa5d 	bl	80027f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800133e:	bf00      	nop
 8001340:	bd80      	pop	{r7, pc}
 8001342:	bf00      	nop
 8001344:	200000e8 	.word	0x200000e8

08001348 <SystemInit>:
 8001348:	b480      	push	{r7}
 800134a:	af00      	add	r7, sp, #0
 800134c:	bf00      	nop
 800134e:	46bd      	mov	sp, r7
 8001350:	bc80      	pop	{r7}
 8001352:	4770      	bx	lr

08001354 <setTimer0>:
int timer5_counter = 0;
int timer6_counter = 0;

const int TIMER_CYCLE = 10;

void setTimer0(int duration){
 8001354:	b480      	push	{r7}
 8001356:	b083      	sub	sp, #12
 8001358:	af00      	add	r7, sp, #0
 800135a:	6078      	str	r0, [r7, #4]
	 timer0_counter = duration / TIMER_CYCLE ;
 800135c:	220a      	movs	r2, #10
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	fb93 f3f2 	sdiv	r3, r3, r2
 8001364:	4a04      	ldr	r2, [pc, #16]	; (8001378 <setTimer0+0x24>)
 8001366:	6013      	str	r3, [r2, #0]
	 timer_flag0 = 0;
 8001368:	4b04      	ldr	r3, [pc, #16]	; (800137c <setTimer0+0x28>)
 800136a:	2200      	movs	r2, #0
 800136c:	601a      	str	r2, [r3, #0]
}
 800136e:	bf00      	nop
 8001370:	370c      	adds	r7, #12
 8001372:	46bd      	mov	sp, r7
 8001374:	bc80      	pop	{r7}
 8001376:	4770      	bx	lr
 8001378:	200000c4 	.word	0x200000c4
 800137c:	200000a8 	.word	0x200000a8

08001380 <setTimer1>:
void setTimer1(int duration){
 8001380:	b480      	push	{r7}
 8001382:	b083      	sub	sp, #12
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
	 timer1_counter = duration/ TIMER_CYCLE ;
 8001388:	220a      	movs	r2, #10
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001390:	4a04      	ldr	r2, [pc, #16]	; (80013a4 <setTimer1+0x24>)
 8001392:	6013      	str	r3, [r2, #0]
	 timer_flag1 = 0;
 8001394:	4b04      	ldr	r3, [pc, #16]	; (80013a8 <setTimer1+0x28>)
 8001396:	2200      	movs	r2, #0
 8001398:	601a      	str	r2, [r3, #0]
}
 800139a:	bf00      	nop
 800139c:	370c      	adds	r7, #12
 800139e:	46bd      	mov	sp, r7
 80013a0:	bc80      	pop	{r7}
 80013a2:	4770      	bx	lr
 80013a4:	200000c8 	.word	0x200000c8
 80013a8:	200000ac 	.word	0x200000ac

080013ac <setTimer2>:
void setTimer2(int duration){
 80013ac:	b480      	push	{r7}
 80013ae:	b083      	sub	sp, #12
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TIMER_CYCLE;
 80013b4:	220a      	movs	r2, #10
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	fb93 f3f2 	sdiv	r3, r3, r2
 80013bc:	4a04      	ldr	r2, [pc, #16]	; (80013d0 <setTimer2+0x24>)
 80013be:	6013      	str	r3, [r2, #0]
	timer_flag2 = 0;
 80013c0:	4b04      	ldr	r3, [pc, #16]	; (80013d4 <setTimer2+0x28>)
 80013c2:	2200      	movs	r2, #0
 80013c4:	601a      	str	r2, [r3, #0]
}
 80013c6:	bf00      	nop
 80013c8:	370c      	adds	r7, #12
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bc80      	pop	{r7}
 80013ce:	4770      	bx	lr
 80013d0:	200000cc 	.word	0x200000cc
 80013d4:	200000b0 	.word	0x200000b0

080013d8 <setTimer4>:
void setTimer3(int duration){
	 timer3_counter = duration / TIMER_CYCLE ;
	 timer_flag3 = 0;
}
void setTimer4(int duration){
 80013d8:	b480      	push	{r7}
 80013da:	b083      	sub	sp, #12
 80013dc:	af00      	add	r7, sp, #0
 80013de:	6078      	str	r0, [r7, #4]
	 timer4_counter = duration/ TIMER_CYCLE ;
 80013e0:	220a      	movs	r2, #10
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	fb93 f3f2 	sdiv	r3, r3, r2
 80013e8:	4a04      	ldr	r2, [pc, #16]	; (80013fc <setTimer4+0x24>)
 80013ea:	6013      	str	r3, [r2, #0]
	 timer_flag4 = 0;
 80013ec:	4b04      	ldr	r3, [pc, #16]	; (8001400 <setTimer4+0x28>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	601a      	str	r2, [r3, #0]
}
 80013f2:	bf00      	nop
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bc80      	pop	{r7}
 80013fa:	4770      	bx	lr
 80013fc:	200000d4 	.word	0x200000d4
 8001400:	200000b8 	.word	0x200000b8

08001404 <setTimer5>:
void setTimer5(int duration){
 8001404:	b480      	push	{r7}
 8001406:	b083      	sub	sp, #12
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
	timer5_counter = duration/TIMER_CYCLE;
 800140c:	220a      	movs	r2, #10
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	fb93 f3f2 	sdiv	r3, r3, r2
 8001414:	4a04      	ldr	r2, [pc, #16]	; (8001428 <setTimer5+0x24>)
 8001416:	6013      	str	r3, [r2, #0]
	timer_flag5 = 0;
 8001418:	4b04      	ldr	r3, [pc, #16]	; (800142c <setTimer5+0x28>)
 800141a:	2200      	movs	r2, #0
 800141c:	601a      	str	r2, [r3, #0]
}
 800141e:	bf00      	nop
 8001420:	370c      	adds	r7, #12
 8001422:	46bd      	mov	sp, r7
 8001424:	bc80      	pop	{r7}
 8001426:	4770      	bx	lr
 8001428:	200000d8 	.word	0x200000d8
 800142c:	200000bc 	.word	0x200000bc

08001430 <setTimer6>:
void setTimer6(int duration){
 8001430:	b480      	push	{r7}
 8001432:	b083      	sub	sp, #12
 8001434:	af00      	add	r7, sp, #0
 8001436:	6078      	str	r0, [r7, #4]
	timer6_counter = duration/TIMER_CYCLE;
 8001438:	220a      	movs	r2, #10
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001440:	4a04      	ldr	r2, [pc, #16]	; (8001454 <setTimer6+0x24>)
 8001442:	6013      	str	r3, [r2, #0]
	timer_flag6 = 0;
 8001444:	4b04      	ldr	r3, [pc, #16]	; (8001458 <setTimer6+0x28>)
 8001446:	2200      	movs	r2, #0
 8001448:	601a      	str	r2, [r3, #0]
}
 800144a:	bf00      	nop
 800144c:	370c      	adds	r7, #12
 800144e:	46bd      	mov	sp, r7
 8001450:	bc80      	pop	{r7}
 8001452:	4770      	bx	lr
 8001454:	200000dc 	.word	0x200000dc
 8001458:	200000c0 	.word	0x200000c0

0800145c <timer_run>:
void timer_run() {
 800145c:	b480      	push	{r7}
 800145e:	af00      	add	r7, sp, #0
	 if( timer0_counter > 0) {
 8001460:	4b39      	ldr	r3, [pc, #228]	; (8001548 <timer_run+0xec>)
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	2b00      	cmp	r3, #0
 8001466:	dd0b      	ble.n	8001480 <timer_run+0x24>
		 timer0_counter--;
 8001468:	4b37      	ldr	r3, [pc, #220]	; (8001548 <timer_run+0xec>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	3b01      	subs	r3, #1
 800146e:	4a36      	ldr	r2, [pc, #216]	; (8001548 <timer_run+0xec>)
 8001470:	6013      	str	r3, [r2, #0]
		 if( timer0_counter == 0) timer_flag0 = 1;
 8001472:	4b35      	ldr	r3, [pc, #212]	; (8001548 <timer_run+0xec>)
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	2b00      	cmp	r3, #0
 8001478:	d102      	bne.n	8001480 <timer_run+0x24>
 800147a:	4b34      	ldr	r3, [pc, #208]	; (800154c <timer_run+0xf0>)
 800147c:	2201      	movs	r2, #1
 800147e:	601a      	str	r2, [r3, #0]
	 }

	 if( timer1_counter > 0) {
 8001480:	4b33      	ldr	r3, [pc, #204]	; (8001550 <timer_run+0xf4>)
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	2b00      	cmp	r3, #0
 8001486:	dd0b      	ble.n	80014a0 <timer_run+0x44>
		 timer1_counter--;
 8001488:	4b31      	ldr	r3, [pc, #196]	; (8001550 <timer_run+0xf4>)
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	3b01      	subs	r3, #1
 800148e:	4a30      	ldr	r2, [pc, #192]	; (8001550 <timer_run+0xf4>)
 8001490:	6013      	str	r3, [r2, #0]
		 if( timer1_counter == 0) timer_flag1 = 1;
 8001492:	4b2f      	ldr	r3, [pc, #188]	; (8001550 <timer_run+0xf4>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	2b00      	cmp	r3, #0
 8001498:	d102      	bne.n	80014a0 <timer_run+0x44>
 800149a:	4b2e      	ldr	r3, [pc, #184]	; (8001554 <timer_run+0xf8>)
 800149c:	2201      	movs	r2, #1
 800149e:	601a      	str	r2, [r3, #0]
	 }
	 if(timer2_counter>0){
 80014a0:	4b2d      	ldr	r3, [pc, #180]	; (8001558 <timer_run+0xfc>)
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	dd0b      	ble.n	80014c0 <timer_run+0x64>
		 timer2_counter--;
 80014a8:	4b2b      	ldr	r3, [pc, #172]	; (8001558 <timer_run+0xfc>)
 80014aa:	681b      	ldr	r3, [r3, #0]
 80014ac:	3b01      	subs	r3, #1
 80014ae:	4a2a      	ldr	r2, [pc, #168]	; (8001558 <timer_run+0xfc>)
 80014b0:	6013      	str	r3, [r2, #0]
		 if(timer2_counter == 0) timer_flag2 = 1;
 80014b2:	4b29      	ldr	r3, [pc, #164]	; (8001558 <timer_run+0xfc>)
 80014b4:	681b      	ldr	r3, [r3, #0]
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d102      	bne.n	80014c0 <timer_run+0x64>
 80014ba:	4b28      	ldr	r3, [pc, #160]	; (800155c <timer_run+0x100>)
 80014bc:	2201      	movs	r2, #1
 80014be:	601a      	str	r2, [r3, #0]
	 }
	 if( timer3_counter > 0) {
 80014c0:	4b27      	ldr	r3, [pc, #156]	; (8001560 <timer_run+0x104>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	dd0b      	ble.n	80014e0 <timer_run+0x84>
		 timer3_counter--;
 80014c8:	4b25      	ldr	r3, [pc, #148]	; (8001560 <timer_run+0x104>)
 80014ca:	681b      	ldr	r3, [r3, #0]
 80014cc:	3b01      	subs	r3, #1
 80014ce:	4a24      	ldr	r2, [pc, #144]	; (8001560 <timer_run+0x104>)
 80014d0:	6013      	str	r3, [r2, #0]
		 if( timer3_counter == 0) timer_flag3 = 1;
 80014d2:	4b23      	ldr	r3, [pc, #140]	; (8001560 <timer_run+0x104>)
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d102      	bne.n	80014e0 <timer_run+0x84>
 80014da:	4b22      	ldr	r3, [pc, #136]	; (8001564 <timer_run+0x108>)
 80014dc:	2201      	movs	r2, #1
 80014de:	601a      	str	r2, [r3, #0]
	 }

	 if( timer4_counter > 0) {
 80014e0:	4b21      	ldr	r3, [pc, #132]	; (8001568 <timer_run+0x10c>)
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	dd0b      	ble.n	8001500 <timer_run+0xa4>
		 timer4_counter--;
 80014e8:	4b1f      	ldr	r3, [pc, #124]	; (8001568 <timer_run+0x10c>)
 80014ea:	681b      	ldr	r3, [r3, #0]
 80014ec:	3b01      	subs	r3, #1
 80014ee:	4a1e      	ldr	r2, [pc, #120]	; (8001568 <timer_run+0x10c>)
 80014f0:	6013      	str	r3, [r2, #0]
		 if( timer4_counter == 0) timer_flag4 = 1;
 80014f2:	4b1d      	ldr	r3, [pc, #116]	; (8001568 <timer_run+0x10c>)
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d102      	bne.n	8001500 <timer_run+0xa4>
 80014fa:	4b1c      	ldr	r3, [pc, #112]	; (800156c <timer_run+0x110>)
 80014fc:	2201      	movs	r2, #1
 80014fe:	601a      	str	r2, [r3, #0]
	 }
	 if(timer5_counter>0){
 8001500:	4b1b      	ldr	r3, [pc, #108]	; (8001570 <timer_run+0x114>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	2b00      	cmp	r3, #0
 8001506:	dd0b      	ble.n	8001520 <timer_run+0xc4>
		 timer5_counter--;
 8001508:	4b19      	ldr	r3, [pc, #100]	; (8001570 <timer_run+0x114>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	3b01      	subs	r3, #1
 800150e:	4a18      	ldr	r2, [pc, #96]	; (8001570 <timer_run+0x114>)
 8001510:	6013      	str	r3, [r2, #0]
		 if(timer5_counter == 0) timer_flag5 = 1;
 8001512:	4b17      	ldr	r3, [pc, #92]	; (8001570 <timer_run+0x114>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	2b00      	cmp	r3, #0
 8001518:	d102      	bne.n	8001520 <timer_run+0xc4>
 800151a:	4b16      	ldr	r3, [pc, #88]	; (8001574 <timer_run+0x118>)
 800151c:	2201      	movs	r2, #1
 800151e:	601a      	str	r2, [r3, #0]
	 }
	 if(timer6_counter>0){
 8001520:	4b15      	ldr	r3, [pc, #84]	; (8001578 <timer_run+0x11c>)
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	2b00      	cmp	r3, #0
 8001526:	dd0b      	ble.n	8001540 <timer_run+0xe4>
		 timer6_counter--;
 8001528:	4b13      	ldr	r3, [pc, #76]	; (8001578 <timer_run+0x11c>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	3b01      	subs	r3, #1
 800152e:	4a12      	ldr	r2, [pc, #72]	; (8001578 <timer_run+0x11c>)
 8001530:	6013      	str	r3, [r2, #0]
		 if(timer6_counter == 0) timer_flag6 = 1;
 8001532:	4b11      	ldr	r3, [pc, #68]	; (8001578 <timer_run+0x11c>)
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	2b00      	cmp	r3, #0
 8001538:	d102      	bne.n	8001540 <timer_run+0xe4>
 800153a:	4b10      	ldr	r3, [pc, #64]	; (800157c <timer_run+0x120>)
 800153c:	2201      	movs	r2, #1
 800153e:	601a      	str	r2, [r3, #0]
	 }

 }
 8001540:	bf00      	nop
 8001542:	46bd      	mov	sp, r7
 8001544:	bc80      	pop	{r7}
 8001546:	4770      	bx	lr
 8001548:	200000c4 	.word	0x200000c4
 800154c:	200000a8 	.word	0x200000a8
 8001550:	200000c8 	.word	0x200000c8
 8001554:	200000ac 	.word	0x200000ac
 8001558:	200000cc 	.word	0x200000cc
 800155c:	200000b0 	.word	0x200000b0
 8001560:	200000d0 	.word	0x200000d0
 8001564:	200000b4 	.word	0x200000b4
 8001568:	200000d4 	.word	0x200000d4
 800156c:	200000b8 	.word	0x200000b8
 8001570:	200000d8 	.word	0x200000d8
 8001574:	200000bc 	.word	0x200000bc
 8001578:	200000dc 	.word	0x200000dc
 800157c:	200000c0 	.word	0x200000c0

08001580 <red1Control>:
#include "led_display.h"
#include "global.h"
#include "main.h"
#include "timer.h"

void red1Control(){
 8001580:	b580      	push	{r7, lr}
 8001582:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 0);
 8001584:	2200      	movs	r2, #0
 8001586:	2102      	movs	r1, #2
 8001588:	4807      	ldr	r0, [pc, #28]	; (80015a8 <red1Control+0x28>)
 800158a:	f000 fc80 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 800158e:	2201      	movs	r2, #1
 8001590:	2104      	movs	r1, #4
 8001592:	4805      	ldr	r0, [pc, #20]	; (80015a8 <red1Control+0x28>)
 8001594:	f000 fc7b 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 8001598:	2201      	movs	r2, #1
 800159a:	2108      	movs	r1, #8
 800159c:	4802      	ldr	r0, [pc, #8]	; (80015a8 <red1Control+0x28>)
 800159e:	f000 fc76 	bl	8001e8e <HAL_GPIO_WritePin>
}
 80015a2:	bf00      	nop
 80015a4:	bd80      	pop	{r7, pc}
 80015a6:	bf00      	nop
 80015a8:	40010800 	.word	0x40010800

080015ac <red2Control>:
void red2Control(){
 80015ac:	b580      	push	{r7, lr}
 80015ae:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 0);
 80015b0:	2200      	movs	r2, #0
 80015b2:	2110      	movs	r1, #16
 80015b4:	4807      	ldr	r0, [pc, #28]	; (80015d4 <red2Control+0x28>)
 80015b6:	f000 fc6a 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 80015ba:	2201      	movs	r2, #1
 80015bc:	2120      	movs	r1, #32
 80015be:	4805      	ldr	r0, [pc, #20]	; (80015d4 <red2Control+0x28>)
 80015c0:	f000 fc65 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 80015c4:	2201      	movs	r2, #1
 80015c6:	2140      	movs	r1, #64	; 0x40
 80015c8:	4802      	ldr	r0, [pc, #8]	; (80015d4 <red2Control+0x28>)
 80015ca:	f000 fc60 	bl	8001e8e <HAL_GPIO_WritePin>
}
 80015ce:	bf00      	nop
 80015d0:	bd80      	pop	{r7, pc}
 80015d2:	bf00      	nop
 80015d4:	40010800 	.word	0x40010800

080015d8 <amber1Control>:
void amber1Control(){
 80015d8:	b580      	push	{r7, lr}
 80015da:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 80015dc:	2201      	movs	r2, #1
 80015de:	2102      	movs	r1, #2
 80015e0:	4807      	ldr	r0, [pc, #28]	; (8001600 <amber1Control+0x28>)
 80015e2:	f000 fc54 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 0);
 80015e6:	2200      	movs	r2, #0
 80015e8:	2104      	movs	r1, #4
 80015ea:	4805      	ldr	r0, [pc, #20]	; (8001600 <amber1Control+0x28>)
 80015ec:	f000 fc4f 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 1);
 80015f0:	2201      	movs	r2, #1
 80015f2:	2108      	movs	r1, #8
 80015f4:	4802      	ldr	r0, [pc, #8]	; (8001600 <amber1Control+0x28>)
 80015f6:	f000 fc4a 	bl	8001e8e <HAL_GPIO_WritePin>
}
 80015fa:	bf00      	nop
 80015fc:	bd80      	pop	{r7, pc}
 80015fe:	bf00      	nop
 8001600:	40010800 	.word	0x40010800

08001604 <amber2Control>:
void amber2Control(){
 8001604:	b580      	push	{r7, lr}
 8001606:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 8001608:	2201      	movs	r2, #1
 800160a:	2110      	movs	r1, #16
 800160c:	4807      	ldr	r0, [pc, #28]	; (800162c <amber2Control+0x28>)
 800160e:	f000 fc3e 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 0);
 8001612:	2200      	movs	r2, #0
 8001614:	2120      	movs	r1, #32
 8001616:	4805      	ldr	r0, [pc, #20]	; (800162c <amber2Control+0x28>)
 8001618:	f000 fc39 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 1);
 800161c:	2201      	movs	r2, #1
 800161e:	2140      	movs	r1, #64	; 0x40
 8001620:	4802      	ldr	r0, [pc, #8]	; (800162c <amber2Control+0x28>)
 8001622:	f000 fc34 	bl	8001e8e <HAL_GPIO_WritePin>
}
 8001626:	bf00      	nop
 8001628:	bd80      	pop	{r7, pc}
 800162a:	bf00      	nop
 800162c:	40010800 	.word	0x40010800

08001630 <green1Control>:
void green1Control(){
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(red1_GPIO_Port, red1_Pin, 1);
 8001634:	2201      	movs	r2, #1
 8001636:	2102      	movs	r1, #2
 8001638:	4807      	ldr	r0, [pc, #28]	; (8001658 <green1Control+0x28>)
 800163a:	f000 fc28 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber1_GPIO_Port, amber1_Pin, 1);
 800163e:	2201      	movs	r2, #1
 8001640:	2104      	movs	r1, #4
 8001642:	4805      	ldr	r0, [pc, #20]	; (8001658 <green1Control+0x28>)
 8001644:	f000 fc23 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green1_GPIO_Port, green1_Pin, 0);
 8001648:	2200      	movs	r2, #0
 800164a:	2108      	movs	r1, #8
 800164c:	4802      	ldr	r0, [pc, #8]	; (8001658 <green1Control+0x28>)
 800164e:	f000 fc1e 	bl	8001e8e <HAL_GPIO_WritePin>
}
 8001652:	bf00      	nop
 8001654:	bd80      	pop	{r7, pc}
 8001656:	bf00      	nop
 8001658:	40010800 	.word	0x40010800

0800165c <green2Control>:
void green2Control(){
 800165c:	b580      	push	{r7, lr}
 800165e:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(red2_GPIO_Port, red2_Pin, 1);
 8001660:	2201      	movs	r2, #1
 8001662:	2110      	movs	r1, #16
 8001664:	4807      	ldr	r0, [pc, #28]	; (8001684 <green2Control+0x28>)
 8001666:	f000 fc12 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(amber2_GPIO_Port, amber2_Pin, 1);
 800166a:	2201      	movs	r2, #1
 800166c:	2120      	movs	r1, #32
 800166e:	4805      	ldr	r0, [pc, #20]	; (8001684 <green2Control+0x28>)
 8001670:	f000 fc0d 	bl	8001e8e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(green2_GPIO_Port, green2_Pin, 0);
 8001674:	2200      	movs	r2, #0
 8001676:	2140      	movs	r1, #64	; 0x40
 8001678:	4802      	ldr	r0, [pc, #8]	; (8001684 <green2Control+0x28>)
 800167a:	f000 fc08 	bl	8001e8e <HAL_GPIO_WritePin>
}
 800167e:	bf00      	nop
 8001680:	bd80      	pop	{r7, pc}
 8001682:	bf00      	nop
 8001684:	40010800 	.word	0x40010800

08001688 <fsm_automatic_1>:


void fsm_automatic_1(){
 8001688:	b580      	push	{r7, lr}
 800168a:	af00      	add	r7, sp, #0
	switch(status1){
 800168c:	4b30      	ldr	r3, [pc, #192]	; (8001750 <fsm_automatic_1+0xc8>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	3b01      	subs	r3, #1
 8001692:	2b03      	cmp	r3, #3
 8001694:	d852      	bhi.n	800173c <fsm_automatic_1+0xb4>
 8001696:	a201      	add	r2, pc, #4	; (adr r2, 800169c <fsm_automatic_1+0x14>)
 8001698:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800169c:	080016ad 	.word	0x080016ad
 80016a0:	080016cb 	.word	0x080016cb
 80016a4:	080016f1 	.word	0x080016f1
 80016a8:	08001717 	.word	0x08001717
		case INIT1:
			status1 = AUTO_RED1;
 80016ac:	4b28      	ldr	r3, [pc, #160]	; (8001750 <fsm_automatic_1+0xc8>)
 80016ae:	2202      	movs	r2, #2
 80016b0:	601a      	str	r2, [r3, #0]
			red1Control();
 80016b2:	f7ff ff65 	bl	8001580 <red1Control>
			setTimer0(time_red*1000);
 80016b6:	4b27      	ldr	r3, [pc, #156]	; (8001754 <fsm_automatic_1+0xcc>)
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80016be:	fb02 f303 	mul.w	r3, r2, r3
 80016c2:	4618      	mov	r0, r3
 80016c4:	f7ff fe46 	bl	8001354 <setTimer0>
			break;
 80016c8:	e03f      	b.n	800174a <fsm_automatic_1+0xc2>
		case AUTO_RED1:
			if(timer_flag0 == 1){
 80016ca:	4b23      	ldr	r3, [pc, #140]	; (8001758 <fsm_automatic_1+0xd0>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	2b01      	cmp	r3, #1
 80016d0:	d136      	bne.n	8001740 <fsm_automatic_1+0xb8>
				status1 = AUTO_GREEN1;
 80016d2:	4b1f      	ldr	r3, [pc, #124]	; (8001750 <fsm_automatic_1+0xc8>)
 80016d4:	2203      	movs	r2, #3
 80016d6:	601a      	str	r2, [r3, #0]
				green1Control();
 80016d8:	f7ff ffaa 	bl	8001630 <green1Control>
				setTimer0(time_green*1000);
 80016dc:	4b1f      	ldr	r3, [pc, #124]	; (800175c <fsm_automatic_1+0xd4>)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80016e4:	fb02 f303 	mul.w	r3, r2, r3
 80016e8:	4618      	mov	r0, r3
 80016ea:	f7ff fe33 	bl	8001354 <setTimer0>
			}
			break;
 80016ee:	e027      	b.n	8001740 <fsm_automatic_1+0xb8>
		case AUTO_GREEN1:
			if(timer_flag0 == 1){
 80016f0:	4b19      	ldr	r3, [pc, #100]	; (8001758 <fsm_automatic_1+0xd0>)
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	2b01      	cmp	r3, #1
 80016f6:	d125      	bne.n	8001744 <fsm_automatic_1+0xbc>
				status1 = AUTO_YELLOW1;
 80016f8:	4b15      	ldr	r3, [pc, #84]	; (8001750 <fsm_automatic_1+0xc8>)
 80016fa:	2204      	movs	r2, #4
 80016fc:	601a      	str	r2, [r3, #0]
				amber1Control();
 80016fe:	f7ff ff6b 	bl	80015d8 <amber1Control>
				setTimer0(time_amber*1000);
 8001702:	4b17      	ldr	r3, [pc, #92]	; (8001760 <fsm_automatic_1+0xd8>)
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800170a:	fb02 f303 	mul.w	r3, r2, r3
 800170e:	4618      	mov	r0, r3
 8001710:	f7ff fe20 	bl	8001354 <setTimer0>
			}
			break;
 8001714:	e016      	b.n	8001744 <fsm_automatic_1+0xbc>
		case AUTO_YELLOW1:
			if(timer_flag0 == 1){
 8001716:	4b10      	ldr	r3, [pc, #64]	; (8001758 <fsm_automatic_1+0xd0>)
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	2b01      	cmp	r3, #1
 800171c:	d114      	bne.n	8001748 <fsm_automatic_1+0xc0>
				status1 = INIT1;
 800171e:	4b0c      	ldr	r3, [pc, #48]	; (8001750 <fsm_automatic_1+0xc8>)
 8001720:	2201      	movs	r2, #1
 8001722:	601a      	str	r2, [r3, #0]
                red1Control();
 8001724:	f7ff ff2c 	bl	8001580 <red1Control>
                setTimer0(time_red*1000);
 8001728:	4b0a      	ldr	r3, [pc, #40]	; (8001754 <fsm_automatic_1+0xcc>)
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001730:	fb02 f303 	mul.w	r3, r2, r3
 8001734:	4618      	mov	r0, r3
 8001736:	f7ff fe0d 	bl	8001354 <setTimer0>
			}
			break;
 800173a:	e005      	b.n	8001748 <fsm_automatic_1+0xc0>
		default:
			break;
 800173c:	bf00      	nop
 800173e:	e004      	b.n	800174a <fsm_automatic_1+0xc2>
			break;
 8001740:	bf00      	nop
 8001742:	e002      	b.n	800174a <fsm_automatic_1+0xc2>
			break;
 8001744:	bf00      	nop
 8001746:	e000      	b.n	800174a <fsm_automatic_1+0xc2>
			break;
 8001748:	bf00      	nop
	}
}
 800174a:	bf00      	nop
 800174c:	bd80      	pop	{r7, pc}
 800174e:	bf00      	nop
 8001750:	20000000 	.word	0x20000000
 8001754:	20000020 	.word	0x20000020
 8001758:	200000a8 	.word	0x200000a8
 800175c:	20000028 	.word	0x20000028
 8001760:	20000024 	.word	0x20000024

08001764 <fsm_automatic_2>:

void fsm_automatic_2(){
 8001764:	b580      	push	{r7, lr}
 8001766:	af00      	add	r7, sp, #0
	switch(status2){
 8001768:	4b30      	ldr	r3, [pc, #192]	; (800182c <fsm_automatic_2+0xc8>)
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	3b01      	subs	r3, #1
 800176e:	2b03      	cmp	r3, #3
 8001770:	d852      	bhi.n	8001818 <fsm_automatic_2+0xb4>
 8001772:	a201      	add	r2, pc, #4	; (adr r2, 8001778 <fsm_automatic_2+0x14>)
 8001774:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001778:	08001789 	.word	0x08001789
 800177c:	080017a7 	.word	0x080017a7
 8001780:	080017cd 	.word	0x080017cd
 8001784:	080017f3 	.word	0x080017f3
		case INIT2:
			status2 = AUTO_GREEN2;
 8001788:	4b28      	ldr	r3, [pc, #160]	; (800182c <fsm_automatic_2+0xc8>)
 800178a:	2202      	movs	r2, #2
 800178c:	601a      	str	r2, [r3, #0]
			green2Control();
 800178e:	f7ff ff65 	bl	800165c <green2Control>
			setTimer1(time_green*1000);
 8001792:	4b27      	ldr	r3, [pc, #156]	; (8001830 <fsm_automatic_2+0xcc>)
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800179a:	fb02 f303 	mul.w	r3, r2, r3
 800179e:	4618      	mov	r0, r3
 80017a0:	f7ff fdee 	bl	8001380 <setTimer1>
			break;
 80017a4:	e03f      	b.n	8001826 <fsm_automatic_2+0xc2>
		case AUTO_GREEN2:
			if(timer_flag1 == 1){
 80017a6:	4b23      	ldr	r3, [pc, #140]	; (8001834 <fsm_automatic_2+0xd0>)
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	2b01      	cmp	r3, #1
 80017ac:	d136      	bne.n	800181c <fsm_automatic_2+0xb8>
				status2 = AUTO_YELLOW2;
 80017ae:	4b1f      	ldr	r3, [pc, #124]	; (800182c <fsm_automatic_2+0xc8>)
 80017b0:	2203      	movs	r2, #3
 80017b2:	601a      	str	r2, [r3, #0]
				amber2Control();
 80017b4:	f7ff ff26 	bl	8001604 <amber2Control>
				setTimer1(time_amber*1000);
 80017b8:	4b1f      	ldr	r3, [pc, #124]	; (8001838 <fsm_automatic_2+0xd4>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80017c0:	fb02 f303 	mul.w	r3, r2, r3
 80017c4:	4618      	mov	r0, r3
 80017c6:	f7ff fddb 	bl	8001380 <setTimer1>
			}
			break;
 80017ca:	e027      	b.n	800181c <fsm_automatic_2+0xb8>
		case AUTO_YELLOW2:
			if(timer_flag1 == 1){
 80017cc:	4b19      	ldr	r3, [pc, #100]	; (8001834 <fsm_automatic_2+0xd0>)
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	2b01      	cmp	r3, #1
 80017d2:	d125      	bne.n	8001820 <fsm_automatic_2+0xbc>
				status2 = AUTO_RED2;
 80017d4:	4b15      	ldr	r3, [pc, #84]	; (800182c <fsm_automatic_2+0xc8>)
 80017d6:	2204      	movs	r2, #4
 80017d8:	601a      	str	r2, [r3, #0]
                red2Control();
 80017da:	f7ff fee7 	bl	80015ac <red2Control>
                setTimer1(time_red*1000);
 80017de:	4b17      	ldr	r3, [pc, #92]	; (800183c <fsm_automatic_2+0xd8>)
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80017e6:	fb02 f303 	mul.w	r3, r2, r3
 80017ea:	4618      	mov	r0, r3
 80017ec:	f7ff fdc8 	bl	8001380 <setTimer1>
			}
			break;
 80017f0:	e016      	b.n	8001820 <fsm_automatic_2+0xbc>
		case AUTO_RED2:
			if(timer_flag1== 1){
 80017f2:	4b10      	ldr	r3, [pc, #64]	; (8001834 <fsm_automatic_2+0xd0>)
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	2b01      	cmp	r3, #1
 80017f8:	d114      	bne.n	8001824 <fsm_automatic_2+0xc0>
				status2 = INIT2;
 80017fa:	4b0c      	ldr	r3, [pc, #48]	; (800182c <fsm_automatic_2+0xc8>)
 80017fc:	2201      	movs	r2, #1
 80017fe:	601a      	str	r2, [r3, #0]
				green2Control();
 8001800:	f7ff ff2c 	bl	800165c <green2Control>
				setTimer1(time_green*1000);
 8001804:	4b0a      	ldr	r3, [pc, #40]	; (8001830 <fsm_automatic_2+0xcc>)
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800180c:	fb02 f303 	mul.w	r3, r2, r3
 8001810:	4618      	mov	r0, r3
 8001812:	f7ff fdb5 	bl	8001380 <setTimer1>
			}
			break;
 8001816:	e005      	b.n	8001824 <fsm_automatic_2+0xc0>
		default:
			break;
 8001818:	bf00      	nop
 800181a:	e004      	b.n	8001826 <fsm_automatic_2+0xc2>
			break;
 800181c:	bf00      	nop
 800181e:	e002      	b.n	8001826 <fsm_automatic_2+0xc2>
			break;
 8001820:	bf00      	nop
 8001822:	e000      	b.n	8001826 <fsm_automatic_2+0xc2>
			break;
 8001824:	bf00      	nop
	}
}
 8001826:	bf00      	nop
 8001828:	bd80      	pop	{r7, pc}
 800182a:	bf00      	nop
 800182c:	20000004 	.word	0x20000004
 8001830:	20000028 	.word	0x20000028
 8001834:	200000ac 	.word	0x200000ac
 8001838:	20000024 	.word	0x20000024
 800183c:	20000020 	.word	0x20000020

08001840 <Reset_Handler>:
 8001840:	480c      	ldr	r0, [pc, #48]	; (8001874 <LoopFillZerobss+0x12>)
 8001842:	490d      	ldr	r1, [pc, #52]	; (8001878 <LoopFillZerobss+0x16>)
 8001844:	4a0d      	ldr	r2, [pc, #52]	; (800187c <LoopFillZerobss+0x1a>)
 8001846:	2300      	movs	r3, #0
 8001848:	e002      	b.n	8001850 <LoopCopyDataInit>

0800184a <CopyDataInit>:
 800184a:	58d4      	ldr	r4, [r2, r3]
 800184c:	50c4      	str	r4, [r0, r3]
 800184e:	3304      	adds	r3, #4

08001850 <LoopCopyDataInit>:
 8001850:	18c4      	adds	r4, r0, r3
 8001852:	428c      	cmp	r4, r1
 8001854:	d3f9      	bcc.n	800184a <CopyDataInit>
 8001856:	4a0a      	ldr	r2, [pc, #40]	; (8001880 <LoopFillZerobss+0x1e>)
 8001858:	4c0a      	ldr	r4, [pc, #40]	; (8001884 <LoopFillZerobss+0x22>)
 800185a:	2300      	movs	r3, #0
 800185c:	e001      	b.n	8001862 <LoopFillZerobss>

0800185e <FillZerobss>:
 800185e:	6013      	str	r3, [r2, #0]
 8001860:	3204      	adds	r2, #4

08001862 <LoopFillZerobss>:
 8001862:	42a2      	cmp	r2, r4
 8001864:	d3fb      	bcc.n	800185e <FillZerobss>
 8001866:	f7ff fd6f 	bl	8001348 <SystemInit>
 800186a:	f001 fb0d 	bl	8002e88 <__libc_init_array>
 800186e:	f7ff fbd3 	bl	8001018 <main>
 8001872:	4770      	bx	lr
 8001874:	20000000 	.word	0x20000000
 8001878:	20000080 	.word	0x20000080
 800187c:	08002f20 	.word	0x08002f20
 8001880:	20000080 	.word	0x20000080
 8001884:	20000134 	.word	0x20000134

08001888 <ADC1_2_IRQHandler>:
 8001888:	e7fe      	b.n	8001888 <ADC1_2_IRQHandler>
	...

0800188c <HAL_Init>:
 800188c:	b580      	push	{r7, lr}
 800188e:	af00      	add	r7, sp, #0
 8001890:	4b08      	ldr	r3, [pc, #32]	; (80018b4 <HAL_Init+0x28>)
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	4a07      	ldr	r2, [pc, #28]	; (80018b4 <HAL_Init+0x28>)
 8001896:	f043 0310 	orr.w	r3, r3, #16
 800189a:	6013      	str	r3, [r2, #0]
 800189c:	2003      	movs	r0, #3
 800189e:	f000 f923 	bl	8001ae8 <HAL_NVIC_SetPriorityGrouping>
 80018a2:	200f      	movs	r0, #15
 80018a4:	f000 f808 	bl	80018b8 <HAL_InitTick>
 80018a8:	f7ff fcc6 	bl	8001238 <HAL_MspInit>
 80018ac:	2300      	movs	r3, #0
 80018ae:	4618      	mov	r0, r3
 80018b0:	bd80      	pop	{r7, pc}
 80018b2:	bf00      	nop
 80018b4:	40022000 	.word	0x40022000

080018b8 <HAL_InitTick>:
 80018b8:	b580      	push	{r7, lr}
 80018ba:	b082      	sub	sp, #8
 80018bc:	af00      	add	r7, sp, #0
 80018be:	6078      	str	r0, [r7, #4]
 80018c0:	4b12      	ldr	r3, [pc, #72]	; (800190c <HAL_InitTick+0x54>)
 80018c2:	681a      	ldr	r2, [r3, #0]
 80018c4:	4b12      	ldr	r3, [pc, #72]	; (8001910 <HAL_InitTick+0x58>)
 80018c6:	781b      	ldrb	r3, [r3, #0]
 80018c8:	4619      	mov	r1, r3
 80018ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80018ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80018d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80018d6:	4618      	mov	r0, r3
 80018d8:	f000 f93b 	bl	8001b52 <HAL_SYSTICK_Config>
 80018dc:	4603      	mov	r3, r0
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d001      	beq.n	80018e6 <HAL_InitTick+0x2e>
 80018e2:	2301      	movs	r3, #1
 80018e4:	e00e      	b.n	8001904 <HAL_InitTick+0x4c>
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	2b0f      	cmp	r3, #15
 80018ea:	d80a      	bhi.n	8001902 <HAL_InitTick+0x4a>
 80018ec:	2200      	movs	r2, #0
 80018ee:	6879      	ldr	r1, [r7, #4]
 80018f0:	f04f 30ff 	mov.w	r0, #4294967295
 80018f4:	f000 f903 	bl	8001afe <HAL_NVIC_SetPriority>
 80018f8:	4a06      	ldr	r2, [pc, #24]	; (8001914 <HAL_InitTick+0x5c>)
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	6013      	str	r3, [r2, #0]
 80018fe:	2300      	movs	r3, #0
 8001900:	e000      	b.n	8001904 <HAL_InitTick+0x4c>
 8001902:	2301      	movs	r3, #1
 8001904:	4618      	mov	r0, r3
 8001906:	3708      	adds	r7, #8
 8001908:	46bd      	mov	sp, r7
 800190a:	bd80      	pop	{r7, pc}
 800190c:	20000074 	.word	0x20000074
 8001910:	2000007c 	.word	0x2000007c
 8001914:	20000078 	.word	0x20000078

08001918 <HAL_IncTick>:
 8001918:	b480      	push	{r7}
 800191a:	af00      	add	r7, sp, #0
 800191c:	4b05      	ldr	r3, [pc, #20]	; (8001934 <HAL_IncTick+0x1c>)
 800191e:	781b      	ldrb	r3, [r3, #0]
 8001920:	461a      	mov	r2, r3
 8001922:	4b05      	ldr	r3, [pc, #20]	; (8001938 <HAL_IncTick+0x20>)
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	4413      	add	r3, r2
 8001928:	4a03      	ldr	r2, [pc, #12]	; (8001938 <HAL_IncTick+0x20>)
 800192a:	6013      	str	r3, [r2, #0]
 800192c:	bf00      	nop
 800192e:	46bd      	mov	sp, r7
 8001930:	bc80      	pop	{r7}
 8001932:	4770      	bx	lr
 8001934:	2000007c 	.word	0x2000007c
 8001938:	20000130 	.word	0x20000130

0800193c <HAL_GetTick>:
 800193c:	b480      	push	{r7}
 800193e:	af00      	add	r7, sp, #0
 8001940:	4b02      	ldr	r3, [pc, #8]	; (800194c <HAL_GetTick+0x10>)
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	4618      	mov	r0, r3
 8001946:	46bd      	mov	sp, r7
 8001948:	bc80      	pop	{r7}
 800194a:	4770      	bx	lr
 800194c:	20000130 	.word	0x20000130

08001950 <__NVIC_SetPriorityGrouping>:
 8001950:	b480      	push	{r7}
 8001952:	b085      	sub	sp, #20
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	f003 0307 	and.w	r3, r3, #7
 800195e:	60fb      	str	r3, [r7, #12]
 8001960:	4b0c      	ldr	r3, [pc, #48]	; (8001994 <__NVIC_SetPriorityGrouping+0x44>)
 8001962:	68db      	ldr	r3, [r3, #12]
 8001964:	60bb      	str	r3, [r7, #8]
 8001966:	68ba      	ldr	r2, [r7, #8]
 8001968:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800196c:	4013      	ands	r3, r2
 800196e:	60bb      	str	r3, [r7, #8]
 8001970:	68fb      	ldr	r3, [r7, #12]
 8001972:	021a      	lsls	r2, r3, #8
 8001974:	68bb      	ldr	r3, [r7, #8]
 8001976:	4313      	orrs	r3, r2
 8001978:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800197c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001980:	60bb      	str	r3, [r7, #8]
 8001982:	4a04      	ldr	r2, [pc, #16]	; (8001994 <__NVIC_SetPriorityGrouping+0x44>)
 8001984:	68bb      	ldr	r3, [r7, #8]
 8001986:	60d3      	str	r3, [r2, #12]
 8001988:	bf00      	nop
 800198a:	3714      	adds	r7, #20
 800198c:	46bd      	mov	sp, r7
 800198e:	bc80      	pop	{r7}
 8001990:	4770      	bx	lr
 8001992:	bf00      	nop
 8001994:	e000ed00 	.word	0xe000ed00

08001998 <__NVIC_GetPriorityGrouping>:
 8001998:	b480      	push	{r7}
 800199a:	af00      	add	r7, sp, #0
 800199c:	4b04      	ldr	r3, [pc, #16]	; (80019b0 <__NVIC_GetPriorityGrouping+0x18>)
 800199e:	68db      	ldr	r3, [r3, #12]
 80019a0:	0a1b      	lsrs	r3, r3, #8
 80019a2:	f003 0307 	and.w	r3, r3, #7
 80019a6:	4618      	mov	r0, r3
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bc80      	pop	{r7}
 80019ac:	4770      	bx	lr
 80019ae:	bf00      	nop
 80019b0:	e000ed00 	.word	0xe000ed00

080019b4 <__NVIC_EnableIRQ>:
 80019b4:	b480      	push	{r7}
 80019b6:	b083      	sub	sp, #12
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	4603      	mov	r3, r0
 80019bc:	71fb      	strb	r3, [r7, #7]
 80019be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	db0b      	blt.n	80019de <__NVIC_EnableIRQ+0x2a>
 80019c6:	79fb      	ldrb	r3, [r7, #7]
 80019c8:	f003 021f 	and.w	r2, r3, #31
 80019cc:	4906      	ldr	r1, [pc, #24]	; (80019e8 <__NVIC_EnableIRQ+0x34>)
 80019ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019d2:	095b      	lsrs	r3, r3, #5
 80019d4:	2001      	movs	r0, #1
 80019d6:	fa00 f202 	lsl.w	r2, r0, r2
 80019da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80019de:	bf00      	nop
 80019e0:	370c      	adds	r7, #12
 80019e2:	46bd      	mov	sp, r7
 80019e4:	bc80      	pop	{r7}
 80019e6:	4770      	bx	lr
 80019e8:	e000e100 	.word	0xe000e100

080019ec <__NVIC_SetPriority>:
 80019ec:	b480      	push	{r7}
 80019ee:	b083      	sub	sp, #12
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	4603      	mov	r3, r0
 80019f4:	6039      	str	r1, [r7, #0]
 80019f6:	71fb      	strb	r3, [r7, #7]
 80019f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019fc:	2b00      	cmp	r3, #0
 80019fe:	db0a      	blt.n	8001a16 <__NVIC_SetPriority+0x2a>
 8001a00:	683b      	ldr	r3, [r7, #0]
 8001a02:	b2da      	uxtb	r2, r3
 8001a04:	490c      	ldr	r1, [pc, #48]	; (8001a38 <__NVIC_SetPriority+0x4c>)
 8001a06:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a0a:	0112      	lsls	r2, r2, #4
 8001a0c:	b2d2      	uxtb	r2, r2
 8001a0e:	440b      	add	r3, r1
 8001a10:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001a14:	e00a      	b.n	8001a2c <__NVIC_SetPriority+0x40>
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	b2da      	uxtb	r2, r3
 8001a1a:	4908      	ldr	r1, [pc, #32]	; (8001a3c <__NVIC_SetPriority+0x50>)
 8001a1c:	79fb      	ldrb	r3, [r7, #7]
 8001a1e:	f003 030f 	and.w	r3, r3, #15
 8001a22:	3b04      	subs	r3, #4
 8001a24:	0112      	lsls	r2, r2, #4
 8001a26:	b2d2      	uxtb	r2, r2
 8001a28:	440b      	add	r3, r1
 8001a2a:	761a      	strb	r2, [r3, #24]
 8001a2c:	bf00      	nop
 8001a2e:	370c      	adds	r7, #12
 8001a30:	46bd      	mov	sp, r7
 8001a32:	bc80      	pop	{r7}
 8001a34:	4770      	bx	lr
 8001a36:	bf00      	nop
 8001a38:	e000e100 	.word	0xe000e100
 8001a3c:	e000ed00 	.word	0xe000ed00

08001a40 <NVIC_EncodePriority>:
 8001a40:	b480      	push	{r7}
 8001a42:	b089      	sub	sp, #36	; 0x24
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	60f8      	str	r0, [r7, #12]
 8001a48:	60b9      	str	r1, [r7, #8]
 8001a4a:	607a      	str	r2, [r7, #4]
 8001a4c:	68fb      	ldr	r3, [r7, #12]
 8001a4e:	f003 0307 	and.w	r3, r3, #7
 8001a52:	61fb      	str	r3, [r7, #28]
 8001a54:	69fb      	ldr	r3, [r7, #28]
 8001a56:	f1c3 0307 	rsb	r3, r3, #7
 8001a5a:	2b04      	cmp	r3, #4
 8001a5c:	bf28      	it	cs
 8001a5e:	2304      	movcs	r3, #4
 8001a60:	61bb      	str	r3, [r7, #24]
 8001a62:	69fb      	ldr	r3, [r7, #28]
 8001a64:	3304      	adds	r3, #4
 8001a66:	2b06      	cmp	r3, #6
 8001a68:	d902      	bls.n	8001a70 <NVIC_EncodePriority+0x30>
 8001a6a:	69fb      	ldr	r3, [r7, #28]
 8001a6c:	3b03      	subs	r3, #3
 8001a6e:	e000      	b.n	8001a72 <NVIC_EncodePriority+0x32>
 8001a70:	2300      	movs	r3, #0
 8001a72:	617b      	str	r3, [r7, #20]
 8001a74:	f04f 32ff 	mov.w	r2, #4294967295
 8001a78:	69bb      	ldr	r3, [r7, #24]
 8001a7a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a7e:	43da      	mvns	r2, r3
 8001a80:	68bb      	ldr	r3, [r7, #8]
 8001a82:	401a      	ands	r2, r3
 8001a84:	697b      	ldr	r3, [r7, #20]
 8001a86:	409a      	lsls	r2, r3
 8001a88:	f04f 31ff 	mov.w	r1, #4294967295
 8001a8c:	697b      	ldr	r3, [r7, #20]
 8001a8e:	fa01 f303 	lsl.w	r3, r1, r3
 8001a92:	43d9      	mvns	r1, r3
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	400b      	ands	r3, r1
 8001a98:	4313      	orrs	r3, r2
 8001a9a:	4618      	mov	r0, r3
 8001a9c:	3724      	adds	r7, #36	; 0x24
 8001a9e:	46bd      	mov	sp, r7
 8001aa0:	bc80      	pop	{r7}
 8001aa2:	4770      	bx	lr

08001aa4 <SysTick_Config>:
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	b082      	sub	sp, #8
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	6078      	str	r0, [r7, #4]
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	3b01      	subs	r3, #1
 8001ab0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ab4:	d301      	bcc.n	8001aba <SysTick_Config+0x16>
 8001ab6:	2301      	movs	r3, #1
 8001ab8:	e00f      	b.n	8001ada <SysTick_Config+0x36>
 8001aba:	4a0a      	ldr	r2, [pc, #40]	; (8001ae4 <SysTick_Config+0x40>)
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	3b01      	subs	r3, #1
 8001ac0:	6053      	str	r3, [r2, #4]
 8001ac2:	210f      	movs	r1, #15
 8001ac4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ac8:	f7ff ff90 	bl	80019ec <__NVIC_SetPriority>
 8001acc:	4b05      	ldr	r3, [pc, #20]	; (8001ae4 <SysTick_Config+0x40>)
 8001ace:	2200      	movs	r2, #0
 8001ad0:	609a      	str	r2, [r3, #8]
 8001ad2:	4b04      	ldr	r3, [pc, #16]	; (8001ae4 <SysTick_Config+0x40>)
 8001ad4:	2207      	movs	r2, #7
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	2300      	movs	r3, #0
 8001ada:	4618      	mov	r0, r3
 8001adc:	3708      	adds	r7, #8
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	bd80      	pop	{r7, pc}
 8001ae2:	bf00      	nop
 8001ae4:	e000e010 	.word	0xe000e010

08001ae8 <HAL_NVIC_SetPriorityGrouping>:
 8001ae8:	b580      	push	{r7, lr}
 8001aea:	b082      	sub	sp, #8
 8001aec:	af00      	add	r7, sp, #0
 8001aee:	6078      	str	r0, [r7, #4]
 8001af0:	6878      	ldr	r0, [r7, #4]
 8001af2:	f7ff ff2d 	bl	8001950 <__NVIC_SetPriorityGrouping>
 8001af6:	bf00      	nop
 8001af8:	3708      	adds	r7, #8
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bd80      	pop	{r7, pc}

08001afe <HAL_NVIC_SetPriority>:
 8001afe:	b580      	push	{r7, lr}
 8001b00:	b086      	sub	sp, #24
 8001b02:	af00      	add	r7, sp, #0
 8001b04:	4603      	mov	r3, r0
 8001b06:	60b9      	str	r1, [r7, #8]
 8001b08:	607a      	str	r2, [r7, #4]
 8001b0a:	73fb      	strb	r3, [r7, #15]
 8001b0c:	2300      	movs	r3, #0
 8001b0e:	617b      	str	r3, [r7, #20]
 8001b10:	f7ff ff42 	bl	8001998 <__NVIC_GetPriorityGrouping>
 8001b14:	6178      	str	r0, [r7, #20]
 8001b16:	687a      	ldr	r2, [r7, #4]
 8001b18:	68b9      	ldr	r1, [r7, #8]
 8001b1a:	6978      	ldr	r0, [r7, #20]
 8001b1c:	f7ff ff90 	bl	8001a40 <NVIC_EncodePriority>
 8001b20:	4602      	mov	r2, r0
 8001b22:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b26:	4611      	mov	r1, r2
 8001b28:	4618      	mov	r0, r3
 8001b2a:	f7ff ff5f 	bl	80019ec <__NVIC_SetPriority>
 8001b2e:	bf00      	nop
 8001b30:	3718      	adds	r7, #24
 8001b32:	46bd      	mov	sp, r7
 8001b34:	bd80      	pop	{r7, pc}

08001b36 <HAL_NVIC_EnableIRQ>:
 8001b36:	b580      	push	{r7, lr}
 8001b38:	b082      	sub	sp, #8
 8001b3a:	af00      	add	r7, sp, #0
 8001b3c:	4603      	mov	r3, r0
 8001b3e:	71fb      	strb	r3, [r7, #7]
 8001b40:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b44:	4618      	mov	r0, r3
 8001b46:	f7ff ff35 	bl	80019b4 <__NVIC_EnableIRQ>
 8001b4a:	bf00      	nop
 8001b4c:	3708      	adds	r7, #8
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bd80      	pop	{r7, pc}

08001b52 <HAL_SYSTICK_Config>:
 8001b52:	b580      	push	{r7, lr}
 8001b54:	b082      	sub	sp, #8
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	6078      	str	r0, [r7, #4]
 8001b5a:	6878      	ldr	r0, [r7, #4]
 8001b5c:	f7ff ffa2 	bl	8001aa4 <SysTick_Config>
 8001b60:	4603      	mov	r3, r0
 8001b62:	4618      	mov	r0, r3
 8001b64:	3708      	adds	r7, #8
 8001b66:	46bd      	mov	sp, r7
 8001b68:	bd80      	pop	{r7, pc}
	...

08001b6c <HAL_GPIO_Init>:
 8001b6c:	b480      	push	{r7}
 8001b6e:	b08b      	sub	sp, #44	; 0x2c
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	6078      	str	r0, [r7, #4]
 8001b74:	6039      	str	r1, [r7, #0]
 8001b76:	2300      	movs	r3, #0
 8001b78:	627b      	str	r3, [r7, #36]	; 0x24
 8001b7a:	2300      	movs	r3, #0
 8001b7c:	623b      	str	r3, [r7, #32]
 8001b7e:	e148      	b.n	8001e12 <HAL_GPIO_Init+0x2a6>
 8001b80:	2201      	movs	r2, #1
 8001b82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b84:	fa02 f303 	lsl.w	r3, r2, r3
 8001b88:	61fb      	str	r3, [r7, #28]
 8001b8a:	683b      	ldr	r3, [r7, #0]
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	69fa      	ldr	r2, [r7, #28]
 8001b90:	4013      	ands	r3, r2
 8001b92:	61bb      	str	r3, [r7, #24]
 8001b94:	69ba      	ldr	r2, [r7, #24]
 8001b96:	69fb      	ldr	r3, [r7, #28]
 8001b98:	429a      	cmp	r2, r3
 8001b9a:	f040 8137 	bne.w	8001e0c <HAL_GPIO_Init+0x2a0>
 8001b9e:	683b      	ldr	r3, [r7, #0]
 8001ba0:	685b      	ldr	r3, [r3, #4]
 8001ba2:	4aa3      	ldr	r2, [pc, #652]	; (8001e30 <HAL_GPIO_Init+0x2c4>)
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d05e      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001ba8:	4aa1      	ldr	r2, [pc, #644]	; (8001e30 <HAL_GPIO_Init+0x2c4>)
 8001baa:	4293      	cmp	r3, r2
 8001bac:	d875      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001bae:	4aa1      	ldr	r2, [pc, #644]	; (8001e34 <HAL_GPIO_Init+0x2c8>)
 8001bb0:	4293      	cmp	r3, r2
 8001bb2:	d058      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001bb4:	4a9f      	ldr	r2, [pc, #636]	; (8001e34 <HAL_GPIO_Init+0x2c8>)
 8001bb6:	4293      	cmp	r3, r2
 8001bb8:	d86f      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001bba:	4a9f      	ldr	r2, [pc, #636]	; (8001e38 <HAL_GPIO_Init+0x2cc>)
 8001bbc:	4293      	cmp	r3, r2
 8001bbe:	d052      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001bc0:	4a9d      	ldr	r2, [pc, #628]	; (8001e38 <HAL_GPIO_Init+0x2cc>)
 8001bc2:	4293      	cmp	r3, r2
 8001bc4:	d869      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001bc6:	4a9d      	ldr	r2, [pc, #628]	; (8001e3c <HAL_GPIO_Init+0x2d0>)
 8001bc8:	4293      	cmp	r3, r2
 8001bca:	d04c      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001bcc:	4a9b      	ldr	r2, [pc, #620]	; (8001e3c <HAL_GPIO_Init+0x2d0>)
 8001bce:	4293      	cmp	r3, r2
 8001bd0:	d863      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001bd2:	4a9b      	ldr	r2, [pc, #620]	; (8001e40 <HAL_GPIO_Init+0x2d4>)
 8001bd4:	4293      	cmp	r3, r2
 8001bd6:	d046      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001bd8:	4a99      	ldr	r2, [pc, #612]	; (8001e40 <HAL_GPIO_Init+0x2d4>)
 8001bda:	4293      	cmp	r3, r2
 8001bdc:	d85d      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001bde:	2b12      	cmp	r3, #18
 8001be0:	d82a      	bhi.n	8001c38 <HAL_GPIO_Init+0xcc>
 8001be2:	2b12      	cmp	r3, #18
 8001be4:	d859      	bhi.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001be6:	a201      	add	r2, pc, #4	; (adr r2, 8001bec <HAL_GPIO_Init+0x80>)
 8001be8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001bec:	08001c67 	.word	0x08001c67
 8001bf0:	08001c41 	.word	0x08001c41
 8001bf4:	08001c53 	.word	0x08001c53
 8001bf8:	08001c95 	.word	0x08001c95
 8001bfc:	08001c9b 	.word	0x08001c9b
 8001c00:	08001c9b 	.word	0x08001c9b
 8001c04:	08001c9b 	.word	0x08001c9b
 8001c08:	08001c9b 	.word	0x08001c9b
 8001c0c:	08001c9b 	.word	0x08001c9b
 8001c10:	08001c9b 	.word	0x08001c9b
 8001c14:	08001c9b 	.word	0x08001c9b
 8001c18:	08001c9b 	.word	0x08001c9b
 8001c1c:	08001c9b 	.word	0x08001c9b
 8001c20:	08001c9b 	.word	0x08001c9b
 8001c24:	08001c9b 	.word	0x08001c9b
 8001c28:	08001c9b 	.word	0x08001c9b
 8001c2c:	08001c9b 	.word	0x08001c9b
 8001c30:	08001c49 	.word	0x08001c49
 8001c34:	08001c5d 	.word	0x08001c5d
 8001c38:	4a82      	ldr	r2, [pc, #520]	; (8001e44 <HAL_GPIO_Init+0x2d8>)
 8001c3a:	4293      	cmp	r3, r2
 8001c3c:	d013      	beq.n	8001c66 <HAL_GPIO_Init+0xfa>
 8001c3e:	e02c      	b.n	8001c9a <HAL_GPIO_Init+0x12e>
 8001c40:	683b      	ldr	r3, [r7, #0]
 8001c42:	68db      	ldr	r3, [r3, #12]
 8001c44:	623b      	str	r3, [r7, #32]
 8001c46:	e029      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c48:	683b      	ldr	r3, [r7, #0]
 8001c4a:	68db      	ldr	r3, [r3, #12]
 8001c4c:	3304      	adds	r3, #4
 8001c4e:	623b      	str	r3, [r7, #32]
 8001c50:	e024      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c52:	683b      	ldr	r3, [r7, #0]
 8001c54:	68db      	ldr	r3, [r3, #12]
 8001c56:	3308      	adds	r3, #8
 8001c58:	623b      	str	r3, [r7, #32]
 8001c5a:	e01f      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c5c:	683b      	ldr	r3, [r7, #0]
 8001c5e:	68db      	ldr	r3, [r3, #12]
 8001c60:	330c      	adds	r3, #12
 8001c62:	623b      	str	r3, [r7, #32]
 8001c64:	e01a      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c66:	683b      	ldr	r3, [r7, #0]
 8001c68:	689b      	ldr	r3, [r3, #8]
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d102      	bne.n	8001c74 <HAL_GPIO_Init+0x108>
 8001c6e:	2304      	movs	r3, #4
 8001c70:	623b      	str	r3, [r7, #32]
 8001c72:	e013      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c74:	683b      	ldr	r3, [r7, #0]
 8001c76:	689b      	ldr	r3, [r3, #8]
 8001c78:	2b01      	cmp	r3, #1
 8001c7a:	d105      	bne.n	8001c88 <HAL_GPIO_Init+0x11c>
 8001c7c:	2308      	movs	r3, #8
 8001c7e:	623b      	str	r3, [r7, #32]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	69fa      	ldr	r2, [r7, #28]
 8001c84:	611a      	str	r2, [r3, #16]
 8001c86:	e009      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c88:	2308      	movs	r3, #8
 8001c8a:	623b      	str	r3, [r7, #32]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	69fa      	ldr	r2, [r7, #28]
 8001c90:	615a      	str	r2, [r3, #20]
 8001c92:	e003      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c94:	2300      	movs	r3, #0
 8001c96:	623b      	str	r3, [r7, #32]
 8001c98:	e000      	b.n	8001c9c <HAL_GPIO_Init+0x130>
 8001c9a:	bf00      	nop
 8001c9c:	69bb      	ldr	r3, [r7, #24]
 8001c9e:	2bff      	cmp	r3, #255	; 0xff
 8001ca0:	d801      	bhi.n	8001ca6 <HAL_GPIO_Init+0x13a>
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	e001      	b.n	8001caa <HAL_GPIO_Init+0x13e>
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	3304      	adds	r3, #4
 8001caa:	617b      	str	r3, [r7, #20]
 8001cac:	69bb      	ldr	r3, [r7, #24]
 8001cae:	2bff      	cmp	r3, #255	; 0xff
 8001cb0:	d802      	bhi.n	8001cb8 <HAL_GPIO_Init+0x14c>
 8001cb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cb4:	009b      	lsls	r3, r3, #2
 8001cb6:	e002      	b.n	8001cbe <HAL_GPIO_Init+0x152>
 8001cb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cba:	3b08      	subs	r3, #8
 8001cbc:	009b      	lsls	r3, r3, #2
 8001cbe:	613b      	str	r3, [r7, #16]
 8001cc0:	697b      	ldr	r3, [r7, #20]
 8001cc2:	681a      	ldr	r2, [r3, #0]
 8001cc4:	210f      	movs	r1, #15
 8001cc6:	693b      	ldr	r3, [r7, #16]
 8001cc8:	fa01 f303 	lsl.w	r3, r1, r3
 8001ccc:	43db      	mvns	r3, r3
 8001cce:	401a      	ands	r2, r3
 8001cd0:	6a39      	ldr	r1, [r7, #32]
 8001cd2:	693b      	ldr	r3, [r7, #16]
 8001cd4:	fa01 f303 	lsl.w	r3, r1, r3
 8001cd8:	431a      	orrs	r2, r3
 8001cda:	697b      	ldr	r3, [r7, #20]
 8001cdc:	601a      	str	r2, [r3, #0]
 8001cde:	683b      	ldr	r3, [r7, #0]
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	f000 8090 	beq.w	8001e0c <HAL_GPIO_Init+0x2a0>
 8001cec:	4b56      	ldr	r3, [pc, #344]	; (8001e48 <HAL_GPIO_Init+0x2dc>)
 8001cee:	699b      	ldr	r3, [r3, #24]
 8001cf0:	4a55      	ldr	r2, [pc, #340]	; (8001e48 <HAL_GPIO_Init+0x2dc>)
 8001cf2:	f043 0301 	orr.w	r3, r3, #1
 8001cf6:	6193      	str	r3, [r2, #24]
 8001cf8:	4b53      	ldr	r3, [pc, #332]	; (8001e48 <HAL_GPIO_Init+0x2dc>)
 8001cfa:	699b      	ldr	r3, [r3, #24]
 8001cfc:	f003 0301 	and.w	r3, r3, #1
 8001d00:	60bb      	str	r3, [r7, #8]
 8001d02:	68bb      	ldr	r3, [r7, #8]
 8001d04:	4a51      	ldr	r2, [pc, #324]	; (8001e4c <HAL_GPIO_Init+0x2e0>)
 8001d06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d08:	089b      	lsrs	r3, r3, #2
 8001d0a:	3302      	adds	r3, #2
 8001d0c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d10:	60fb      	str	r3, [r7, #12]
 8001d12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d14:	f003 0303 	and.w	r3, r3, #3
 8001d18:	009b      	lsls	r3, r3, #2
 8001d1a:	220f      	movs	r2, #15
 8001d1c:	fa02 f303 	lsl.w	r3, r2, r3
 8001d20:	43db      	mvns	r3, r3
 8001d22:	68fa      	ldr	r2, [r7, #12]
 8001d24:	4013      	ands	r3, r2
 8001d26:	60fb      	str	r3, [r7, #12]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	4a49      	ldr	r2, [pc, #292]	; (8001e50 <HAL_GPIO_Init+0x2e4>)
 8001d2c:	4293      	cmp	r3, r2
 8001d2e:	d00d      	beq.n	8001d4c <HAL_GPIO_Init+0x1e0>
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	4a48      	ldr	r2, [pc, #288]	; (8001e54 <HAL_GPIO_Init+0x2e8>)
 8001d34:	4293      	cmp	r3, r2
 8001d36:	d007      	beq.n	8001d48 <HAL_GPIO_Init+0x1dc>
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	4a47      	ldr	r2, [pc, #284]	; (8001e58 <HAL_GPIO_Init+0x2ec>)
 8001d3c:	4293      	cmp	r3, r2
 8001d3e:	d101      	bne.n	8001d44 <HAL_GPIO_Init+0x1d8>
 8001d40:	2302      	movs	r3, #2
 8001d42:	e004      	b.n	8001d4e <HAL_GPIO_Init+0x1e2>
 8001d44:	2303      	movs	r3, #3
 8001d46:	e002      	b.n	8001d4e <HAL_GPIO_Init+0x1e2>
 8001d48:	2301      	movs	r3, #1
 8001d4a:	e000      	b.n	8001d4e <HAL_GPIO_Init+0x1e2>
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001d50:	f002 0203 	and.w	r2, r2, #3
 8001d54:	0092      	lsls	r2, r2, #2
 8001d56:	4093      	lsls	r3, r2
 8001d58:	68fa      	ldr	r2, [r7, #12]
 8001d5a:	4313      	orrs	r3, r2
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	493b      	ldr	r1, [pc, #236]	; (8001e4c <HAL_GPIO_Init+0x2e0>)
 8001d60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d62:	089b      	lsrs	r3, r3, #2
 8001d64:	3302      	adds	r3, #2
 8001d66:	68fa      	ldr	r2, [r7, #12]
 8001d68:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d6c:	683b      	ldr	r3, [r7, #0]
 8001d6e:	685b      	ldr	r3, [r3, #4]
 8001d70:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d006      	beq.n	8001d86 <HAL_GPIO_Init+0x21a>
 8001d78:	4b38      	ldr	r3, [pc, #224]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001d7a:	681a      	ldr	r2, [r3, #0]
 8001d7c:	4937      	ldr	r1, [pc, #220]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001d7e:	69bb      	ldr	r3, [r7, #24]
 8001d80:	4313      	orrs	r3, r2
 8001d82:	600b      	str	r3, [r1, #0]
 8001d84:	e006      	b.n	8001d94 <HAL_GPIO_Init+0x228>
 8001d86:	4b35      	ldr	r3, [pc, #212]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001d88:	681a      	ldr	r2, [r3, #0]
 8001d8a:	69bb      	ldr	r3, [r7, #24]
 8001d8c:	43db      	mvns	r3, r3
 8001d8e:	4933      	ldr	r1, [pc, #204]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001d90:	4013      	ands	r3, r2
 8001d92:	600b      	str	r3, [r1, #0]
 8001d94:	683b      	ldr	r3, [r7, #0]
 8001d96:	685b      	ldr	r3, [r3, #4]
 8001d98:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d006      	beq.n	8001dae <HAL_GPIO_Init+0x242>
 8001da0:	4b2e      	ldr	r3, [pc, #184]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001da2:	685a      	ldr	r2, [r3, #4]
 8001da4:	492d      	ldr	r1, [pc, #180]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001da6:	69bb      	ldr	r3, [r7, #24]
 8001da8:	4313      	orrs	r3, r2
 8001daa:	604b      	str	r3, [r1, #4]
 8001dac:	e006      	b.n	8001dbc <HAL_GPIO_Init+0x250>
 8001dae:	4b2b      	ldr	r3, [pc, #172]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001db0:	685a      	ldr	r2, [r3, #4]
 8001db2:	69bb      	ldr	r3, [r7, #24]
 8001db4:	43db      	mvns	r3, r3
 8001db6:	4929      	ldr	r1, [pc, #164]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001db8:	4013      	ands	r3, r2
 8001dba:	604b      	str	r3, [r1, #4]
 8001dbc:	683b      	ldr	r3, [r7, #0]
 8001dbe:	685b      	ldr	r3, [r3, #4]
 8001dc0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	d006      	beq.n	8001dd6 <HAL_GPIO_Init+0x26a>
 8001dc8:	4b24      	ldr	r3, [pc, #144]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001dca:	689a      	ldr	r2, [r3, #8]
 8001dcc:	4923      	ldr	r1, [pc, #140]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001dce:	69bb      	ldr	r3, [r7, #24]
 8001dd0:	4313      	orrs	r3, r2
 8001dd2:	608b      	str	r3, [r1, #8]
 8001dd4:	e006      	b.n	8001de4 <HAL_GPIO_Init+0x278>
 8001dd6:	4b21      	ldr	r3, [pc, #132]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001dd8:	689a      	ldr	r2, [r3, #8]
 8001dda:	69bb      	ldr	r3, [r7, #24]
 8001ddc:	43db      	mvns	r3, r3
 8001dde:	491f      	ldr	r1, [pc, #124]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001de0:	4013      	ands	r3, r2
 8001de2:	608b      	str	r3, [r1, #8]
 8001de4:	683b      	ldr	r3, [r7, #0]
 8001de6:	685b      	ldr	r3, [r3, #4]
 8001de8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d006      	beq.n	8001dfe <HAL_GPIO_Init+0x292>
 8001df0:	4b1a      	ldr	r3, [pc, #104]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001df2:	68da      	ldr	r2, [r3, #12]
 8001df4:	4919      	ldr	r1, [pc, #100]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001df6:	69bb      	ldr	r3, [r7, #24]
 8001df8:	4313      	orrs	r3, r2
 8001dfa:	60cb      	str	r3, [r1, #12]
 8001dfc:	e006      	b.n	8001e0c <HAL_GPIO_Init+0x2a0>
 8001dfe:	4b17      	ldr	r3, [pc, #92]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001e00:	68da      	ldr	r2, [r3, #12]
 8001e02:	69bb      	ldr	r3, [r7, #24]
 8001e04:	43db      	mvns	r3, r3
 8001e06:	4915      	ldr	r1, [pc, #84]	; (8001e5c <HAL_GPIO_Init+0x2f0>)
 8001e08:	4013      	ands	r3, r2
 8001e0a:	60cb      	str	r3, [r1, #12]
 8001e0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e0e:	3301      	adds	r3, #1
 8001e10:	627b      	str	r3, [r7, #36]	; 0x24
 8001e12:	683b      	ldr	r3, [r7, #0]
 8001e14:	681a      	ldr	r2, [r3, #0]
 8001e16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e18:	fa22 f303 	lsr.w	r3, r2, r3
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	f47f aeaf 	bne.w	8001b80 <HAL_GPIO_Init+0x14>
 8001e22:	bf00      	nop
 8001e24:	bf00      	nop
 8001e26:	372c      	adds	r7, #44	; 0x2c
 8001e28:	46bd      	mov	sp, r7
 8001e2a:	bc80      	pop	{r7}
 8001e2c:	4770      	bx	lr
 8001e2e:	bf00      	nop
 8001e30:	10320000 	.word	0x10320000
 8001e34:	10310000 	.word	0x10310000
 8001e38:	10220000 	.word	0x10220000
 8001e3c:	10210000 	.word	0x10210000
 8001e40:	10120000 	.word	0x10120000
 8001e44:	10110000 	.word	0x10110000
 8001e48:	40021000 	.word	0x40021000
 8001e4c:	40010000 	.word	0x40010000
 8001e50:	40010800 	.word	0x40010800
 8001e54:	40010c00 	.word	0x40010c00
 8001e58:	40011000 	.word	0x40011000
 8001e5c:	40010400 	.word	0x40010400

08001e60 <HAL_GPIO_ReadPin>:
 8001e60:	b480      	push	{r7}
 8001e62:	b085      	sub	sp, #20
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
 8001e68:	460b      	mov	r3, r1
 8001e6a:	807b      	strh	r3, [r7, #2]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	689a      	ldr	r2, [r3, #8]
 8001e70:	887b      	ldrh	r3, [r7, #2]
 8001e72:	4013      	ands	r3, r2
 8001e74:	2b00      	cmp	r3, #0
 8001e76:	d002      	beq.n	8001e7e <HAL_GPIO_ReadPin+0x1e>
 8001e78:	2301      	movs	r3, #1
 8001e7a:	73fb      	strb	r3, [r7, #15]
 8001e7c:	e001      	b.n	8001e82 <HAL_GPIO_ReadPin+0x22>
 8001e7e:	2300      	movs	r3, #0
 8001e80:	73fb      	strb	r3, [r7, #15]
 8001e82:	7bfb      	ldrb	r3, [r7, #15]
 8001e84:	4618      	mov	r0, r3
 8001e86:	3714      	adds	r7, #20
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	bc80      	pop	{r7}
 8001e8c:	4770      	bx	lr

08001e8e <HAL_GPIO_WritePin>:
 8001e8e:	b480      	push	{r7}
 8001e90:	b083      	sub	sp, #12
 8001e92:	af00      	add	r7, sp, #0
 8001e94:	6078      	str	r0, [r7, #4]
 8001e96:	460b      	mov	r3, r1
 8001e98:	807b      	strh	r3, [r7, #2]
 8001e9a:	4613      	mov	r3, r2
 8001e9c:	707b      	strb	r3, [r7, #1]
 8001e9e:	787b      	ldrb	r3, [r7, #1]
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d003      	beq.n	8001eac <HAL_GPIO_WritePin+0x1e>
 8001ea4:	887a      	ldrh	r2, [r7, #2]
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	611a      	str	r2, [r3, #16]
 8001eaa:	e003      	b.n	8001eb4 <HAL_GPIO_WritePin+0x26>
 8001eac:	887b      	ldrh	r3, [r7, #2]
 8001eae:	041a      	lsls	r2, r3, #16
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	611a      	str	r2, [r3, #16]
 8001eb4:	bf00      	nop
 8001eb6:	370c      	adds	r7, #12
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	bc80      	pop	{r7}
 8001ebc:	4770      	bx	lr

08001ebe <HAL_GPIO_TogglePin>:
 8001ebe:	b480      	push	{r7}
 8001ec0:	b085      	sub	sp, #20
 8001ec2:	af00      	add	r7, sp, #0
 8001ec4:	6078      	str	r0, [r7, #4]
 8001ec6:	460b      	mov	r3, r1
 8001ec8:	807b      	strh	r3, [r7, #2]
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	68db      	ldr	r3, [r3, #12]
 8001ece:	60fb      	str	r3, [r7, #12]
 8001ed0:	887a      	ldrh	r2, [r7, #2]
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	4013      	ands	r3, r2
 8001ed6:	041a      	lsls	r2, r3, #16
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	43d9      	mvns	r1, r3
 8001edc:	887b      	ldrh	r3, [r7, #2]
 8001ede:	400b      	ands	r3, r1
 8001ee0:	431a      	orrs	r2, r3
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	611a      	str	r2, [r3, #16]
 8001ee6:	bf00      	nop
 8001ee8:	3714      	adds	r7, #20
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bc80      	pop	{r7}
 8001eee:	4770      	bx	lr

08001ef0 <HAL_RCC_OscConfig>:
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b086      	sub	sp, #24
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d101      	bne.n	8001f02 <HAL_RCC_OscConfig+0x12>
 8001efe:	2301      	movs	r3, #1
 8001f00:	e26c      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	f003 0301 	and.w	r3, r3, #1
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	f000 8087 	beq.w	800201e <HAL_RCC_OscConfig+0x12e>
 8001f10:	4b92      	ldr	r3, [pc, #584]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f12:	685b      	ldr	r3, [r3, #4]
 8001f14:	f003 030c 	and.w	r3, r3, #12
 8001f18:	2b04      	cmp	r3, #4
 8001f1a:	d00c      	beq.n	8001f36 <HAL_RCC_OscConfig+0x46>
 8001f1c:	4b8f      	ldr	r3, [pc, #572]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	f003 030c 	and.w	r3, r3, #12
 8001f24:	2b08      	cmp	r3, #8
 8001f26:	d112      	bne.n	8001f4e <HAL_RCC_OscConfig+0x5e>
 8001f28:	4b8c      	ldr	r3, [pc, #560]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f2a:	685b      	ldr	r3, [r3, #4]
 8001f2c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f30:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f34:	d10b      	bne.n	8001f4e <HAL_RCC_OscConfig+0x5e>
 8001f36:	4b89      	ldr	r3, [pc, #548]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d06c      	beq.n	800201c <HAL_RCC_OscConfig+0x12c>
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	2b00      	cmp	r3, #0
 8001f48:	d168      	bne.n	800201c <HAL_RCC_OscConfig+0x12c>
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	e246      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	685b      	ldr	r3, [r3, #4]
 8001f52:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f56:	d106      	bne.n	8001f66 <HAL_RCC_OscConfig+0x76>
 8001f58:	4b80      	ldr	r3, [pc, #512]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	4a7f      	ldr	r2, [pc, #508]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f5e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f62:	6013      	str	r3, [r2, #0]
 8001f64:	e02e      	b.n	8001fc4 <HAL_RCC_OscConfig+0xd4>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	685b      	ldr	r3, [r3, #4]
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d10c      	bne.n	8001f88 <HAL_RCC_OscConfig+0x98>
 8001f6e:	4b7b      	ldr	r3, [pc, #492]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	4a7a      	ldr	r2, [pc, #488]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f74:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f78:	6013      	str	r3, [r2, #0]
 8001f7a:	4b78      	ldr	r3, [pc, #480]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	4a77      	ldr	r2, [pc, #476]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f80:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f84:	6013      	str	r3, [r2, #0]
 8001f86:	e01d      	b.n	8001fc4 <HAL_RCC_OscConfig+0xd4>
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	685b      	ldr	r3, [r3, #4]
 8001f8c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f90:	d10c      	bne.n	8001fac <HAL_RCC_OscConfig+0xbc>
 8001f92:	4b72      	ldr	r3, [pc, #456]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f94:	681b      	ldr	r3, [r3, #0]
 8001f96:	4a71      	ldr	r2, [pc, #452]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001f98:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f9c:	6013      	str	r3, [r2, #0]
 8001f9e:	4b6f      	ldr	r3, [pc, #444]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	4a6e      	ldr	r2, [pc, #440]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fa4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fa8:	6013      	str	r3, [r2, #0]
 8001faa:	e00b      	b.n	8001fc4 <HAL_RCC_OscConfig+0xd4>
 8001fac:	4b6b      	ldr	r3, [pc, #428]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	4a6a      	ldr	r2, [pc, #424]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fb2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001fb6:	6013      	str	r3, [r2, #0]
 8001fb8:	4b68      	ldr	r3, [pc, #416]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	4a67      	ldr	r2, [pc, #412]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fbe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001fc2:	6013      	str	r3, [r2, #0]
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	685b      	ldr	r3, [r3, #4]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d013      	beq.n	8001ff4 <HAL_RCC_OscConfig+0x104>
 8001fcc:	f7ff fcb6 	bl	800193c <HAL_GetTick>
 8001fd0:	6138      	str	r0, [r7, #16]
 8001fd2:	e008      	b.n	8001fe6 <HAL_RCC_OscConfig+0xf6>
 8001fd4:	f7ff fcb2 	bl	800193c <HAL_GetTick>
 8001fd8:	4602      	mov	r2, r0
 8001fda:	693b      	ldr	r3, [r7, #16]
 8001fdc:	1ad3      	subs	r3, r2, r3
 8001fde:	2b64      	cmp	r3, #100	; 0x64
 8001fe0:	d901      	bls.n	8001fe6 <HAL_RCC_OscConfig+0xf6>
 8001fe2:	2303      	movs	r3, #3
 8001fe4:	e1fa      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8001fe6:	4b5d      	ldr	r3, [pc, #372]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d0f0      	beq.n	8001fd4 <HAL_RCC_OscConfig+0xe4>
 8001ff2:	e014      	b.n	800201e <HAL_RCC_OscConfig+0x12e>
 8001ff4:	f7ff fca2 	bl	800193c <HAL_GetTick>
 8001ff8:	6138      	str	r0, [r7, #16]
 8001ffa:	e008      	b.n	800200e <HAL_RCC_OscConfig+0x11e>
 8001ffc:	f7ff fc9e 	bl	800193c <HAL_GetTick>
 8002000:	4602      	mov	r2, r0
 8002002:	693b      	ldr	r3, [r7, #16]
 8002004:	1ad3      	subs	r3, r2, r3
 8002006:	2b64      	cmp	r3, #100	; 0x64
 8002008:	d901      	bls.n	800200e <HAL_RCC_OscConfig+0x11e>
 800200a:	2303      	movs	r3, #3
 800200c:	e1e6      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 800200e:	4b53      	ldr	r3, [pc, #332]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002010:	681b      	ldr	r3, [r3, #0]
 8002012:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002016:	2b00      	cmp	r3, #0
 8002018:	d1f0      	bne.n	8001ffc <HAL_RCC_OscConfig+0x10c>
 800201a:	e000      	b.n	800201e <HAL_RCC_OscConfig+0x12e>
 800201c:	bf00      	nop
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	f003 0302 	and.w	r3, r3, #2
 8002026:	2b00      	cmp	r3, #0
 8002028:	d063      	beq.n	80020f2 <HAL_RCC_OscConfig+0x202>
 800202a:	4b4c      	ldr	r3, [pc, #304]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 800202c:	685b      	ldr	r3, [r3, #4]
 800202e:	f003 030c 	and.w	r3, r3, #12
 8002032:	2b00      	cmp	r3, #0
 8002034:	d00b      	beq.n	800204e <HAL_RCC_OscConfig+0x15e>
 8002036:	4b49      	ldr	r3, [pc, #292]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002038:	685b      	ldr	r3, [r3, #4]
 800203a:	f003 030c 	and.w	r3, r3, #12
 800203e:	2b08      	cmp	r3, #8
 8002040:	d11c      	bne.n	800207c <HAL_RCC_OscConfig+0x18c>
 8002042:	4b46      	ldr	r3, [pc, #280]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002044:	685b      	ldr	r3, [r3, #4]
 8002046:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800204a:	2b00      	cmp	r3, #0
 800204c:	d116      	bne.n	800207c <HAL_RCC_OscConfig+0x18c>
 800204e:	4b43      	ldr	r3, [pc, #268]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	f003 0302 	and.w	r3, r3, #2
 8002056:	2b00      	cmp	r3, #0
 8002058:	d005      	beq.n	8002066 <HAL_RCC_OscConfig+0x176>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	691b      	ldr	r3, [r3, #16]
 800205e:	2b01      	cmp	r3, #1
 8002060:	d001      	beq.n	8002066 <HAL_RCC_OscConfig+0x176>
 8002062:	2301      	movs	r3, #1
 8002064:	e1ba      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8002066:	4b3d      	ldr	r3, [pc, #244]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	695b      	ldr	r3, [r3, #20]
 8002072:	00db      	lsls	r3, r3, #3
 8002074:	4939      	ldr	r1, [pc, #228]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002076:	4313      	orrs	r3, r2
 8002078:	600b      	str	r3, [r1, #0]
 800207a:	e03a      	b.n	80020f2 <HAL_RCC_OscConfig+0x202>
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	691b      	ldr	r3, [r3, #16]
 8002080:	2b00      	cmp	r3, #0
 8002082:	d020      	beq.n	80020c6 <HAL_RCC_OscConfig+0x1d6>
 8002084:	4b36      	ldr	r3, [pc, #216]	; (8002160 <HAL_RCC_OscConfig+0x270>)
 8002086:	2201      	movs	r2, #1
 8002088:	601a      	str	r2, [r3, #0]
 800208a:	f7ff fc57 	bl	800193c <HAL_GetTick>
 800208e:	6138      	str	r0, [r7, #16]
 8002090:	e008      	b.n	80020a4 <HAL_RCC_OscConfig+0x1b4>
 8002092:	f7ff fc53 	bl	800193c <HAL_GetTick>
 8002096:	4602      	mov	r2, r0
 8002098:	693b      	ldr	r3, [r7, #16]
 800209a:	1ad3      	subs	r3, r2, r3
 800209c:	2b02      	cmp	r3, #2
 800209e:	d901      	bls.n	80020a4 <HAL_RCC_OscConfig+0x1b4>
 80020a0:	2303      	movs	r3, #3
 80020a2:	e19b      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80020a4:	4b2d      	ldr	r3, [pc, #180]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f003 0302 	and.w	r3, r3, #2
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d0f0      	beq.n	8002092 <HAL_RCC_OscConfig+0x1a2>
 80020b0:	4b2a      	ldr	r3, [pc, #168]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	695b      	ldr	r3, [r3, #20]
 80020bc:	00db      	lsls	r3, r3, #3
 80020be:	4927      	ldr	r1, [pc, #156]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 80020c0:	4313      	orrs	r3, r2
 80020c2:	600b      	str	r3, [r1, #0]
 80020c4:	e015      	b.n	80020f2 <HAL_RCC_OscConfig+0x202>
 80020c6:	4b26      	ldr	r3, [pc, #152]	; (8002160 <HAL_RCC_OscConfig+0x270>)
 80020c8:	2200      	movs	r2, #0
 80020ca:	601a      	str	r2, [r3, #0]
 80020cc:	f7ff fc36 	bl	800193c <HAL_GetTick>
 80020d0:	6138      	str	r0, [r7, #16]
 80020d2:	e008      	b.n	80020e6 <HAL_RCC_OscConfig+0x1f6>
 80020d4:	f7ff fc32 	bl	800193c <HAL_GetTick>
 80020d8:	4602      	mov	r2, r0
 80020da:	693b      	ldr	r3, [r7, #16]
 80020dc:	1ad3      	subs	r3, r2, r3
 80020de:	2b02      	cmp	r3, #2
 80020e0:	d901      	bls.n	80020e6 <HAL_RCC_OscConfig+0x1f6>
 80020e2:	2303      	movs	r3, #3
 80020e4:	e17a      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80020e6:	4b1d      	ldr	r3, [pc, #116]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	f003 0302 	and.w	r3, r3, #2
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d1f0      	bne.n	80020d4 <HAL_RCC_OscConfig+0x1e4>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	f003 0308 	and.w	r3, r3, #8
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d03a      	beq.n	8002174 <HAL_RCC_OscConfig+0x284>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	699b      	ldr	r3, [r3, #24]
 8002102:	2b00      	cmp	r3, #0
 8002104:	d019      	beq.n	800213a <HAL_RCC_OscConfig+0x24a>
 8002106:	4b17      	ldr	r3, [pc, #92]	; (8002164 <HAL_RCC_OscConfig+0x274>)
 8002108:	2201      	movs	r2, #1
 800210a:	601a      	str	r2, [r3, #0]
 800210c:	f7ff fc16 	bl	800193c <HAL_GetTick>
 8002110:	6138      	str	r0, [r7, #16]
 8002112:	e008      	b.n	8002126 <HAL_RCC_OscConfig+0x236>
 8002114:	f7ff fc12 	bl	800193c <HAL_GetTick>
 8002118:	4602      	mov	r2, r0
 800211a:	693b      	ldr	r3, [r7, #16]
 800211c:	1ad3      	subs	r3, r2, r3
 800211e:	2b02      	cmp	r3, #2
 8002120:	d901      	bls.n	8002126 <HAL_RCC_OscConfig+0x236>
 8002122:	2303      	movs	r3, #3
 8002124:	e15a      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8002126:	4b0d      	ldr	r3, [pc, #52]	; (800215c <HAL_RCC_OscConfig+0x26c>)
 8002128:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800212a:	f003 0302 	and.w	r3, r3, #2
 800212e:	2b00      	cmp	r3, #0
 8002130:	d0f0      	beq.n	8002114 <HAL_RCC_OscConfig+0x224>
 8002132:	2001      	movs	r0, #1
 8002134:	f000 faa6 	bl	8002684 <RCC_Delay>
 8002138:	e01c      	b.n	8002174 <HAL_RCC_OscConfig+0x284>
 800213a:	4b0a      	ldr	r3, [pc, #40]	; (8002164 <HAL_RCC_OscConfig+0x274>)
 800213c:	2200      	movs	r2, #0
 800213e:	601a      	str	r2, [r3, #0]
 8002140:	f7ff fbfc 	bl	800193c <HAL_GetTick>
 8002144:	6138      	str	r0, [r7, #16]
 8002146:	e00f      	b.n	8002168 <HAL_RCC_OscConfig+0x278>
 8002148:	f7ff fbf8 	bl	800193c <HAL_GetTick>
 800214c:	4602      	mov	r2, r0
 800214e:	693b      	ldr	r3, [r7, #16]
 8002150:	1ad3      	subs	r3, r2, r3
 8002152:	2b02      	cmp	r3, #2
 8002154:	d908      	bls.n	8002168 <HAL_RCC_OscConfig+0x278>
 8002156:	2303      	movs	r3, #3
 8002158:	e140      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 800215a:	bf00      	nop
 800215c:	40021000 	.word	0x40021000
 8002160:	42420000 	.word	0x42420000
 8002164:	42420480 	.word	0x42420480
 8002168:	4b9e      	ldr	r3, [pc, #632]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800216a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800216c:	f003 0302 	and.w	r3, r3, #2
 8002170:	2b00      	cmp	r3, #0
 8002172:	d1e9      	bne.n	8002148 <HAL_RCC_OscConfig+0x258>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	f003 0304 	and.w	r3, r3, #4
 800217c:	2b00      	cmp	r3, #0
 800217e:	f000 80a6 	beq.w	80022ce <HAL_RCC_OscConfig+0x3de>
 8002182:	2300      	movs	r3, #0
 8002184:	75fb      	strb	r3, [r7, #23]
 8002186:	4b97      	ldr	r3, [pc, #604]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002188:	69db      	ldr	r3, [r3, #28]
 800218a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800218e:	2b00      	cmp	r3, #0
 8002190:	d10d      	bne.n	80021ae <HAL_RCC_OscConfig+0x2be>
 8002192:	4b94      	ldr	r3, [pc, #592]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002194:	69db      	ldr	r3, [r3, #28]
 8002196:	4a93      	ldr	r2, [pc, #588]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002198:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800219c:	61d3      	str	r3, [r2, #28]
 800219e:	4b91      	ldr	r3, [pc, #580]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80021a0:	69db      	ldr	r3, [r3, #28]
 80021a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021a6:	60bb      	str	r3, [r7, #8]
 80021a8:	68bb      	ldr	r3, [r7, #8]
 80021aa:	2301      	movs	r3, #1
 80021ac:	75fb      	strb	r3, [r7, #23]
 80021ae:	4b8e      	ldr	r3, [pc, #568]	; (80023e8 <HAL_RCC_OscConfig+0x4f8>)
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d118      	bne.n	80021ec <HAL_RCC_OscConfig+0x2fc>
 80021ba:	4b8b      	ldr	r3, [pc, #556]	; (80023e8 <HAL_RCC_OscConfig+0x4f8>)
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	4a8a      	ldr	r2, [pc, #552]	; (80023e8 <HAL_RCC_OscConfig+0x4f8>)
 80021c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021c4:	6013      	str	r3, [r2, #0]
 80021c6:	f7ff fbb9 	bl	800193c <HAL_GetTick>
 80021ca:	6138      	str	r0, [r7, #16]
 80021cc:	e008      	b.n	80021e0 <HAL_RCC_OscConfig+0x2f0>
 80021ce:	f7ff fbb5 	bl	800193c <HAL_GetTick>
 80021d2:	4602      	mov	r2, r0
 80021d4:	693b      	ldr	r3, [r7, #16]
 80021d6:	1ad3      	subs	r3, r2, r3
 80021d8:	2b64      	cmp	r3, #100	; 0x64
 80021da:	d901      	bls.n	80021e0 <HAL_RCC_OscConfig+0x2f0>
 80021dc:	2303      	movs	r3, #3
 80021de:	e0fd      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80021e0:	4b81      	ldr	r3, [pc, #516]	; (80023e8 <HAL_RCC_OscConfig+0x4f8>)
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d0f0      	beq.n	80021ce <HAL_RCC_OscConfig+0x2de>
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	68db      	ldr	r3, [r3, #12]
 80021f0:	2b01      	cmp	r3, #1
 80021f2:	d106      	bne.n	8002202 <HAL_RCC_OscConfig+0x312>
 80021f4:	4b7b      	ldr	r3, [pc, #492]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80021f6:	6a1b      	ldr	r3, [r3, #32]
 80021f8:	4a7a      	ldr	r2, [pc, #488]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80021fa:	f043 0301 	orr.w	r3, r3, #1
 80021fe:	6213      	str	r3, [r2, #32]
 8002200:	e02d      	b.n	800225e <HAL_RCC_OscConfig+0x36e>
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	68db      	ldr	r3, [r3, #12]
 8002206:	2b00      	cmp	r3, #0
 8002208:	d10c      	bne.n	8002224 <HAL_RCC_OscConfig+0x334>
 800220a:	4b76      	ldr	r3, [pc, #472]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800220c:	6a1b      	ldr	r3, [r3, #32]
 800220e:	4a75      	ldr	r2, [pc, #468]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002210:	f023 0301 	bic.w	r3, r3, #1
 8002214:	6213      	str	r3, [r2, #32]
 8002216:	4b73      	ldr	r3, [pc, #460]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002218:	6a1b      	ldr	r3, [r3, #32]
 800221a:	4a72      	ldr	r2, [pc, #456]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800221c:	f023 0304 	bic.w	r3, r3, #4
 8002220:	6213      	str	r3, [r2, #32]
 8002222:	e01c      	b.n	800225e <HAL_RCC_OscConfig+0x36e>
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	68db      	ldr	r3, [r3, #12]
 8002228:	2b05      	cmp	r3, #5
 800222a:	d10c      	bne.n	8002246 <HAL_RCC_OscConfig+0x356>
 800222c:	4b6d      	ldr	r3, [pc, #436]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800222e:	6a1b      	ldr	r3, [r3, #32]
 8002230:	4a6c      	ldr	r2, [pc, #432]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002232:	f043 0304 	orr.w	r3, r3, #4
 8002236:	6213      	str	r3, [r2, #32]
 8002238:	4b6a      	ldr	r3, [pc, #424]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800223a:	6a1b      	ldr	r3, [r3, #32]
 800223c:	4a69      	ldr	r2, [pc, #420]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800223e:	f043 0301 	orr.w	r3, r3, #1
 8002242:	6213      	str	r3, [r2, #32]
 8002244:	e00b      	b.n	800225e <HAL_RCC_OscConfig+0x36e>
 8002246:	4b67      	ldr	r3, [pc, #412]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002248:	6a1b      	ldr	r3, [r3, #32]
 800224a:	4a66      	ldr	r2, [pc, #408]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800224c:	f023 0301 	bic.w	r3, r3, #1
 8002250:	6213      	str	r3, [r2, #32]
 8002252:	4b64      	ldr	r3, [pc, #400]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002254:	6a1b      	ldr	r3, [r3, #32]
 8002256:	4a63      	ldr	r2, [pc, #396]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002258:	f023 0304 	bic.w	r3, r3, #4
 800225c:	6213      	str	r3, [r2, #32]
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	68db      	ldr	r3, [r3, #12]
 8002262:	2b00      	cmp	r3, #0
 8002264:	d015      	beq.n	8002292 <HAL_RCC_OscConfig+0x3a2>
 8002266:	f7ff fb69 	bl	800193c <HAL_GetTick>
 800226a:	6138      	str	r0, [r7, #16]
 800226c:	e00a      	b.n	8002284 <HAL_RCC_OscConfig+0x394>
 800226e:	f7ff fb65 	bl	800193c <HAL_GetTick>
 8002272:	4602      	mov	r2, r0
 8002274:	693b      	ldr	r3, [r7, #16]
 8002276:	1ad3      	subs	r3, r2, r3
 8002278:	f241 3288 	movw	r2, #5000	; 0x1388
 800227c:	4293      	cmp	r3, r2
 800227e:	d901      	bls.n	8002284 <HAL_RCC_OscConfig+0x394>
 8002280:	2303      	movs	r3, #3
 8002282:	e0ab      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 8002284:	4b57      	ldr	r3, [pc, #348]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002286:	6a1b      	ldr	r3, [r3, #32]
 8002288:	f003 0302 	and.w	r3, r3, #2
 800228c:	2b00      	cmp	r3, #0
 800228e:	d0ee      	beq.n	800226e <HAL_RCC_OscConfig+0x37e>
 8002290:	e014      	b.n	80022bc <HAL_RCC_OscConfig+0x3cc>
 8002292:	f7ff fb53 	bl	800193c <HAL_GetTick>
 8002296:	6138      	str	r0, [r7, #16]
 8002298:	e00a      	b.n	80022b0 <HAL_RCC_OscConfig+0x3c0>
 800229a:	f7ff fb4f 	bl	800193c <HAL_GetTick>
 800229e:	4602      	mov	r2, r0
 80022a0:	693b      	ldr	r3, [r7, #16]
 80022a2:	1ad3      	subs	r3, r2, r3
 80022a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80022a8:	4293      	cmp	r3, r2
 80022aa:	d901      	bls.n	80022b0 <HAL_RCC_OscConfig+0x3c0>
 80022ac:	2303      	movs	r3, #3
 80022ae:	e095      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80022b0:	4b4c      	ldr	r3, [pc, #304]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80022b2:	6a1b      	ldr	r3, [r3, #32]
 80022b4:	f003 0302 	and.w	r3, r3, #2
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	d1ee      	bne.n	800229a <HAL_RCC_OscConfig+0x3aa>
 80022bc:	7dfb      	ldrb	r3, [r7, #23]
 80022be:	2b01      	cmp	r3, #1
 80022c0:	d105      	bne.n	80022ce <HAL_RCC_OscConfig+0x3de>
 80022c2:	4b48      	ldr	r3, [pc, #288]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80022c4:	69db      	ldr	r3, [r3, #28]
 80022c6:	4a47      	ldr	r2, [pc, #284]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80022c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80022cc:	61d3      	str	r3, [r2, #28]
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	69db      	ldr	r3, [r3, #28]
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	f000 8081 	beq.w	80023da <HAL_RCC_OscConfig+0x4ea>
 80022d8:	4b42      	ldr	r3, [pc, #264]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80022da:	685b      	ldr	r3, [r3, #4]
 80022dc:	f003 030c 	and.w	r3, r3, #12
 80022e0:	2b08      	cmp	r3, #8
 80022e2:	d061      	beq.n	80023a8 <HAL_RCC_OscConfig+0x4b8>
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	69db      	ldr	r3, [r3, #28]
 80022e8:	2b02      	cmp	r3, #2
 80022ea:	d146      	bne.n	800237a <HAL_RCC_OscConfig+0x48a>
 80022ec:	4b3f      	ldr	r3, [pc, #252]	; (80023ec <HAL_RCC_OscConfig+0x4fc>)
 80022ee:	2200      	movs	r2, #0
 80022f0:	601a      	str	r2, [r3, #0]
 80022f2:	f7ff fb23 	bl	800193c <HAL_GetTick>
 80022f6:	6138      	str	r0, [r7, #16]
 80022f8:	e008      	b.n	800230c <HAL_RCC_OscConfig+0x41c>
 80022fa:	f7ff fb1f 	bl	800193c <HAL_GetTick>
 80022fe:	4602      	mov	r2, r0
 8002300:	693b      	ldr	r3, [r7, #16]
 8002302:	1ad3      	subs	r3, r2, r3
 8002304:	2b02      	cmp	r3, #2
 8002306:	d901      	bls.n	800230c <HAL_RCC_OscConfig+0x41c>
 8002308:	2303      	movs	r3, #3
 800230a:	e067      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 800230c:	4b35      	ldr	r3, [pc, #212]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002314:	2b00      	cmp	r3, #0
 8002316:	d1f0      	bne.n	80022fa <HAL_RCC_OscConfig+0x40a>
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	6a1b      	ldr	r3, [r3, #32]
 800231c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002320:	d108      	bne.n	8002334 <HAL_RCC_OscConfig+0x444>
 8002322:	4b30      	ldr	r3, [pc, #192]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	689b      	ldr	r3, [r3, #8]
 800232e:	492d      	ldr	r1, [pc, #180]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002330:	4313      	orrs	r3, r2
 8002332:	604b      	str	r3, [r1, #4]
 8002334:	4b2b      	ldr	r3, [pc, #172]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002336:	685b      	ldr	r3, [r3, #4]
 8002338:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	6a19      	ldr	r1, [r3, #32]
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002344:	430b      	orrs	r3, r1
 8002346:	4927      	ldr	r1, [pc, #156]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 8002348:	4313      	orrs	r3, r2
 800234a:	604b      	str	r3, [r1, #4]
 800234c:	4b27      	ldr	r3, [pc, #156]	; (80023ec <HAL_RCC_OscConfig+0x4fc>)
 800234e:	2201      	movs	r2, #1
 8002350:	601a      	str	r2, [r3, #0]
 8002352:	f7ff faf3 	bl	800193c <HAL_GetTick>
 8002356:	6138      	str	r0, [r7, #16]
 8002358:	e008      	b.n	800236c <HAL_RCC_OscConfig+0x47c>
 800235a:	f7ff faef 	bl	800193c <HAL_GetTick>
 800235e:	4602      	mov	r2, r0
 8002360:	693b      	ldr	r3, [r7, #16]
 8002362:	1ad3      	subs	r3, r2, r3
 8002364:	2b02      	cmp	r3, #2
 8002366:	d901      	bls.n	800236c <HAL_RCC_OscConfig+0x47c>
 8002368:	2303      	movs	r3, #3
 800236a:	e037      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 800236c:	4b1d      	ldr	r3, [pc, #116]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002374:	2b00      	cmp	r3, #0
 8002376:	d0f0      	beq.n	800235a <HAL_RCC_OscConfig+0x46a>
 8002378:	e02f      	b.n	80023da <HAL_RCC_OscConfig+0x4ea>
 800237a:	4b1c      	ldr	r3, [pc, #112]	; (80023ec <HAL_RCC_OscConfig+0x4fc>)
 800237c:	2200      	movs	r2, #0
 800237e:	601a      	str	r2, [r3, #0]
 8002380:	f7ff fadc 	bl	800193c <HAL_GetTick>
 8002384:	6138      	str	r0, [r7, #16]
 8002386:	e008      	b.n	800239a <HAL_RCC_OscConfig+0x4aa>
 8002388:	f7ff fad8 	bl	800193c <HAL_GetTick>
 800238c:	4602      	mov	r2, r0
 800238e:	693b      	ldr	r3, [r7, #16]
 8002390:	1ad3      	subs	r3, r2, r3
 8002392:	2b02      	cmp	r3, #2
 8002394:	d901      	bls.n	800239a <HAL_RCC_OscConfig+0x4aa>
 8002396:	2303      	movs	r3, #3
 8002398:	e020      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 800239a:	4b12      	ldr	r3, [pc, #72]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023a2:	2b00      	cmp	r3, #0
 80023a4:	d1f0      	bne.n	8002388 <HAL_RCC_OscConfig+0x498>
 80023a6:	e018      	b.n	80023da <HAL_RCC_OscConfig+0x4ea>
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	69db      	ldr	r3, [r3, #28]
 80023ac:	2b01      	cmp	r3, #1
 80023ae:	d101      	bne.n	80023b4 <HAL_RCC_OscConfig+0x4c4>
 80023b0:	2301      	movs	r3, #1
 80023b2:	e013      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80023b4:	4b0b      	ldr	r3, [pc, #44]	; (80023e4 <HAL_RCC_OscConfig+0x4f4>)
 80023b6:	685b      	ldr	r3, [r3, #4]
 80023b8:	60fb      	str	r3, [r7, #12]
 80023ba:	68fb      	ldr	r3, [r7, #12]
 80023bc:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	6a1b      	ldr	r3, [r3, #32]
 80023c4:	429a      	cmp	r2, r3
 80023c6:	d106      	bne.n	80023d6 <HAL_RCC_OscConfig+0x4e6>
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023d2:	429a      	cmp	r2, r3
 80023d4:	d001      	beq.n	80023da <HAL_RCC_OscConfig+0x4ea>
 80023d6:	2301      	movs	r3, #1
 80023d8:	e000      	b.n	80023dc <HAL_RCC_OscConfig+0x4ec>
 80023da:	2300      	movs	r3, #0
 80023dc:	4618      	mov	r0, r3
 80023de:	3718      	adds	r7, #24
 80023e0:	46bd      	mov	sp, r7
 80023e2:	bd80      	pop	{r7, pc}
 80023e4:	40021000 	.word	0x40021000
 80023e8:	40007000 	.word	0x40007000
 80023ec:	42420060 	.word	0x42420060

080023f0 <HAL_RCC_ClockConfig>:
 80023f0:	b580      	push	{r7, lr}
 80023f2:	b084      	sub	sp, #16
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	6039      	str	r1, [r7, #0]
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d101      	bne.n	8002404 <HAL_RCC_ClockConfig+0x14>
 8002400:	2301      	movs	r3, #1
 8002402:	e0d0      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 8002404:	4b6a      	ldr	r3, [pc, #424]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002406:	681b      	ldr	r3, [r3, #0]
 8002408:	f003 0307 	and.w	r3, r3, #7
 800240c:	683a      	ldr	r2, [r7, #0]
 800240e:	429a      	cmp	r2, r3
 8002410:	d910      	bls.n	8002434 <HAL_RCC_ClockConfig+0x44>
 8002412:	4b67      	ldr	r3, [pc, #412]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f023 0207 	bic.w	r2, r3, #7
 800241a:	4965      	ldr	r1, [pc, #404]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 800241c:	683b      	ldr	r3, [r7, #0]
 800241e:	4313      	orrs	r3, r2
 8002420:	600b      	str	r3, [r1, #0]
 8002422:	4b63      	ldr	r3, [pc, #396]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	f003 0307 	and.w	r3, r3, #7
 800242a:	683a      	ldr	r2, [r7, #0]
 800242c:	429a      	cmp	r2, r3
 800242e:	d001      	beq.n	8002434 <HAL_RCC_ClockConfig+0x44>
 8002430:	2301      	movs	r3, #1
 8002432:	e0b8      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f003 0302 	and.w	r3, r3, #2
 800243c:	2b00      	cmp	r3, #0
 800243e:	d020      	beq.n	8002482 <HAL_RCC_ClockConfig+0x92>
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	f003 0304 	and.w	r3, r3, #4
 8002448:	2b00      	cmp	r3, #0
 800244a:	d005      	beq.n	8002458 <HAL_RCC_ClockConfig+0x68>
 800244c:	4b59      	ldr	r3, [pc, #356]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800244e:	685b      	ldr	r3, [r3, #4]
 8002450:	4a58      	ldr	r2, [pc, #352]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002452:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002456:	6053      	str	r3, [r2, #4]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	f003 0308 	and.w	r3, r3, #8
 8002460:	2b00      	cmp	r3, #0
 8002462:	d005      	beq.n	8002470 <HAL_RCC_ClockConfig+0x80>
 8002464:	4b53      	ldr	r3, [pc, #332]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002466:	685b      	ldr	r3, [r3, #4]
 8002468:	4a52      	ldr	r2, [pc, #328]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800246a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800246e:	6053      	str	r3, [r2, #4]
 8002470:	4b50      	ldr	r3, [pc, #320]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002472:	685b      	ldr	r3, [r3, #4]
 8002474:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	689b      	ldr	r3, [r3, #8]
 800247c:	494d      	ldr	r1, [pc, #308]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800247e:	4313      	orrs	r3, r2
 8002480:	604b      	str	r3, [r1, #4]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	f003 0301 	and.w	r3, r3, #1
 800248a:	2b00      	cmp	r3, #0
 800248c:	d040      	beq.n	8002510 <HAL_RCC_ClockConfig+0x120>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	685b      	ldr	r3, [r3, #4]
 8002492:	2b01      	cmp	r3, #1
 8002494:	d107      	bne.n	80024a6 <HAL_RCC_ClockConfig+0xb6>
 8002496:	4b47      	ldr	r3, [pc, #284]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d115      	bne.n	80024ce <HAL_RCC_ClockConfig+0xde>
 80024a2:	2301      	movs	r3, #1
 80024a4:	e07f      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	685b      	ldr	r3, [r3, #4]
 80024aa:	2b02      	cmp	r3, #2
 80024ac:	d107      	bne.n	80024be <HAL_RCC_ClockConfig+0xce>
 80024ae:	4b41      	ldr	r3, [pc, #260]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d109      	bne.n	80024ce <HAL_RCC_ClockConfig+0xde>
 80024ba:	2301      	movs	r3, #1
 80024bc:	e073      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 80024be:	4b3d      	ldr	r3, [pc, #244]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0302 	and.w	r3, r3, #2
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d101      	bne.n	80024ce <HAL_RCC_ClockConfig+0xde>
 80024ca:	2301      	movs	r3, #1
 80024cc:	e06b      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 80024ce:	4b39      	ldr	r3, [pc, #228]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 80024d0:	685b      	ldr	r3, [r3, #4]
 80024d2:	f023 0203 	bic.w	r2, r3, #3
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	685b      	ldr	r3, [r3, #4]
 80024da:	4936      	ldr	r1, [pc, #216]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 80024dc:	4313      	orrs	r3, r2
 80024de:	604b      	str	r3, [r1, #4]
 80024e0:	f7ff fa2c 	bl	800193c <HAL_GetTick>
 80024e4:	60f8      	str	r0, [r7, #12]
 80024e6:	e00a      	b.n	80024fe <HAL_RCC_ClockConfig+0x10e>
 80024e8:	f7ff fa28 	bl	800193c <HAL_GetTick>
 80024ec:	4602      	mov	r2, r0
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	1ad3      	subs	r3, r2, r3
 80024f2:	f241 3288 	movw	r2, #5000	; 0x1388
 80024f6:	4293      	cmp	r3, r2
 80024f8:	d901      	bls.n	80024fe <HAL_RCC_ClockConfig+0x10e>
 80024fa:	2303      	movs	r3, #3
 80024fc:	e053      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 80024fe:	4b2d      	ldr	r3, [pc, #180]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002500:	685b      	ldr	r3, [r3, #4]
 8002502:	f003 020c 	and.w	r2, r3, #12
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	685b      	ldr	r3, [r3, #4]
 800250a:	009b      	lsls	r3, r3, #2
 800250c:	429a      	cmp	r2, r3
 800250e:	d1eb      	bne.n	80024e8 <HAL_RCC_ClockConfig+0xf8>
 8002510:	4b27      	ldr	r3, [pc, #156]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	f003 0307 	and.w	r3, r3, #7
 8002518:	683a      	ldr	r2, [r7, #0]
 800251a:	429a      	cmp	r2, r3
 800251c:	d210      	bcs.n	8002540 <HAL_RCC_ClockConfig+0x150>
 800251e:	4b24      	ldr	r3, [pc, #144]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f023 0207 	bic.w	r2, r3, #7
 8002526:	4922      	ldr	r1, [pc, #136]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002528:	683b      	ldr	r3, [r7, #0]
 800252a:	4313      	orrs	r3, r2
 800252c:	600b      	str	r3, [r1, #0]
 800252e:	4b20      	ldr	r3, [pc, #128]	; (80025b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	f003 0307 	and.w	r3, r3, #7
 8002536:	683a      	ldr	r2, [r7, #0]
 8002538:	429a      	cmp	r2, r3
 800253a:	d001      	beq.n	8002540 <HAL_RCC_ClockConfig+0x150>
 800253c:	2301      	movs	r3, #1
 800253e:	e032      	b.n	80025a6 <HAL_RCC_ClockConfig+0x1b6>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	f003 0304 	and.w	r3, r3, #4
 8002548:	2b00      	cmp	r3, #0
 800254a:	d008      	beq.n	800255e <HAL_RCC_ClockConfig+0x16e>
 800254c:	4b19      	ldr	r3, [pc, #100]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800254e:	685b      	ldr	r3, [r3, #4]
 8002550:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	68db      	ldr	r3, [r3, #12]
 8002558:	4916      	ldr	r1, [pc, #88]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800255a:	4313      	orrs	r3, r2
 800255c:	604b      	str	r3, [r1, #4]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	f003 0308 	and.w	r3, r3, #8
 8002566:	2b00      	cmp	r3, #0
 8002568:	d009      	beq.n	800257e <HAL_RCC_ClockConfig+0x18e>
 800256a:	4b12      	ldr	r3, [pc, #72]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800256c:	685b      	ldr	r3, [r3, #4]
 800256e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	691b      	ldr	r3, [r3, #16]
 8002576:	00db      	lsls	r3, r3, #3
 8002578:	490e      	ldr	r1, [pc, #56]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 800257a:	4313      	orrs	r3, r2
 800257c:	604b      	str	r3, [r1, #4]
 800257e:	f000 f821 	bl	80025c4 <HAL_RCC_GetSysClockFreq>
 8002582:	4602      	mov	r2, r0
 8002584:	4b0b      	ldr	r3, [pc, #44]	; (80025b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002586:	685b      	ldr	r3, [r3, #4]
 8002588:	091b      	lsrs	r3, r3, #4
 800258a:	f003 030f 	and.w	r3, r3, #15
 800258e:	490a      	ldr	r1, [pc, #40]	; (80025b8 <HAL_RCC_ClockConfig+0x1c8>)
 8002590:	5ccb      	ldrb	r3, [r1, r3]
 8002592:	fa22 f303 	lsr.w	r3, r2, r3
 8002596:	4a09      	ldr	r2, [pc, #36]	; (80025bc <HAL_RCC_ClockConfig+0x1cc>)
 8002598:	6013      	str	r3, [r2, #0]
 800259a:	4b09      	ldr	r3, [pc, #36]	; (80025c0 <HAL_RCC_ClockConfig+0x1d0>)
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	4618      	mov	r0, r3
 80025a0:	f7ff f98a 	bl	80018b8 <HAL_InitTick>
 80025a4:	2300      	movs	r3, #0
 80025a6:	4618      	mov	r0, r3
 80025a8:	3710      	adds	r7, #16
 80025aa:	46bd      	mov	sp, r7
 80025ac:	bd80      	pop	{r7, pc}
 80025ae:	bf00      	nop
 80025b0:	40022000 	.word	0x40022000
 80025b4:	40021000 	.word	0x40021000
 80025b8:	08002f08 	.word	0x08002f08
 80025bc:	20000074 	.word	0x20000074
 80025c0:	20000078 	.word	0x20000078

080025c4 <HAL_RCC_GetSysClockFreq>:
 80025c4:	b490      	push	{r4, r7}
 80025c6:	b08a      	sub	sp, #40	; 0x28
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	4b2a      	ldr	r3, [pc, #168]	; (8002674 <HAL_RCC_GetSysClockFreq+0xb0>)
 80025cc:	1d3c      	adds	r4, r7, #4
 80025ce:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80025d0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80025d4:	f240 2301 	movw	r3, #513	; 0x201
 80025d8:	803b      	strh	r3, [r7, #0]
 80025da:	2300      	movs	r3, #0
 80025dc:	61fb      	str	r3, [r7, #28]
 80025de:	2300      	movs	r3, #0
 80025e0:	61bb      	str	r3, [r7, #24]
 80025e2:	2300      	movs	r3, #0
 80025e4:	627b      	str	r3, [r7, #36]	; 0x24
 80025e6:	2300      	movs	r3, #0
 80025e8:	617b      	str	r3, [r7, #20]
 80025ea:	2300      	movs	r3, #0
 80025ec:	623b      	str	r3, [r7, #32]
 80025ee:	4b22      	ldr	r3, [pc, #136]	; (8002678 <HAL_RCC_GetSysClockFreq+0xb4>)
 80025f0:	685b      	ldr	r3, [r3, #4]
 80025f2:	61fb      	str	r3, [r7, #28]
 80025f4:	69fb      	ldr	r3, [r7, #28]
 80025f6:	f003 030c 	and.w	r3, r3, #12
 80025fa:	2b04      	cmp	r3, #4
 80025fc:	d002      	beq.n	8002604 <HAL_RCC_GetSysClockFreq+0x40>
 80025fe:	2b08      	cmp	r3, #8
 8002600:	d003      	beq.n	800260a <HAL_RCC_GetSysClockFreq+0x46>
 8002602:	e02d      	b.n	8002660 <HAL_RCC_GetSysClockFreq+0x9c>
 8002604:	4b1d      	ldr	r3, [pc, #116]	; (800267c <HAL_RCC_GetSysClockFreq+0xb8>)
 8002606:	623b      	str	r3, [r7, #32]
 8002608:	e02d      	b.n	8002666 <HAL_RCC_GetSysClockFreq+0xa2>
 800260a:	69fb      	ldr	r3, [r7, #28]
 800260c:	0c9b      	lsrs	r3, r3, #18
 800260e:	f003 030f 	and.w	r3, r3, #15
 8002612:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002616:	4413      	add	r3, r2
 8002618:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800261c:	617b      	str	r3, [r7, #20]
 800261e:	69fb      	ldr	r3, [r7, #28]
 8002620:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002624:	2b00      	cmp	r3, #0
 8002626:	d013      	beq.n	8002650 <HAL_RCC_GetSysClockFreq+0x8c>
 8002628:	4b13      	ldr	r3, [pc, #76]	; (8002678 <HAL_RCC_GetSysClockFreq+0xb4>)
 800262a:	685b      	ldr	r3, [r3, #4]
 800262c:	0c5b      	lsrs	r3, r3, #17
 800262e:	f003 0301 	and.w	r3, r3, #1
 8002632:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002636:	4413      	add	r3, r2
 8002638:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 800263c:	61bb      	str	r3, [r7, #24]
 800263e:	697b      	ldr	r3, [r7, #20]
 8002640:	4a0e      	ldr	r2, [pc, #56]	; (800267c <HAL_RCC_GetSysClockFreq+0xb8>)
 8002642:	fb02 f203 	mul.w	r2, r2, r3
 8002646:	69bb      	ldr	r3, [r7, #24]
 8002648:	fbb2 f3f3 	udiv	r3, r2, r3
 800264c:	627b      	str	r3, [r7, #36]	; 0x24
 800264e:	e004      	b.n	800265a <HAL_RCC_GetSysClockFreq+0x96>
 8002650:	697b      	ldr	r3, [r7, #20]
 8002652:	4a0b      	ldr	r2, [pc, #44]	; (8002680 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002654:	fb02 f303 	mul.w	r3, r2, r3
 8002658:	627b      	str	r3, [r7, #36]	; 0x24
 800265a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800265c:	623b      	str	r3, [r7, #32]
 800265e:	e002      	b.n	8002666 <HAL_RCC_GetSysClockFreq+0xa2>
 8002660:	4b06      	ldr	r3, [pc, #24]	; (800267c <HAL_RCC_GetSysClockFreq+0xb8>)
 8002662:	623b      	str	r3, [r7, #32]
 8002664:	bf00      	nop
 8002666:	6a3b      	ldr	r3, [r7, #32]
 8002668:	4618      	mov	r0, r3
 800266a:	3728      	adds	r7, #40	; 0x28
 800266c:	46bd      	mov	sp, r7
 800266e:	bc90      	pop	{r4, r7}
 8002670:	4770      	bx	lr
 8002672:	bf00      	nop
 8002674:	08002ef8 	.word	0x08002ef8
 8002678:	40021000 	.word	0x40021000
 800267c:	007a1200 	.word	0x007a1200
 8002680:	003d0900 	.word	0x003d0900

08002684 <RCC_Delay>:
 8002684:	b480      	push	{r7}
 8002686:	b085      	sub	sp, #20
 8002688:	af00      	add	r7, sp, #0
 800268a:	6078      	str	r0, [r7, #4]
 800268c:	4b0a      	ldr	r3, [pc, #40]	; (80026b8 <RCC_Delay+0x34>)
 800268e:	681b      	ldr	r3, [r3, #0]
 8002690:	4a0a      	ldr	r2, [pc, #40]	; (80026bc <RCC_Delay+0x38>)
 8002692:	fba2 2303 	umull	r2, r3, r2, r3
 8002696:	0a5b      	lsrs	r3, r3, #9
 8002698:	687a      	ldr	r2, [r7, #4]
 800269a:	fb02 f303 	mul.w	r3, r2, r3
 800269e:	60fb      	str	r3, [r7, #12]
 80026a0:	bf00      	nop
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	1e5a      	subs	r2, r3, #1
 80026a6:	60fa      	str	r2, [r7, #12]
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d1f9      	bne.n	80026a0 <RCC_Delay+0x1c>
 80026ac:	bf00      	nop
 80026ae:	bf00      	nop
 80026b0:	3714      	adds	r7, #20
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bc80      	pop	{r7}
 80026b6:	4770      	bx	lr
 80026b8:	20000074 	.word	0x20000074
 80026bc:	10624dd3 	.word	0x10624dd3

080026c0 <HAL_TIM_Base_Init>:
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b082      	sub	sp, #8
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	6078      	str	r0, [r7, #4]
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	d101      	bne.n	80026d2 <HAL_TIM_Base_Init+0x12>
 80026ce:	2301      	movs	r3, #1
 80026d0:	e041      	b.n	8002756 <HAL_TIM_Base_Init+0x96>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80026d8:	b2db      	uxtb	r3, r3
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d106      	bne.n	80026ec <HAL_TIM_Base_Init+0x2c>
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	2200      	movs	r2, #0
 80026e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026e6:	6878      	ldr	r0, [r7, #4]
 80026e8:	f7fe fdd8 	bl	800129c <HAL_TIM_Base_MspInit>
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	2202      	movs	r2, #2
 80026f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681a      	ldr	r2, [r3, #0]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	3304      	adds	r3, #4
 80026fc:	4619      	mov	r1, r3
 80026fe:	4610      	mov	r0, r2
 8002700:	f000 fa6a 	bl	8002bd8 <TIM_Base_SetConfig>
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	2201      	movs	r2, #1
 8002708:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	2201      	movs	r2, #1
 8002710:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	2201      	movs	r2, #1
 8002718:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	2201      	movs	r2, #1
 8002720:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	2201      	movs	r2, #1
 8002728:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	2201      	movs	r2, #1
 8002730:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	2201      	movs	r2, #1
 8002738:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	2201      	movs	r2, #1
 8002740:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	2201      	movs	r2, #1
 8002748:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	2201      	movs	r2, #1
 8002750:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002754:	2300      	movs	r3, #0
 8002756:	4618      	mov	r0, r3
 8002758:	3708      	adds	r7, #8
 800275a:	46bd      	mov	sp, r7
 800275c:	bd80      	pop	{r7, pc}
	...

08002760 <HAL_TIM_Base_Start_IT>:
 8002760:	b480      	push	{r7}
 8002762:	b085      	sub	sp, #20
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800276e:	b2db      	uxtb	r3, r3
 8002770:	2b01      	cmp	r3, #1
 8002772:	d001      	beq.n	8002778 <HAL_TIM_Base_Start_IT+0x18>
 8002774:	2301      	movs	r3, #1
 8002776:	e035      	b.n	80027e4 <HAL_TIM_Base_Start_IT+0x84>
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	2202      	movs	r2, #2
 800277c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	68da      	ldr	r2, [r3, #12]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f042 0201 	orr.w	r2, r2, #1
 800278e:	60da      	str	r2, [r3, #12]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	4a16      	ldr	r2, [pc, #88]	; (80027f0 <HAL_TIM_Base_Start_IT+0x90>)
 8002796:	4293      	cmp	r3, r2
 8002798:	d009      	beq.n	80027ae <HAL_TIM_Base_Start_IT+0x4e>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027a2:	d004      	beq.n	80027ae <HAL_TIM_Base_Start_IT+0x4e>
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	4a12      	ldr	r2, [pc, #72]	; (80027f4 <HAL_TIM_Base_Start_IT+0x94>)
 80027aa:	4293      	cmp	r3, r2
 80027ac:	d111      	bne.n	80027d2 <HAL_TIM_Base_Start_IT+0x72>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	689b      	ldr	r3, [r3, #8]
 80027b4:	f003 0307 	and.w	r3, r3, #7
 80027b8:	60fb      	str	r3, [r7, #12]
 80027ba:	68fb      	ldr	r3, [r7, #12]
 80027bc:	2b06      	cmp	r3, #6
 80027be:	d010      	beq.n	80027e2 <HAL_TIM_Base_Start_IT+0x82>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	681a      	ldr	r2, [r3, #0]
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	f042 0201 	orr.w	r2, r2, #1
 80027ce:	601a      	str	r2, [r3, #0]
 80027d0:	e007      	b.n	80027e2 <HAL_TIM_Base_Start_IT+0x82>
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	681a      	ldr	r2, [r3, #0]
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f042 0201 	orr.w	r2, r2, #1
 80027e0:	601a      	str	r2, [r3, #0]
 80027e2:	2300      	movs	r3, #0
 80027e4:	4618      	mov	r0, r3
 80027e6:	3714      	adds	r7, #20
 80027e8:	46bd      	mov	sp, r7
 80027ea:	bc80      	pop	{r7}
 80027ec:	4770      	bx	lr
 80027ee:	bf00      	nop
 80027f0:	40012c00 	.word	0x40012c00
 80027f4:	40000400 	.word	0x40000400

080027f8 <HAL_TIM_IRQHandler>:
 80027f8:	b580      	push	{r7, lr}
 80027fa:	b082      	sub	sp, #8
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	6078      	str	r0, [r7, #4]
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	691b      	ldr	r3, [r3, #16]
 8002806:	f003 0302 	and.w	r3, r3, #2
 800280a:	2b02      	cmp	r3, #2
 800280c:	d122      	bne.n	8002854 <HAL_TIM_IRQHandler+0x5c>
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	68db      	ldr	r3, [r3, #12]
 8002814:	f003 0302 	and.w	r3, r3, #2
 8002818:	2b02      	cmp	r3, #2
 800281a:	d11b      	bne.n	8002854 <HAL_TIM_IRQHandler+0x5c>
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	f06f 0202 	mvn.w	r2, #2
 8002824:	611a      	str	r2, [r3, #16]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	2201      	movs	r2, #1
 800282a:	771a      	strb	r2, [r3, #28]
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	699b      	ldr	r3, [r3, #24]
 8002832:	f003 0303 	and.w	r3, r3, #3
 8002836:	2b00      	cmp	r3, #0
 8002838:	d003      	beq.n	8002842 <HAL_TIM_IRQHandler+0x4a>
 800283a:	6878      	ldr	r0, [r7, #4]
 800283c:	f000 f9b1 	bl	8002ba2 <HAL_TIM_IC_CaptureCallback>
 8002840:	e005      	b.n	800284e <HAL_TIM_IRQHandler+0x56>
 8002842:	6878      	ldr	r0, [r7, #4]
 8002844:	f000 f9a4 	bl	8002b90 <HAL_TIM_OC_DelayElapsedCallback>
 8002848:	6878      	ldr	r0, [r7, #4]
 800284a:	f000 f9b3 	bl	8002bb4 <HAL_TIM_PWM_PulseFinishedCallback>
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	2200      	movs	r2, #0
 8002852:	771a      	strb	r2, [r3, #28]
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	691b      	ldr	r3, [r3, #16]
 800285a:	f003 0304 	and.w	r3, r3, #4
 800285e:	2b04      	cmp	r3, #4
 8002860:	d122      	bne.n	80028a8 <HAL_TIM_IRQHandler+0xb0>
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	68db      	ldr	r3, [r3, #12]
 8002868:	f003 0304 	and.w	r3, r3, #4
 800286c:	2b04      	cmp	r3, #4
 800286e:	d11b      	bne.n	80028a8 <HAL_TIM_IRQHandler+0xb0>
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	f06f 0204 	mvn.w	r2, #4
 8002878:	611a      	str	r2, [r3, #16]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	2202      	movs	r2, #2
 800287e:	771a      	strb	r2, [r3, #28]
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	699b      	ldr	r3, [r3, #24]
 8002886:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800288a:	2b00      	cmp	r3, #0
 800288c:	d003      	beq.n	8002896 <HAL_TIM_IRQHandler+0x9e>
 800288e:	6878      	ldr	r0, [r7, #4]
 8002890:	f000 f987 	bl	8002ba2 <HAL_TIM_IC_CaptureCallback>
 8002894:	e005      	b.n	80028a2 <HAL_TIM_IRQHandler+0xaa>
 8002896:	6878      	ldr	r0, [r7, #4]
 8002898:	f000 f97a 	bl	8002b90 <HAL_TIM_OC_DelayElapsedCallback>
 800289c:	6878      	ldr	r0, [r7, #4]
 800289e:	f000 f989 	bl	8002bb4 <HAL_TIM_PWM_PulseFinishedCallback>
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	2200      	movs	r2, #0
 80028a6:	771a      	strb	r2, [r3, #28]
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	691b      	ldr	r3, [r3, #16]
 80028ae:	f003 0308 	and.w	r3, r3, #8
 80028b2:	2b08      	cmp	r3, #8
 80028b4:	d122      	bne.n	80028fc <HAL_TIM_IRQHandler+0x104>
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	68db      	ldr	r3, [r3, #12]
 80028bc:	f003 0308 	and.w	r3, r3, #8
 80028c0:	2b08      	cmp	r3, #8
 80028c2:	d11b      	bne.n	80028fc <HAL_TIM_IRQHandler+0x104>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	f06f 0208 	mvn.w	r2, #8
 80028cc:	611a      	str	r2, [r3, #16]
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	2204      	movs	r2, #4
 80028d2:	771a      	strb	r2, [r3, #28]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	69db      	ldr	r3, [r3, #28]
 80028da:	f003 0303 	and.w	r3, r3, #3
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d003      	beq.n	80028ea <HAL_TIM_IRQHandler+0xf2>
 80028e2:	6878      	ldr	r0, [r7, #4]
 80028e4:	f000 f95d 	bl	8002ba2 <HAL_TIM_IC_CaptureCallback>
 80028e8:	e005      	b.n	80028f6 <HAL_TIM_IRQHandler+0xfe>
 80028ea:	6878      	ldr	r0, [r7, #4]
 80028ec:	f000 f950 	bl	8002b90 <HAL_TIM_OC_DelayElapsedCallback>
 80028f0:	6878      	ldr	r0, [r7, #4]
 80028f2:	f000 f95f 	bl	8002bb4 <HAL_TIM_PWM_PulseFinishedCallback>
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	2200      	movs	r2, #0
 80028fa:	771a      	strb	r2, [r3, #28]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	691b      	ldr	r3, [r3, #16]
 8002902:	f003 0310 	and.w	r3, r3, #16
 8002906:	2b10      	cmp	r3, #16
 8002908:	d122      	bne.n	8002950 <HAL_TIM_IRQHandler+0x158>
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	68db      	ldr	r3, [r3, #12]
 8002910:	f003 0310 	and.w	r3, r3, #16
 8002914:	2b10      	cmp	r3, #16
 8002916:	d11b      	bne.n	8002950 <HAL_TIM_IRQHandler+0x158>
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	f06f 0210 	mvn.w	r2, #16
 8002920:	611a      	str	r2, [r3, #16]
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	2208      	movs	r2, #8
 8002926:	771a      	strb	r2, [r3, #28]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	69db      	ldr	r3, [r3, #28]
 800292e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002932:	2b00      	cmp	r3, #0
 8002934:	d003      	beq.n	800293e <HAL_TIM_IRQHandler+0x146>
 8002936:	6878      	ldr	r0, [r7, #4]
 8002938:	f000 f933 	bl	8002ba2 <HAL_TIM_IC_CaptureCallback>
 800293c:	e005      	b.n	800294a <HAL_TIM_IRQHandler+0x152>
 800293e:	6878      	ldr	r0, [r7, #4]
 8002940:	f000 f926 	bl	8002b90 <HAL_TIM_OC_DelayElapsedCallback>
 8002944:	6878      	ldr	r0, [r7, #4]
 8002946:	f000 f935 	bl	8002bb4 <HAL_TIM_PWM_PulseFinishedCallback>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	2200      	movs	r2, #0
 800294e:	771a      	strb	r2, [r3, #28]
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	691b      	ldr	r3, [r3, #16]
 8002956:	f003 0301 	and.w	r3, r3, #1
 800295a:	2b01      	cmp	r3, #1
 800295c:	d10e      	bne.n	800297c <HAL_TIM_IRQHandler+0x184>
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	68db      	ldr	r3, [r3, #12]
 8002964:	f003 0301 	and.w	r3, r3, #1
 8002968:	2b01      	cmp	r3, #1
 800296a:	d107      	bne.n	800297c <HAL_TIM_IRQHandler+0x184>
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	f06f 0201 	mvn.w	r2, #1
 8002974:	611a      	str	r2, [r3, #16]
 8002976:	6878      	ldr	r0, [r7, #4]
 8002978:	f7fe fc4c 	bl	8001214 <HAL_TIM_PeriodElapsedCallback>
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	691b      	ldr	r3, [r3, #16]
 8002982:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002986:	2b80      	cmp	r3, #128	; 0x80
 8002988:	d10e      	bne.n	80029a8 <HAL_TIM_IRQHandler+0x1b0>
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	68db      	ldr	r3, [r3, #12]
 8002990:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002994:	2b80      	cmp	r3, #128	; 0x80
 8002996:	d107      	bne.n	80029a8 <HAL_TIM_IRQHandler+0x1b0>
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80029a0:	611a      	str	r2, [r3, #16]
 80029a2:	6878      	ldr	r0, [r7, #4]
 80029a4:	f000 fa67 	bl	8002e76 <HAL_TIMEx_BreakCallback>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	691b      	ldr	r3, [r3, #16]
 80029ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80029b2:	2b40      	cmp	r3, #64	; 0x40
 80029b4:	d10e      	bne.n	80029d4 <HAL_TIM_IRQHandler+0x1dc>
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	68db      	ldr	r3, [r3, #12]
 80029bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80029c0:	2b40      	cmp	r3, #64	; 0x40
 80029c2:	d107      	bne.n	80029d4 <HAL_TIM_IRQHandler+0x1dc>
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80029cc:	611a      	str	r2, [r3, #16]
 80029ce:	6878      	ldr	r0, [r7, #4]
 80029d0:	f000 f8f9 	bl	8002bc6 <HAL_TIM_TriggerCallback>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	691b      	ldr	r3, [r3, #16]
 80029da:	f003 0320 	and.w	r3, r3, #32
 80029de:	2b20      	cmp	r3, #32
 80029e0:	d10e      	bne.n	8002a00 <HAL_TIM_IRQHandler+0x208>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	68db      	ldr	r3, [r3, #12]
 80029e8:	f003 0320 	and.w	r3, r3, #32
 80029ec:	2b20      	cmp	r3, #32
 80029ee:	d107      	bne.n	8002a00 <HAL_TIM_IRQHandler+0x208>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f06f 0220 	mvn.w	r2, #32
 80029f8:	611a      	str	r2, [r3, #16]
 80029fa:	6878      	ldr	r0, [r7, #4]
 80029fc:	f000 fa32 	bl	8002e64 <HAL_TIMEx_CommutCallback>
 8002a00:	bf00      	nop
 8002a02:	3708      	adds	r7, #8
 8002a04:	46bd      	mov	sp, r7
 8002a06:	bd80      	pop	{r7, pc}

08002a08 <HAL_TIM_ConfigClockSource>:
 8002a08:	b580      	push	{r7, lr}
 8002a0a:	b084      	sub	sp, #16
 8002a0c:	af00      	add	r7, sp, #0
 8002a0e:	6078      	str	r0, [r7, #4]
 8002a10:	6039      	str	r1, [r7, #0]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002a18:	2b01      	cmp	r3, #1
 8002a1a:	d101      	bne.n	8002a20 <HAL_TIM_ConfigClockSource+0x18>
 8002a1c:	2302      	movs	r3, #2
 8002a1e:	e0b3      	b.n	8002b88 <HAL_TIM_ConfigClockSource+0x180>
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	2201      	movs	r2, #1
 8002a24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	2202      	movs	r2, #2
 8002a2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	689b      	ldr	r3, [r3, #8]
 8002a36:	60fb      	str	r3, [r7, #12]
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002a3e:	60fb      	str	r3, [r7, #12]
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002a46:	60fb      	str	r3, [r7, #12]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	68fa      	ldr	r2, [r7, #12]
 8002a4e:	609a      	str	r2, [r3, #8]
 8002a50:	683b      	ldr	r3, [r7, #0]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002a58:	d03e      	beq.n	8002ad8 <HAL_TIM_ConfigClockSource+0xd0>
 8002a5a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002a5e:	f200 8087 	bhi.w	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a62:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a66:	f000 8085 	beq.w	8002b74 <HAL_TIM_ConfigClockSource+0x16c>
 8002a6a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a6e:	d87f      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a70:	2b70      	cmp	r3, #112	; 0x70
 8002a72:	d01a      	beq.n	8002aaa <HAL_TIM_ConfigClockSource+0xa2>
 8002a74:	2b70      	cmp	r3, #112	; 0x70
 8002a76:	d87b      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a78:	2b60      	cmp	r3, #96	; 0x60
 8002a7a:	d050      	beq.n	8002b1e <HAL_TIM_ConfigClockSource+0x116>
 8002a7c:	2b60      	cmp	r3, #96	; 0x60
 8002a7e:	d877      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a80:	2b50      	cmp	r3, #80	; 0x50
 8002a82:	d03c      	beq.n	8002afe <HAL_TIM_ConfigClockSource+0xf6>
 8002a84:	2b50      	cmp	r3, #80	; 0x50
 8002a86:	d873      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a88:	2b40      	cmp	r3, #64	; 0x40
 8002a8a:	d058      	beq.n	8002b3e <HAL_TIM_ConfigClockSource+0x136>
 8002a8c:	2b40      	cmp	r3, #64	; 0x40
 8002a8e:	d86f      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a90:	2b30      	cmp	r3, #48	; 0x30
 8002a92:	d064      	beq.n	8002b5e <HAL_TIM_ConfigClockSource+0x156>
 8002a94:	2b30      	cmp	r3, #48	; 0x30
 8002a96:	d86b      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002a98:	2b20      	cmp	r3, #32
 8002a9a:	d060      	beq.n	8002b5e <HAL_TIM_ConfigClockSource+0x156>
 8002a9c:	2b20      	cmp	r3, #32
 8002a9e:	d867      	bhi.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d05c      	beq.n	8002b5e <HAL_TIM_ConfigClockSource+0x156>
 8002aa4:	2b10      	cmp	r3, #16
 8002aa6:	d05a      	beq.n	8002b5e <HAL_TIM_ConfigClockSource+0x156>
 8002aa8:	e062      	b.n	8002b70 <HAL_TIM_ConfigClockSource+0x168>
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	6818      	ldr	r0, [r3, #0]
 8002aae:	683b      	ldr	r3, [r7, #0]
 8002ab0:	6899      	ldr	r1, [r3, #8]
 8002ab2:	683b      	ldr	r3, [r7, #0]
 8002ab4:	685a      	ldr	r2, [r3, #4]
 8002ab6:	683b      	ldr	r3, [r7, #0]
 8002ab8:	68db      	ldr	r3, [r3, #12]
 8002aba:	f000 f95c 	bl	8002d76 <TIM_ETR_SetConfig>
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	689b      	ldr	r3, [r3, #8]
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002acc:	60fb      	str	r3, [r7, #12]
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	68fa      	ldr	r2, [r7, #12]
 8002ad4:	609a      	str	r2, [r3, #8]
 8002ad6:	e04e      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	6818      	ldr	r0, [r3, #0]
 8002adc:	683b      	ldr	r3, [r7, #0]
 8002ade:	6899      	ldr	r1, [r3, #8]
 8002ae0:	683b      	ldr	r3, [r7, #0]
 8002ae2:	685a      	ldr	r2, [r3, #4]
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	68db      	ldr	r3, [r3, #12]
 8002ae8:	f000 f945 	bl	8002d76 <TIM_ETR_SetConfig>
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	689a      	ldr	r2, [r3, #8]
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002afa:	609a      	str	r2, [r3, #8]
 8002afc:	e03b      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	6818      	ldr	r0, [r3, #0]
 8002b02:	683b      	ldr	r3, [r7, #0]
 8002b04:	6859      	ldr	r1, [r3, #4]
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	68db      	ldr	r3, [r3, #12]
 8002b0a:	461a      	mov	r2, r3
 8002b0c:	f000 f8bc 	bl	8002c88 <TIM_TI1_ConfigInputStage>
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	2150      	movs	r1, #80	; 0x50
 8002b16:	4618      	mov	r0, r3
 8002b18:	f000 f913 	bl	8002d42 <TIM_ITRx_SetConfig>
 8002b1c:	e02b      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	6818      	ldr	r0, [r3, #0]
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	6859      	ldr	r1, [r3, #4]
 8002b26:	683b      	ldr	r3, [r7, #0]
 8002b28:	68db      	ldr	r3, [r3, #12]
 8002b2a:	461a      	mov	r2, r3
 8002b2c:	f000 f8da 	bl	8002ce4 <TIM_TI2_ConfigInputStage>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	2160      	movs	r1, #96	; 0x60
 8002b36:	4618      	mov	r0, r3
 8002b38:	f000 f903 	bl	8002d42 <TIM_ITRx_SetConfig>
 8002b3c:	e01b      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	6818      	ldr	r0, [r3, #0]
 8002b42:	683b      	ldr	r3, [r7, #0]
 8002b44:	6859      	ldr	r1, [r3, #4]
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	68db      	ldr	r3, [r3, #12]
 8002b4a:	461a      	mov	r2, r3
 8002b4c:	f000 f89c 	bl	8002c88 <TIM_TI1_ConfigInputStage>
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	2140      	movs	r1, #64	; 0x40
 8002b56:	4618      	mov	r0, r3
 8002b58:	f000 f8f3 	bl	8002d42 <TIM_ITRx_SetConfig>
 8002b5c:	e00b      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681a      	ldr	r2, [r3, #0]
 8002b62:	683b      	ldr	r3, [r7, #0]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	4619      	mov	r1, r3
 8002b68:	4610      	mov	r0, r2
 8002b6a:	f000 f8ea 	bl	8002d42 <TIM_ITRx_SetConfig>
 8002b6e:	e002      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002b70:	bf00      	nop
 8002b72:	e000      	b.n	8002b76 <HAL_TIM_ConfigClockSource+0x16e>
 8002b74:	bf00      	nop
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	2201      	movs	r2, #1
 8002b7a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	2200      	movs	r2, #0
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b86:	2300      	movs	r3, #0
 8002b88:	4618      	mov	r0, r3
 8002b8a:	3710      	adds	r7, #16
 8002b8c:	46bd      	mov	sp, r7
 8002b8e:	bd80      	pop	{r7, pc}

08002b90 <HAL_TIM_OC_DelayElapsedCallback>:
 8002b90:	b480      	push	{r7}
 8002b92:	b083      	sub	sp, #12
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
 8002b98:	bf00      	nop
 8002b9a:	370c      	adds	r7, #12
 8002b9c:	46bd      	mov	sp, r7
 8002b9e:	bc80      	pop	{r7}
 8002ba0:	4770      	bx	lr

08002ba2 <HAL_TIM_IC_CaptureCallback>:
 8002ba2:	b480      	push	{r7}
 8002ba4:	b083      	sub	sp, #12
 8002ba6:	af00      	add	r7, sp, #0
 8002ba8:	6078      	str	r0, [r7, #4]
 8002baa:	bf00      	nop
 8002bac:	370c      	adds	r7, #12
 8002bae:	46bd      	mov	sp, r7
 8002bb0:	bc80      	pop	{r7}
 8002bb2:	4770      	bx	lr

08002bb4 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002bb4:	b480      	push	{r7}
 8002bb6:	b083      	sub	sp, #12
 8002bb8:	af00      	add	r7, sp, #0
 8002bba:	6078      	str	r0, [r7, #4]
 8002bbc:	bf00      	nop
 8002bbe:	370c      	adds	r7, #12
 8002bc0:	46bd      	mov	sp, r7
 8002bc2:	bc80      	pop	{r7}
 8002bc4:	4770      	bx	lr

08002bc6 <HAL_TIM_TriggerCallback>:
 8002bc6:	b480      	push	{r7}
 8002bc8:	b083      	sub	sp, #12
 8002bca:	af00      	add	r7, sp, #0
 8002bcc:	6078      	str	r0, [r7, #4]
 8002bce:	bf00      	nop
 8002bd0:	370c      	adds	r7, #12
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	bc80      	pop	{r7}
 8002bd6:	4770      	bx	lr

08002bd8 <TIM_Base_SetConfig>:
 8002bd8:	b480      	push	{r7}
 8002bda:	b085      	sub	sp, #20
 8002bdc:	af00      	add	r7, sp, #0
 8002bde:	6078      	str	r0, [r7, #4]
 8002be0:	6039      	str	r1, [r7, #0]
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	60fb      	str	r3, [r7, #12]
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	4a25      	ldr	r2, [pc, #148]	; (8002c80 <TIM_Base_SetConfig+0xa8>)
 8002bec:	4293      	cmp	r3, r2
 8002bee:	d007      	beq.n	8002c00 <TIM_Base_SetConfig+0x28>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bf6:	d003      	beq.n	8002c00 <TIM_Base_SetConfig+0x28>
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	4a22      	ldr	r2, [pc, #136]	; (8002c84 <TIM_Base_SetConfig+0xac>)
 8002bfc:	4293      	cmp	r3, r2
 8002bfe:	d108      	bne.n	8002c12 <TIM_Base_SetConfig+0x3a>
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002c06:	60fb      	str	r3, [r7, #12]
 8002c08:	683b      	ldr	r3, [r7, #0]
 8002c0a:	685b      	ldr	r3, [r3, #4]
 8002c0c:	68fa      	ldr	r2, [r7, #12]
 8002c0e:	4313      	orrs	r3, r2
 8002c10:	60fb      	str	r3, [r7, #12]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	4a1a      	ldr	r2, [pc, #104]	; (8002c80 <TIM_Base_SetConfig+0xa8>)
 8002c16:	4293      	cmp	r3, r2
 8002c18:	d007      	beq.n	8002c2a <TIM_Base_SetConfig+0x52>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c20:	d003      	beq.n	8002c2a <TIM_Base_SetConfig+0x52>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	4a17      	ldr	r2, [pc, #92]	; (8002c84 <TIM_Base_SetConfig+0xac>)
 8002c26:	4293      	cmp	r3, r2
 8002c28:	d108      	bne.n	8002c3c <TIM_Base_SetConfig+0x64>
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002c30:	60fb      	str	r3, [r7, #12]
 8002c32:	683b      	ldr	r3, [r7, #0]
 8002c34:	68db      	ldr	r3, [r3, #12]
 8002c36:	68fa      	ldr	r2, [r7, #12]
 8002c38:	4313      	orrs	r3, r2
 8002c3a:	60fb      	str	r3, [r7, #12]
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002c42:	683b      	ldr	r3, [r7, #0]
 8002c44:	695b      	ldr	r3, [r3, #20]
 8002c46:	4313      	orrs	r3, r2
 8002c48:	60fb      	str	r3, [r7, #12]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	68fa      	ldr	r2, [r7, #12]
 8002c4e:	601a      	str	r2, [r3, #0]
 8002c50:	683b      	ldr	r3, [r7, #0]
 8002c52:	689a      	ldr	r2, [r3, #8]
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	62da      	str	r2, [r3, #44]	; 0x2c
 8002c58:	683b      	ldr	r3, [r7, #0]
 8002c5a:	681a      	ldr	r2, [r3, #0]
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	629a      	str	r2, [r3, #40]	; 0x28
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	4a07      	ldr	r2, [pc, #28]	; (8002c80 <TIM_Base_SetConfig+0xa8>)
 8002c64:	4293      	cmp	r3, r2
 8002c66:	d103      	bne.n	8002c70 <TIM_Base_SetConfig+0x98>
 8002c68:	683b      	ldr	r3, [r7, #0]
 8002c6a:	691a      	ldr	r2, [r3, #16]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	2201      	movs	r2, #1
 8002c74:	615a      	str	r2, [r3, #20]
 8002c76:	bf00      	nop
 8002c78:	3714      	adds	r7, #20
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bc80      	pop	{r7}
 8002c7e:	4770      	bx	lr
 8002c80:	40012c00 	.word	0x40012c00
 8002c84:	40000400 	.word	0x40000400

08002c88 <TIM_TI1_ConfigInputStage>:
 8002c88:	b480      	push	{r7}
 8002c8a:	b087      	sub	sp, #28
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	60f8      	str	r0, [r7, #12]
 8002c90:	60b9      	str	r1, [r7, #8]
 8002c92:	607a      	str	r2, [r7, #4]
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	6a1b      	ldr	r3, [r3, #32]
 8002c98:	617b      	str	r3, [r7, #20]
 8002c9a:	68fb      	ldr	r3, [r7, #12]
 8002c9c:	6a1b      	ldr	r3, [r3, #32]
 8002c9e:	f023 0201 	bic.w	r2, r3, #1
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	621a      	str	r2, [r3, #32]
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	699b      	ldr	r3, [r3, #24]
 8002caa:	613b      	str	r3, [r7, #16]
 8002cac:	693b      	ldr	r3, [r7, #16]
 8002cae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002cb2:	613b      	str	r3, [r7, #16]
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	011b      	lsls	r3, r3, #4
 8002cb8:	693a      	ldr	r2, [r7, #16]
 8002cba:	4313      	orrs	r3, r2
 8002cbc:	613b      	str	r3, [r7, #16]
 8002cbe:	697b      	ldr	r3, [r7, #20]
 8002cc0:	f023 030a 	bic.w	r3, r3, #10
 8002cc4:	617b      	str	r3, [r7, #20]
 8002cc6:	697a      	ldr	r2, [r7, #20]
 8002cc8:	68bb      	ldr	r3, [r7, #8]
 8002cca:	4313      	orrs	r3, r2
 8002ccc:	617b      	str	r3, [r7, #20]
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	693a      	ldr	r2, [r7, #16]
 8002cd2:	619a      	str	r2, [r3, #24]
 8002cd4:	68fb      	ldr	r3, [r7, #12]
 8002cd6:	697a      	ldr	r2, [r7, #20]
 8002cd8:	621a      	str	r2, [r3, #32]
 8002cda:	bf00      	nop
 8002cdc:	371c      	adds	r7, #28
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bc80      	pop	{r7}
 8002ce2:	4770      	bx	lr

08002ce4 <TIM_TI2_ConfigInputStage>:
 8002ce4:	b480      	push	{r7}
 8002ce6:	b087      	sub	sp, #28
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	60f8      	str	r0, [r7, #12]
 8002cec:	60b9      	str	r1, [r7, #8]
 8002cee:	607a      	str	r2, [r7, #4]
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	6a1b      	ldr	r3, [r3, #32]
 8002cf4:	f023 0210 	bic.w	r2, r3, #16
 8002cf8:	68fb      	ldr	r3, [r7, #12]
 8002cfa:	621a      	str	r2, [r3, #32]
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	699b      	ldr	r3, [r3, #24]
 8002d00:	617b      	str	r3, [r7, #20]
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	6a1b      	ldr	r3, [r3, #32]
 8002d06:	613b      	str	r3, [r7, #16]
 8002d08:	697b      	ldr	r3, [r7, #20]
 8002d0a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002d0e:	617b      	str	r3, [r7, #20]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	031b      	lsls	r3, r3, #12
 8002d14:	697a      	ldr	r2, [r7, #20]
 8002d16:	4313      	orrs	r3, r2
 8002d18:	617b      	str	r3, [r7, #20]
 8002d1a:	693b      	ldr	r3, [r7, #16]
 8002d1c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002d20:	613b      	str	r3, [r7, #16]
 8002d22:	68bb      	ldr	r3, [r7, #8]
 8002d24:	011b      	lsls	r3, r3, #4
 8002d26:	693a      	ldr	r2, [r7, #16]
 8002d28:	4313      	orrs	r3, r2
 8002d2a:	613b      	str	r3, [r7, #16]
 8002d2c:	68fb      	ldr	r3, [r7, #12]
 8002d2e:	697a      	ldr	r2, [r7, #20]
 8002d30:	619a      	str	r2, [r3, #24]
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	693a      	ldr	r2, [r7, #16]
 8002d36:	621a      	str	r2, [r3, #32]
 8002d38:	bf00      	nop
 8002d3a:	371c      	adds	r7, #28
 8002d3c:	46bd      	mov	sp, r7
 8002d3e:	bc80      	pop	{r7}
 8002d40:	4770      	bx	lr

08002d42 <TIM_ITRx_SetConfig>:
 8002d42:	b480      	push	{r7}
 8002d44:	b085      	sub	sp, #20
 8002d46:	af00      	add	r7, sp, #0
 8002d48:	6078      	str	r0, [r7, #4]
 8002d4a:	6039      	str	r1, [r7, #0]
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	689b      	ldr	r3, [r3, #8]
 8002d50:	60fb      	str	r3, [r7, #12]
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002d58:	60fb      	str	r3, [r7, #12]
 8002d5a:	683a      	ldr	r2, [r7, #0]
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	4313      	orrs	r3, r2
 8002d60:	f043 0307 	orr.w	r3, r3, #7
 8002d64:	60fb      	str	r3, [r7, #12]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	68fa      	ldr	r2, [r7, #12]
 8002d6a:	609a      	str	r2, [r3, #8]
 8002d6c:	bf00      	nop
 8002d6e:	3714      	adds	r7, #20
 8002d70:	46bd      	mov	sp, r7
 8002d72:	bc80      	pop	{r7}
 8002d74:	4770      	bx	lr

08002d76 <TIM_ETR_SetConfig>:
 8002d76:	b480      	push	{r7}
 8002d78:	b087      	sub	sp, #28
 8002d7a:	af00      	add	r7, sp, #0
 8002d7c:	60f8      	str	r0, [r7, #12]
 8002d7e:	60b9      	str	r1, [r7, #8]
 8002d80:	607a      	str	r2, [r7, #4]
 8002d82:	603b      	str	r3, [r7, #0]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	617b      	str	r3, [r7, #20]
 8002d8a:	697b      	ldr	r3, [r7, #20]
 8002d8c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d90:	617b      	str	r3, [r7, #20]
 8002d92:	683b      	ldr	r3, [r7, #0]
 8002d94:	021a      	lsls	r2, r3, #8
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	431a      	orrs	r2, r3
 8002d9a:	68bb      	ldr	r3, [r7, #8]
 8002d9c:	4313      	orrs	r3, r2
 8002d9e:	697a      	ldr	r2, [r7, #20]
 8002da0:	4313      	orrs	r3, r2
 8002da2:	617b      	str	r3, [r7, #20]
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	697a      	ldr	r2, [r7, #20]
 8002da8:	609a      	str	r2, [r3, #8]
 8002daa:	bf00      	nop
 8002dac:	371c      	adds	r7, #28
 8002dae:	46bd      	mov	sp, r7
 8002db0:	bc80      	pop	{r7}
 8002db2:	4770      	bx	lr

08002db4 <HAL_TIMEx_MasterConfigSynchronization>:
 8002db4:	b480      	push	{r7}
 8002db6:	b085      	sub	sp, #20
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	6078      	str	r0, [r7, #4]
 8002dbc:	6039      	str	r1, [r7, #0]
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002dc4:	2b01      	cmp	r3, #1
 8002dc6:	d101      	bne.n	8002dcc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002dc8:	2302      	movs	r3, #2
 8002dca:	e041      	b.n	8002e50 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	2201      	movs	r2, #1
 8002dd0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	2202      	movs	r2, #2
 8002dd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	60fb      	str	r3, [r7, #12]
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	60bb      	str	r3, [r7, #8]
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002df2:	60fb      	str	r3, [r7, #12]
 8002df4:	683b      	ldr	r3, [r7, #0]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	68fa      	ldr	r2, [r7, #12]
 8002dfa:	4313      	orrs	r3, r2
 8002dfc:	60fb      	str	r3, [r7, #12]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	68fa      	ldr	r2, [r7, #12]
 8002e04:	605a      	str	r2, [r3, #4]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	4a14      	ldr	r2, [pc, #80]	; (8002e5c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002e0c:	4293      	cmp	r3, r2
 8002e0e:	d009      	beq.n	8002e24 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002e18:	d004      	beq.n	8002e24 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	4a10      	ldr	r2, [pc, #64]	; (8002e60 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8002e20:	4293      	cmp	r3, r2
 8002e22:	d10c      	bne.n	8002e3e <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002e24:	68bb      	ldr	r3, [r7, #8]
 8002e26:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002e2a:	60bb      	str	r3, [r7, #8]
 8002e2c:	683b      	ldr	r3, [r7, #0]
 8002e2e:	685b      	ldr	r3, [r3, #4]
 8002e30:	68ba      	ldr	r2, [r7, #8]
 8002e32:	4313      	orrs	r3, r2
 8002e34:	60bb      	str	r3, [r7, #8]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	68ba      	ldr	r2, [r7, #8]
 8002e3c:	609a      	str	r2, [r3, #8]
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	2201      	movs	r2, #1
 8002e42:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	2200      	movs	r2, #0
 8002e4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e4e:	2300      	movs	r3, #0
 8002e50:	4618      	mov	r0, r3
 8002e52:	3714      	adds	r7, #20
 8002e54:	46bd      	mov	sp, r7
 8002e56:	bc80      	pop	{r7}
 8002e58:	4770      	bx	lr
 8002e5a:	bf00      	nop
 8002e5c:	40012c00 	.word	0x40012c00
 8002e60:	40000400 	.word	0x40000400

08002e64 <HAL_TIMEx_CommutCallback>:
 8002e64:	b480      	push	{r7}
 8002e66:	b083      	sub	sp, #12
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
 8002e6c:	bf00      	nop
 8002e6e:	370c      	adds	r7, #12
 8002e70:	46bd      	mov	sp, r7
 8002e72:	bc80      	pop	{r7}
 8002e74:	4770      	bx	lr

08002e76 <HAL_TIMEx_BreakCallback>:
 8002e76:	b480      	push	{r7}
 8002e78:	b083      	sub	sp, #12
 8002e7a:	af00      	add	r7, sp, #0
 8002e7c:	6078      	str	r0, [r7, #4]
 8002e7e:	bf00      	nop
 8002e80:	370c      	adds	r7, #12
 8002e82:	46bd      	mov	sp, r7
 8002e84:	bc80      	pop	{r7}
 8002e86:	4770      	bx	lr

08002e88 <__libc_init_array>:
 8002e88:	b570      	push	{r4, r5, r6, lr}
 8002e8a:	2600      	movs	r6, #0
 8002e8c:	4d0c      	ldr	r5, [pc, #48]	; (8002ec0 <__libc_init_array+0x38>)
 8002e8e:	4c0d      	ldr	r4, [pc, #52]	; (8002ec4 <__libc_init_array+0x3c>)
 8002e90:	1b64      	subs	r4, r4, r5
 8002e92:	10a4      	asrs	r4, r4, #2
 8002e94:	42a6      	cmp	r6, r4
 8002e96:	d109      	bne.n	8002eac <__libc_init_array+0x24>
 8002e98:	f000 f822 	bl	8002ee0 <_init>
 8002e9c:	2600      	movs	r6, #0
 8002e9e:	4d0a      	ldr	r5, [pc, #40]	; (8002ec8 <__libc_init_array+0x40>)
 8002ea0:	4c0a      	ldr	r4, [pc, #40]	; (8002ecc <__libc_init_array+0x44>)
 8002ea2:	1b64      	subs	r4, r4, r5
 8002ea4:	10a4      	asrs	r4, r4, #2
 8002ea6:	42a6      	cmp	r6, r4
 8002ea8:	d105      	bne.n	8002eb6 <__libc_init_array+0x2e>
 8002eaa:	bd70      	pop	{r4, r5, r6, pc}
 8002eac:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eb0:	4798      	blx	r3
 8002eb2:	3601      	adds	r6, #1
 8002eb4:	e7ee      	b.n	8002e94 <__libc_init_array+0xc>
 8002eb6:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eba:	4798      	blx	r3
 8002ebc:	3601      	adds	r6, #1
 8002ebe:	e7f2      	b.n	8002ea6 <__libc_init_array+0x1e>
 8002ec0:	08002f18 	.word	0x08002f18
 8002ec4:	08002f18 	.word	0x08002f18
 8002ec8:	08002f18 	.word	0x08002f18
 8002ecc:	08002f1c 	.word	0x08002f1c

08002ed0 <memset>:
 8002ed0:	4603      	mov	r3, r0
 8002ed2:	4402      	add	r2, r0
 8002ed4:	4293      	cmp	r3, r2
 8002ed6:	d100      	bne.n	8002eda <memset+0xa>
 8002ed8:	4770      	bx	lr
 8002eda:	f803 1b01 	strb.w	r1, [r3], #1
 8002ede:	e7f9      	b.n	8002ed4 <memset+0x4>

08002ee0 <_init>:
 8002ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ee2:	bf00      	nop
 8002ee4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002ee6:	bc08      	pop	{r3}
 8002ee8:	469e      	mov	lr, r3
 8002eea:	4770      	bx	lr

08002eec <_fini>:
 8002eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002eee:	bf00      	nop
 8002ef0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002ef2:	bc08      	pop	{r3}
 8002ef4:	469e      	mov	lr, r3
 8002ef6:	4770      	bx	lr
